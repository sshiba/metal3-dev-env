+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/common.sh
++ [[ :/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin: != *\:\/\u\s\r\/\l\o\c\a\l\/\g\o\/\b\i\n\:* ]]
++ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin
+++ go env
++ eval 'GO111MODULE=""
GOARCH="amd64"
GOBIN=""
GOCACHE="/home/capm3/.cache/go-build"
GOENV="/home/capm3/.config/go/env"
GOEXE=""
GOFLAGS=""
GOHOSTARCH="amd64"
GOHOSTOS="linux"
GOINSECURE=""
GOMODCACHE="/home/capm3/go/pkg/mod"
GONOPROXY=""
GONOSUMDB=""
GOOS="linux"
GOPATH="/home/capm3/go"
GOPRIVATE=""
GOPROXY="https://proxy.golang.org,direct"
GOROOT="/usr/local/go"
GOSUMDB="sum.golang.org"
GOTMPDIR=""
GOTOOLDIR="/usr/local/go/pkg/tool/linux_amd64"
GOVCS=""
GOVERSION="go1.16.7"
GCCGO="gccgo"
AR="ar"
CC="gcc"
CXX="g++"
CGO_ENABLED="1"
GOMOD="/dev/null"
CGO_CFLAGS="-g -O2"
CGO_CPPFLAGS=""
CGO_CXXFLAGS="-g -O2"
CGO_FFLAGS="-g -O2"
CGO_LDFLAGS="-g -O2"
PKG_CONFIG="pkg-config"
GOGCCFLAGS="-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2257035604=/tmp/go-build -gno-record-gcc-switches"'
+++ GO111MODULE=
+++ GOARCH=amd64
+++ GOBIN=
+++ GOCACHE=/home/capm3/.cache/go-build
+++ GOENV=/home/capm3/.config/go/env
+++ GOEXE=
+++ GOFLAGS=
+++ GOHOSTARCH=amd64
+++ GOHOSTOS=linux
+++ GOINSECURE=
+++ GOMODCACHE=/home/capm3/go/pkg/mod
+++ GONOPROXY=
+++ GONOSUMDB=
+++ GOOS=linux
+++ GOPATH=/home/capm3/go
+++ GOPRIVATE=
+++ GOPROXY=https://proxy.golang.org,direct
+++ GOROOT=/usr/local/go
+++ GOSUMDB=sum.golang.org
+++ GOTMPDIR=
+++ GOTOOLDIR=/usr/local/go/pkg/tool/linux_amd64
+++ GOVCS=
+++ GOVERSION=go1.16.7
+++ GCCGO=gccgo
+++ AR=ar
+++ CC=gcc
+++ CXX=g++
+++ CGO_ENABLED=1
+++ GOMOD=/dev/null
+++ CGO_CFLAGS='-g -O2'
+++ CGO_CPPFLAGS=
+++ CGO_CXXFLAGS='-g -O2'
+++ CGO_FFLAGS='-g -O2'
+++ CGO_LDFLAGS='-g -O2'
+++ PKG_CONFIG=pkg-config
+++ GOGCCFLAGS='-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2257035604=/tmp/go-build -gno-record-gcc-switches'
++ export GOPATH
++++ dirname /home/capm3/projects/metal3-dev-env/scripts/../lib/common.sh
+++ cd /home/capm3/projects/metal3-dev-env/scripts/../lib/..
+++ pwd
++ SCRIPTDIR=/home/capm3/projects/metal3-dev-env
+++ whoami
++ USER=capm3
++ export USER=capm3
++ USER=capm3
++ '[' -z '' ']'
++ '[' '!' -f /home/capm3/projects/metal3-dev-env/config_capm3.sh ']'
++ CONFIG=/home/capm3/projects/metal3-dev-env/config_capm3.sh
++ source /home/capm3/projects/metal3-dev-env/config_capm3.sh
+++ export KUBECONFIG=/home/capm3/.kube/config
+++ KUBECONFIG=/home/capm3/.kube/config
+++ export K8S_AUTH_KUBECONFIG=/home/capm3/.kube/config
+++ K8S_AUTH_KUBECONFIG=/home/capm3/.kube/config
+++ export NUM_NODES=7
+++ NUM_NODES=7
+++ export NUM_OF_MASTER_REPLICAS=3
+++ NUM_OF_MASTER_REPLICAS=3
+++ export NUM_OF_WORKER_REPLICAS=3
+++ NUM_OF_WORKER_REPLICAS=3
+++ export CAPM3_VERSION=v1beta1
+++ CAPM3_VERSION=v1beta1
+++ export CAPI_VERSION=v1beta1
+++ CAPI_VERSION=v1beta1
+++ export KUBERNETES_VERSION=v1.21.0
+++ KUBERNETES_VERSION=v1.21.0
+++ export UPGRADED_K8S_VERSION=v1.22.2
+++ UPGRADED_K8S_VERSION=v1.22.2
+++ export IMAGE_OS=Ubuntu
+++ IMAGE_OS=Ubuntu
+++ export IMAGE_USERNAME=metal3
+++ IMAGE_USERNAME=metal3
+++ export EPHEMERAL_CLUSTER=kind
+++ EPHEMERAL_CLUSTER=kind
++ export MARIADB_HOST=mariaDB
++ MARIADB_HOST=mariaDB
++ export MARIADB_HOST_IP=127.0.0.1
++ MARIADB_HOST_IP=127.0.0.1
++ ADDN_DNS=
++ EXT_IF=
++ PRO_IF=
++ MANAGE_BR_BRIDGE=y
++ MANAGE_PRO_BRIDGE=y
++ MANAGE_INT_BRIDGE=y
++ INT_IF=
++ ROOT_DISK_NAME=/dev/sda
++ NODE_HOSTNAME_FORMAT=node-%d
++ source /etc/os-release
+++ NAME=Ubuntu
+++ VERSION='20.04.3 LTS (Focal Fossa)'
+++ ID=ubuntu
+++ ID_LIKE=debian
+++ PRETTY_NAME='Ubuntu 20.04.3 LTS'
+++ VERSION_ID=20.04
+++ HOME_URL=https://www.ubuntu.com/
+++ SUPPORT_URL=https://help.ubuntu.com/
+++ BUG_REPORT_URL=https://bugs.launchpad.net/ubuntu/
+++ PRIVACY_POLICY_URL=https://www.ubuntu.com/legal/terms-and-policies/privacy-policy
+++ VERSION_CODENAME=focal
+++ UBUNTU_CODENAME=focal
++ export DISTRO=ubuntu20
++ DISTRO=ubuntu20
++ export OS=ubuntu
++ OS=ubuntu
++ export OS_VERSION_ID=20.04
++ OS_VERSION_ID=20.04
++ SUPPORTED_DISTROS=(centos8 rhel8 ubuntu18 ubuntu20)
++ export SUPPORTED_DISTROS
++ [[ ! centos8 rhel8 ubuntu18 ubuntu20 =~ ubuntu20 ]]
++ [[ ubuntu == ubuntu ]]
++ export CONTAINER_RUNTIME=docker
++ CONTAINER_RUNTIME=docker
++ [[ docker == \p\o\d\m\a\n ]]
++ export POD_NAME=
++ POD_NAME=
++ export POD_NAME_INFRA=
++ POD_NAME_INFRA=
++ export SSH_KEY=/home/capm3/.ssh/id_rsa
++ SSH_KEY=/home/capm3/.ssh/id_rsa
++ export SSH_PUB_KEY=/home/capm3/.ssh/id_rsa.pub
++ SSH_PUB_KEY=/home/capm3/.ssh/id_rsa.pub
++ '[' '!' -f /home/capm3/.ssh/id_rsa ']'
++ FILESYSTEM=/
++ CAPM3_VERSION_LIST='v1alpha4 v1alpha5 v1beta1'
++ export CAPM3_VERSION=v1beta1
++ CAPM3_VERSION=v1beta1
++ '[' v1beta1 == v1alpha4 ']'
++ '[' v1beta1 == v1alpha5 ']'
++ '[' v1beta1 == v1beta1 ']'
++ export CAPI_VERSION=v1beta1
++ CAPI_VERSION=v1beta1
++ export M3PATH=/home/capm3/go/src/github.com/metal3-io
++ M3PATH=/home/capm3/go/src/github.com/metal3-io
++ export BMOPATH=/home/capm3/go/src/github.com/metal3-io/baremetal-operator
++ BMOPATH=/home/capm3/go/src/github.com/metal3-io/baremetal-operator
++ export RUN_LOCAL_IRONIC_SCRIPT=/home/capm3/go/src/github.com/metal3-io/baremetal-operator/tools/run_local_ironic.sh
++ RUN_LOCAL_IRONIC_SCRIPT=/home/capm3/go/src/github.com/metal3-io/baremetal-operator/tools/run_local_ironic.sh
++ export CAPM3PATH=/home/capm3/go/src/github.com/metal3-io/cluster-api-provider-metal3
++ CAPM3PATH=/home/capm3/go/src/github.com/metal3-io/cluster-api-provider-metal3
++ export CAPM3_BASE_URL=metal3-io/cluster-api-provider-metal3
++ CAPM3_BASE_URL=metal3-io/cluster-api-provider-metal3
++ export CAPM3REPO=https://github.com/metal3-io/cluster-api-provider-metal3
++ CAPM3REPO=https://github.com/metal3-io/cluster-api-provider-metal3
++ export IPAMPATH=/home/capm3/go/src/github.com/metal3-io/ip-address-manager
++ IPAMPATH=/home/capm3/go/src/github.com/metal3-io/ip-address-manager
++ export IPAM_BASE_URL=metal3-io/ip-address-manager
++ IPAM_BASE_URL=metal3-io/ip-address-manager
++ export IPAMREPO=https://github.com/metal3-io/ip-address-manager
++ IPAMREPO=https://github.com/metal3-io/ip-address-manager
++ '[' v1beta1 == v1alpha3 ']'
++ '[' v1beta1 == v1alpha4 ']'
++ IPAMBRANCH=main
++ IPA_DOWNLOAD_ENABLED=true
++ CAPI_BASE_URL=kubernetes-sigs/cluster-api
++ '[' v1beta1 == v1alpha4 ']'
++ '[' v1beta1 == v1alpha5 ']'
++ CAPM3BRANCH=main
++ BMOREPO=https://github.com/metal3-io/baremetal-operator.git
++ BMOBRANCH=master
++ FORCE_REPO_UPDATE=true
++ BMOCOMMIT=HEAD
++ BMO_RUN_LOCAL=false
++ CAPM3_RUN_LOCAL=false
++ WORKING_DIR=/opt/metal3-dev-env
++ NODES_FILE=/opt/metal3-dev-env/ironic_nodes.json
++ NODES_PLATFORM=libvirt
++ export NAMESPACE=metal3
++ NAMESPACE=metal3
++ export NUM_NODES=7
++ NUM_NODES=7
++ export NUM_OF_MASTER_REPLICAS=3
++ NUM_OF_MASTER_REPLICAS=3
++ export NUM_OF_WORKER_REPLICAS=3
++ NUM_OF_WORKER_REPLICAS=3
++ export VM_EXTRADISKS=false
++ VM_EXTRADISKS=false
++ export VM_EXTRADISKS_FILE_SYSTEM=ext4
++ VM_EXTRADISKS_FILE_SYSTEM=ext4
++ export VM_EXTRADISKS_MOUNT_DIR=/mnt/disk2
++ VM_EXTRADISKS_MOUNT_DIR=/mnt/disk2
++ export NODE_DRAIN_TIMEOUT=0s
++ NODE_DRAIN_TIMEOUT=0s
++ export MAX_SURGE_VALUE=1
++ MAX_SURGE_VALUE=1
++ export DOCKER_REGISTRY_IMAGE=registry:2.7.1
++ DOCKER_REGISTRY_IMAGE=registry:2.7.1
++ export CONTAINER_REGISTRY=quay.io
++ CONTAINER_REGISTRY=quay.io
++ export VBMC_IMAGE=quay.io/metal3-io/vbmc
++ VBMC_IMAGE=quay.io/metal3-io/vbmc
++ export SUSHY_TOOLS_IMAGE=quay.io/metal3-io/sushy-tools
++ SUSHY_TOOLS_IMAGE=quay.io/metal3-io/sushy-tools
++ export IRONIC_TLS_SETUP=true
++ IRONIC_TLS_SETUP=true
++ export IRONIC_BASIC_AUTH=true
++ IRONIC_BASIC_AUTH=true
++ export IPA_DOWNLOADER_IMAGE=quay.io/metal3-io/ironic-ipa-downloader
++ IPA_DOWNLOADER_IMAGE=quay.io/metal3-io/ironic-ipa-downloader
++ export IRONIC_IMAGE=quay.io/metal3-io/ironic
++ IRONIC_IMAGE=quay.io/metal3-io/ironic
++ export IRONIC_CLIENT_IMAGE=quay.io/metal3-io/ironic-client
++ IRONIC_CLIENT_IMAGE=quay.io/metal3-io/ironic-client
++ export IRONIC_DATA_DIR=/opt/metal3-dev-env/ironic
++ IRONIC_DATA_DIR=/opt/metal3-dev-env/ironic
++ export IRONIC_IMAGE_DIR=/opt/metal3-dev-env/ironic/html/images
++ IRONIC_IMAGE_DIR=/opt/metal3-dev-env/ironic/html/images
++ export IRONIC_KEEPALIVED_IMAGE=quay.io/metal3-io/keepalived
++ IRONIC_KEEPALIVED_IMAGE=quay.io/metal3-io/keepalived
++ '[' v1beta1 == v1alpha4 ']'
++ export IRONIC_NAMESPACE=baremetal-operator-system
++ IRONIC_NAMESPACE=baremetal-operator-system
++ export NAMEPREFIX=baremetal-operator
++ NAMEPREFIX=baremetal-operator
++ export RESTART_CONTAINER_CERTIFICATE_UPDATED=true
++ RESTART_CONTAINER_CERTIFICATE_UPDATED=true
++ export BAREMETAL_OPERATOR_IMAGE=quay.io/metal3-io/baremetal-operator
++ BAREMETAL_OPERATOR_IMAGE=quay.io/metal3-io/baremetal-operator
++ export OPENSTACK_CONFIG=/home/capm3/.config/openstack/clouds.yaml
++ OPENSTACK_CONFIG=/home/capm3/.config/openstack/clouds.yaml
++ '[' v1beta1 == v1alpha4 ']'
++ '[' v1beta1 == v1alpha5 ']'
++ export CAPM3_IMAGE=quay.io/metal3-io/cluster-api-provider-metal3:main
++ CAPM3_IMAGE=quay.io/metal3-io/cluster-api-provider-metal3:main
++ export IPAM_IMAGE=quay.io/metal3-io/ip-address-manager:main
++ IPAM_IMAGE=quay.io/metal3-io/ip-address-manager:main
++ export DEFAULT_HOSTS_MEMORY=4096
++ DEFAULT_HOSTS_MEMORY=4096
++ export CLUSTER_NAME=test1
++ CLUSTER_NAME=test1
++ export CLUSTER_APIENDPOINT_IP=192.168.111.249
++ CLUSTER_APIENDPOINT_IP=192.168.111.249
++ export KUBERNETES_VERSION=v1.21.0
++ KUBERNETES_VERSION=v1.21.0
++ export KUBERNETES_BINARIES_VERSION=v1.21.0
++ KUBERNETES_BINARIES_VERSION=v1.21.0
++ export KUBERNETES_BINARIES_CONFIG_VERSION=v0.2.7
++ KUBERNETES_BINARIES_CONFIG_VERSION=v0.2.7
++ '[' docker == docker ']'
++ export EPHEMERAL_CLUSTER=kind
++ EPHEMERAL_CLUSTER=kind
++ export KUSTOMIZE_VERSION=v4.1.3
++ KUSTOMIZE_VERSION=v4.1.3
++ export KIND_VERSION=v0.11.1
++ KIND_VERSION=v0.11.1
++ '[' v1.21.0 == v1.21.2 ']'
++ export KIND_NODE_IMAGE_VERSION=v1.22.2
++ KIND_NODE_IMAGE_VERSION=v1.22.2
++ export MINIKUBE_VERSION=v1.23.2
++ MINIKUBE_VERSION=v1.23.2
++ export ANSIBLE_VERSION=4.8.0
++ ANSIBLE_VERSION=4.8.0
++ SKIP_RETRIES=false
++ TEST_TIME_INTERVAL=10
++ TEST_MAX_TIME=240
++ FAILS=0
++ RESULT_STR=
++ export ANSIBLE_DISPLAY_SKIPPED_HOSTS=no
++ ANSIBLE_DISPLAY_SKIPPED_HOSTS=no
++ '[' 7 -lt 6 ']'
++ export LIBVIRT_DEFAULT_URI=qemu:///system
++ LIBVIRT_DEFAULT_URI=qemu:///system
++ '[' capm3 '!=' root ']'
++ '[' /run/user/1000 == /run/user/0 ']'
++ sudo -n uptime
++ export USE_FIREWALLD=False
++ USE_FIREWALLD=False
++ [[ ubuntu20 == \r\h\e\l\8 ]]
++ [[ ubuntu20 == \c\e\n\t\o\s\8 ]]
+++ df / --output=fstype
+++ tail -n 1
++ FSTYPE=ext4
++ case ${FSTYPE} in
++ '[' '!' -d /opt/metal3-dev-env ']'
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/releases.sh
++ CAPM3RELEASEPATH=https://api.github.com/repos/metal3-io/cluster-api-provider-metal3/releases
++ CAPIRELEASEPATH=https://api.github.com/repos/kubernetes-sigs/cluster-api/releases
++ '[' v1beta1 == v1alpha3 ']'
++ '[' v1beta1 == v1alpha4 ']'
+++ get_latest_release https://api.github.com/repos/kubernetes-sigs/cluster-api/releases v1.0.
+++ set +x
+++ echo v1.0.0
++ export CAPIRELEASE=v1.0.0
++ CAPIRELEASE=v1.0.0
++ '[' v1beta1 == v1alpha4 ']'
++ '[' v1beta1 == v1alpha5 ']'
++ export CAPM3RELEASE=v1.0.0
++ CAPM3RELEASE=v1.0.0
++ [[ v1.0.0 == '' ]]
++ [[ v1.0.0 == '' ]]
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/network.sh
++ export CLUSTER_PROVISIONING_INTERFACE=ironicendpoint
++ CLUSTER_PROVISIONING_INTERFACE=ironicendpoint
++ export POD_CIDR=192.168.0.0/18
++ POD_CIDR=192.168.0.0/18
++ PROVISIONING_IPV6=false
++ IPV6_ADDR_PREFIX=fd2e:6f44:5dd8:b856
++ [[ false == \t\r\u\e ]]
++ export BOOT_MODE=legacy
++ BOOT_MODE=legacy
++ export PROVISIONING_NETWORK=172.22.0.0/24
++ PROVISIONING_NETWORK=172.22.0.0/24
++ [[ legacy == \l\e\g\a\c\y ]]
++ export LIBVIRT_FIRMWARE=bios
++ LIBVIRT_FIRMWARE=bios
++ export LIBVIRT_SECURE_BOOT=false
++ LIBVIRT_SECURE_BOOT=false
++ prefixlen PROVISIONING_CIDR 172.22.0.0/24
++ resultvar=PROVISIONING_CIDR
++ network=172.22.0.0/24
+++ python -c 'import ipaddress; print(ipaddress.ip_network(u"172.22.0.0/24").prefixlen)'
++ result=24
++ eval PROVISIONING_CIDR=24
+++ PROVISIONING_CIDR=24
++ export PROVISIONING_CIDR
++ export PROVISIONING_CIDR
+++ python -c 'import ipaddress; print(ipaddress.ip_network(u"172.22.0.0/24").netmask)'
++ export PROVISIONING_NETMASK=255.255.255.0
++ PROVISIONING_NETMASK=255.255.255.0
++ network_address PROVISIONING_IP 172.22.0.0/24 1
++ resultvar=PROVISIONING_IP
++ network=172.22.0.0/24
++ record=1
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 1 - 1, None)))'
++ result=172.22.0.1
++ eval PROVISIONING_IP=172.22.0.1
+++ PROVISIONING_IP=172.22.0.1
++ export PROVISIONING_IP
++ network_address CLUSTER_PROVISIONING_IP 172.22.0.0/24 2
++ resultvar=CLUSTER_PROVISIONING_IP
++ network=172.22.0.0/24
++ record=2
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 2 - 1, None)))'
++ result=172.22.0.2
++ eval CLUSTER_PROVISIONING_IP=172.22.0.2
+++ CLUSTER_PROVISIONING_IP=172.22.0.2
++ export CLUSTER_PROVISIONING_IP
++ export PROVISIONING_IP
++ export CLUSTER_PROVISIONING_IP
++ [[ 172.22.0.1 == *\:* ]]
++ export PROVISIONING_URL_HOST=172.22.0.1
++ PROVISIONING_URL_HOST=172.22.0.1
++ export CLUSTER_URL_HOST=172.22.0.2
++ CLUSTER_URL_HOST=172.22.0.2
++ [[ 192.168.111.249 == *\:* ]]
++ export CLUSTER_APIENDPOINT_HOST=192.168.111.249
++ CLUSTER_APIENDPOINT_HOST=192.168.111.249
++ export CLUSTER_APIENDPOINT_PORT=6443
++ CLUSTER_APIENDPOINT_PORT=6443
++ network_address dhcp_range_start 172.22.0.0/24 10
++ resultvar=dhcp_range_start
++ network=172.22.0.0/24
++ record=10
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 10 - 1, None)))'
++ result=172.22.0.10
++ eval dhcp_range_start=172.22.0.10
+++ dhcp_range_start=172.22.0.10
++ export dhcp_range_start
++ network_address dhcp_range_end 172.22.0.0/24 100
++ resultvar=dhcp_range_end
++ network=172.22.0.0/24
++ record=100
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 100 - 1, None)))'
++ result=172.22.0.100
++ eval dhcp_range_end=172.22.0.100
+++ dhcp_range_end=172.22.0.100
++ export dhcp_range_end
++ network_address PROVISIONING_POOL_RANGE_START 172.22.0.0/24 100
++ resultvar=PROVISIONING_POOL_RANGE_START
++ network=172.22.0.0/24
++ record=100
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 100 - 1, None)))'
++ result=172.22.0.100
++ eval PROVISIONING_POOL_RANGE_START=172.22.0.100
+++ PROVISIONING_POOL_RANGE_START=172.22.0.100
++ export PROVISIONING_POOL_RANGE_START
++ network_address PROVISIONING_POOL_RANGE_END 172.22.0.0/24 200
++ resultvar=PROVISIONING_POOL_RANGE_END
++ network=172.22.0.0/24
++ record=200
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 200 - 1, None)))'
++ result=172.22.0.200
++ eval PROVISIONING_POOL_RANGE_END=172.22.0.200
+++ PROVISIONING_POOL_RANGE_END=172.22.0.200
++ export PROVISIONING_POOL_RANGE_END
++ export PROVISIONING_POOL_RANGE_START
++ export PROVISIONING_POOL_RANGE_END
++ export CLUSTER_DHCP_RANGE=172.22.0.10,172.22.0.100
++ CLUSTER_DHCP_RANGE=172.22.0.10,172.22.0.100
++ EXTERNAL_SUBNET=
++ [[ -n '' ]]
++ export IP_STACK=v4
++ IP_STACK=v4
++ [[ v4 == \v\4 ]]
++ export EXTERNAL_SUBNET_V4=192.168.111.0/24
++ EXTERNAL_SUBNET_V4=192.168.111.0/24
++ export EXTERNAL_SUBNET_V6=
++ EXTERNAL_SUBNET_V6=
++ [[ kind == \m\i\n\i\k\u\b\e ]]
++ [[ -n 192.168.111.0/24 ]]
++ prefixlen EXTERNAL_SUBNET_V4_PREFIX 192.168.111.0/24
++ resultvar=EXTERNAL_SUBNET_V4_PREFIX
++ network=192.168.111.0/24
+++ python -c 'import ipaddress; print(ipaddress.ip_network(u"192.168.111.0/24").prefixlen)'
++ result=24
++ eval EXTERNAL_SUBNET_V4_PREFIX=24
+++ EXTERNAL_SUBNET_V4_PREFIX=24
++ export EXTERNAL_SUBNET_V4_PREFIX
++ export EXTERNAL_SUBNET_V4_PREFIX
++ [[ -z '' ]]
++ network_address EXTERNAL_SUBNET_V4_HOST 192.168.111.0/24 1
++ resultvar=EXTERNAL_SUBNET_V4_HOST
++ network=192.168.111.0/24
++ record=1
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"192.168.111.0/24").hosts(), 1 - 1, None)))'
++ result=192.168.111.1
++ eval EXTERNAL_SUBNET_V4_HOST=192.168.111.1
+++ EXTERNAL_SUBNET_V4_HOST=192.168.111.1
++ export EXTERNAL_SUBNET_V4_HOST
++ network_address VIRSH_DHCP_V4_START 192.168.111.0/24 20
++ resultvar=VIRSH_DHCP_V4_START
++ network=192.168.111.0/24
++ record=20
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"192.168.111.0/24").hosts(), 20 - 1, None)))'
++ result=192.168.111.20
++ eval VIRSH_DHCP_V4_START=192.168.111.20
+++ VIRSH_DHCP_V4_START=192.168.111.20
++ export VIRSH_DHCP_V4_START
++ network_address VIRSH_DHCP_V4_END 192.168.111.0/24 60
++ resultvar=VIRSH_DHCP_V4_END
++ network=192.168.111.0/24
++ record=60
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"192.168.111.0/24").hosts(), 60 - 1, None)))'
++ result=192.168.111.60
++ eval VIRSH_DHCP_V4_END=192.168.111.60
+++ VIRSH_DHCP_V4_END=192.168.111.60
++ export VIRSH_DHCP_V4_END
++ network_address BAREMETALV4_POOL_RANGE_START 192.168.111.0/24 100
++ resultvar=BAREMETALV4_POOL_RANGE_START
++ network=192.168.111.0/24
++ record=100
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"192.168.111.0/24").hosts(), 100 - 1, None)))'
++ result=192.168.111.100
++ eval BAREMETALV4_POOL_RANGE_START=192.168.111.100
+++ BAREMETALV4_POOL_RANGE_START=192.168.111.100
++ export BAREMETALV4_POOL_RANGE_START
++ network_address BAREMETALV4_POOL_RANGE_END 192.168.111.0/24 200
++ resultvar=BAREMETALV4_POOL_RANGE_END
++ network=192.168.111.0/24
++ record=200
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"192.168.111.0/24").hosts(), 200 - 1, None)))'
++ result=192.168.111.200
++ eval BAREMETALV4_POOL_RANGE_END=192.168.111.200
+++ BAREMETALV4_POOL_RANGE_END=192.168.111.200
++ export BAREMETALV4_POOL_RANGE_END
++ export VIRSH_DHCP_V4_START
++ export VIRSH_DHCP_V4_END
++ export BAREMETALV4_POOL_RANGE_START
++ export BAREMETALV4_POOL_RANGE_END
++ [[ -n '' ]]
++ export EXTERNAL_SUBNET_V6_HOST=
++ EXTERNAL_SUBNET_V6_HOST=
++ export EXTERNAL_SUBNET_V6_PREFIX=
++ EXTERNAL_SUBNET_V6_PREFIX=
++ export BAREMETALV6_POOL_RANGE_START=
++ BAREMETALV6_POOL_RANGE_START=
++ export BAREMETALV6_POOL_RANGE_END=
++ BAREMETALV6_POOL_RANGE_END=
++ export REGISTRY_PORT=5000
++ REGISTRY_PORT=5000
++ export HTTP_PORT=6180
++ HTTP_PORT=6180
++ export IRONIC_INSPECTOR_PORT=5050
++ IRONIC_INSPECTOR_PORT=5050
++ export IRONIC_API_PORT=6385
++ IRONIC_API_PORT=6385
++ [[ -n 192.168.111.1 ]]
++ export REGISTRY=192.168.111.1:5000
++ REGISTRY=192.168.111.1:5000
++ network_address INITIAL_IRONICBRIDGE_IP 172.22.0.0/24 9
++ resultvar=INITIAL_IRONICBRIDGE_IP
++ network=172.22.0.0/24
++ record=9
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 9 - 1, None)))'
++ result=172.22.0.9
++ eval INITIAL_IRONICBRIDGE_IP=172.22.0.9
+++ INITIAL_IRONICBRIDGE_IP=172.22.0.9
++ export INITIAL_IRONICBRIDGE_IP
++ export DEPLOY_KERNEL_URL=http://172.22.0.2:6180/images/ironic-python-agent.kernel
++ DEPLOY_KERNEL_URL=http://172.22.0.2:6180/images/ironic-python-agent.kernel
++ export DEPLOY_RAMDISK_URL=http://172.22.0.2:6180/images/ironic-python-agent.initramfs
++ DEPLOY_RAMDISK_URL=http://172.22.0.2:6180/images/ironic-python-agent.initramfs
++ '[' true == true ']'
++ export IRONIC_URL=https://172.22.0.2:6385/v1/
++ IRONIC_URL=https://172.22.0.2:6385/v1/
++ export IRONIC_INSPECTOR_URL=https://172.22.0.2:5050/v1/
++ IRONIC_INSPECTOR_URL=https://172.22.0.2:5050/v1/
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/images.sh
++ IMAGE_OS=Ubuntu
++ [[ Ubuntu == \U\b\u\n\t\u ]]
++ export IMAGE_NAME=UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0.qcow2
++ IMAGE_NAME=UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0.qcow2
++ export IMAGE_LOCATION=https://artifactory.nordix.org/artifactory/airship/images/k8s_v1.21.0/
++ IMAGE_LOCATION=https://artifactory.nordix.org/artifactory/airship/images/k8s_v1.21.0/
++ export IMAGE_URL=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0.qcow2
++ IMAGE_URL=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0.qcow2
++ export IMAGE_CHECKSUM=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0.qcow2.md5sum
++ IMAGE_CHECKSUM=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0.qcow2.md5sum
++ export IMAGE_USERNAME=metal3
++ IMAGE_USERNAME=metal3
++ IMAGE_BASE_NAME=UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0
++ export IMAGE_RAW_NAME=UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0-raw.img
++ IMAGE_RAW_NAME=UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0-raw.img
++ export IMAGE_RAW_URL=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0-raw.img
++ IMAGE_RAW_URL=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0-raw.img
++ export IMAGE_RAW_CHECKSUM=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0-raw.img.md5sum
++ IMAGE_RAW_CHECKSUM=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.0-raw.img.md5sum
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/ironic_tls_setup.sh
++ '[' true == true ']'
++ pushd /opt/metal3-dev-env
/opt/metal3-dev-env ~/projects/metal3-dev-env
++ mkdir -p /opt/metal3-dev-env/certs
++ pushd /opt/metal3-dev-env/certs
/opt/metal3-dev-env/certs /opt/metal3-dev-env ~/projects/metal3-dev-env
++ export IRONIC_BASE_URL=https://172.22.0.2
++ IRONIC_BASE_URL=https://172.22.0.2
++ export IRONIC_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ IRONIC_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ export IRONIC_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ IRONIC_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ export IRONIC_CERT_FILE=/opt/metal3-dev-env/certs/ironic.crt
++ IRONIC_CERT_FILE=/opt/metal3-dev-env/certs/ironic.crt
++ export IRONIC_KEY_FILE=/opt/metal3-dev-env/certs/ironic.key
++ IRONIC_KEY_FILE=/opt/metal3-dev-env/certs/ironic.key
++ export IRONIC_INSPECTOR_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ IRONIC_INSPECTOR_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ export IRONIC_INSPECTOR_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ IRONIC_INSPECTOR_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ export IRONIC_INSPECTOR_CERT_FILE=/opt/metal3-dev-env/certs/ironic-inspector.crt
++ IRONIC_INSPECTOR_CERT_FILE=/opt/metal3-dev-env/certs/ironic-inspector.crt
++ export IRONIC_INSPECTOR_KEY_FILE=/opt/metal3-dev-env/certs/ironic-inspector.key
++ IRONIC_INSPECTOR_KEY_FILE=/opt/metal3-dev-env/certs/ironic-inspector.key
++ export MARIADB_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ MARIADB_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ export MARIADB_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ MARIADB_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ export MARIADB_CERT_FILE=/opt/metal3-dev-env/certs/mariadb.crt
++ MARIADB_CERT_FILE=/opt/metal3-dev-env/certs/mariadb.crt
++ export MARIADB_KEY_FILE=/opt/metal3-dev-env/certs/mariadb.key
++ MARIADB_KEY_FILE=/opt/metal3-dev-env/certs/mariadb.key
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.pem ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.pem ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.pem ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-inspector.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/mariadb.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic.crt ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-inspector.crt ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/mariadb.crt ']'
++ '[' /opt/metal3-dev-env/certs/ironic-ca.pem == /opt/metal3-dev-env/certs/ironic-ca.pem ']'
+++ base64 -w 0
++ IRONIC_CA_CERT_B64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lVT3VuNm5LYy9vS29sc0FyVXQ0RWJNMXNMWkM4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZERVNNQkFHQTFVRUF3d0phWEp2Ym1saklFTkJNQjRYRFRJeE1URXdPVEUyTXpFME5sb1hEVEkyTVRFdwpPREUyTXpFME5sb3dGREVTTUJBR0ExVUVBd3dKYVhKdmJtbGpJRU5CTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBblJQdFNlT0VnSnZGN05oS2k2U0Z0bkFkelhJM0ZLckZmTjhzdkpCR0FqYU0KS2xxeUhvY1haUmFLWiswM1NXWDBzOHBlYkpKZFQxUUpZRURCbEY1MnlNeEt1TTZ6elZocmNiTU5mWExmbE1YbwpYekhFVGdRZmVvRXRPL1RLWWlyTWQ0WmU2a0VvSGI5Yk9EWk9XRUoweWJSQUgzNFdOdjRvV2s5TkdWenlFN012ClRqVWcrZ0lzdWdQbGhTeXc3L3lzL1hoeEtnYXN0UXRjZnZ2clBBY0hsd3YrT3UyMkVFZk5sbGprNDQzU2gzMGkKSzR6ZCtZRW02ZnBFdDI3SFEybXhqL2hlWWcxQW9rTC8xcVNaaGlkWnM0cU03R3Z6WVRZc3ZLZ3haYXNUR2NuSAp3Ylc5WmpFNk40Y1piTVFIM1dmbnRqcWk0VmJSbmRmM3JTRHQ2RFlJOVFJREFRQUJvMU13VVRBZEJnTlZIUTRFCkZnUVVRQnpRM2FHK3h6Sm5tK0FjV2wrbTZyVlRXbll3SHdZRFZSMGpCQmd3Rm9BVVFCelEzYUcreHpKbm0rQWMKV2wrbTZyVlRXbll3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBSjZzVgpGV3VpT3lMUzNTWnBrak00YWJmMmI0blZIalI0UllsZWZITjd1SUpMUnQwSFdJWmNDbThmOVJkMitodUhkTTh1Cm5QRVcxQWFPZkFiNFVqRWM1WHhmN3UrbGdvSHBiSy9jQURJWTBsQ09pK2Q0MHM3VDNCRFJhakNXVHl2NlBuYkMKTXRKV2FDWkhFcElGdGtqbmZ3MFNHOEdOaTBsbWRyVmFPdmo4NmpRUVlRVEFsWk96ek8yZ3p6TjJCdVVLZ0hUZApOWlZ3a29jWkVwVS9tT1ZKZ2l2YnJBeFpLcmVYUXN4dWFWbys3eXNwR2lyKzF2dklOc29pNlRsV1d5Syt0ZVlrCitNODg0VStUQ2lJRE5EbTI1T09scWhPYlVScW5HWUpmdXBNSlREbGpLNDhJZytodk55a05EdGQ1RFczWGVpUkIKWjZiQURWc2pOelZVNm83YmhRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
++ export IRONIC_CA_CERT_B64
++ popd
/opt/metal3-dev-env ~/projects/metal3-dev-env
++ popd
~/projects/metal3-dev-env
++ unset IRONIC_NO_CA_CERT
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/ironic_basic_auth.sh
++ '[' true == true ']'
++ IRONIC_AUTH_DIR=/opt/metal3-dev-env/ironic/auth/
++ mkdir -p /opt/metal3-dev-env/ironic/auth/
++ '[' -z '' ']'
++ '[' '!' -f /opt/metal3-dev-env/ironic/auth/ironic-username ']'
+++ cat /opt/metal3-dev-env/ironic/auth/ironic-username
++ IRONIC_USERNAME=beEjrgcnZkhE
++ '[' -z '' ']'
++ '[' '!' -f /opt/metal3-dev-env/ironic/auth/ironic-password ']'
+++ cat /opt/metal3-dev-env/ironic/auth/ironic-password
++ IRONIC_PASSWORD=mT7bb6QxcdIT
++ IRONIC_INSPECTOR_USERNAME=beEjrgcnZkhE
++ IRONIC_INSPECTOR_PASSWORD=mT7bb6QxcdIT
++ export IRONIC_USERNAME
++ export IRONIC_PASSWORD
++ export IRONIC_INSPECTOR_USERNAME
++ export IRONIC_INSPECTOR_PASSWORD
++ unset IRONIC_NO_BASIC_AUTH
++ unset IRONIC_INSPECTOR_NO_BASIC_AUTH
+ export ANSIBLE_HOST_KEY_CHECKING=False
+ ANSIBLE_HOST_KEY_CHECKING=False
+ export ANSIBLE_CONFIG=/home/capm3/projects/metal3-dev-env/scripts/../ansible.cfg
+ ANSIBLE_CONFIG=/home/capm3/projects/metal3-dev-env/scripts/../ansible.cfg
+ ANSIBLE_FORCE_COLOR=true
+ ansible-playbook -e metal3_dir=/home/capm3/projects/metal3-dev-env -e v1aX_integration_test_action=deprovision_controlplane -i /home/capm3/projects/metal3-dev-env/scripts/../vm-setup/inventory.ini -b -v /home/capm3/projects/metal3-dev-env/scripts/../vm-setup/v1aX_integration_test.yml
[0;34mUsing /home/capm3/projects/metal3-dev-env/ansible.cfg as config file[0m
[0;35m[DEPRECATION WARNING]: [defaults]callback_whitelist option, normalizing names [0m
[0;35mto new standard, use callbacks_enabled instead. This feature will be removed [0m
[0;35mfrom ansible-core in version 2.15. Deprecation warnings can be disabled by [0m
[0;35msetting deprecation_warnings=False in ansible.cfg.[0m
[1;35m[WARNING]: Skipping plugin (/home/capm3/projects/metal3-dev-env/vm-[0m
[1;35msetup/roles/v1aX_integration_test/filter_plugins/k8s_fields_test.py) as it[0m
[1;35mseems to be invalid: No module named 'k8s_fields'[0m

PLAY [v1beta1 integration test] ************************************************
Tuesday 09 November 2021  17:31:31 +0000 (0:00:00.033)       0:00:00.033 ****** 

TASK [Gathering Facts] *********************************************************
[0;32mok: [localhost][0m
Tuesday 09 November 2021  17:31:33 +0000 (0:00:01.312)       0:00:01.345 ****** 
Tuesday 09 November 2021  17:31:33 +0000 (0:00:00.044)       0:00:01.390 ****** 
Tuesday 09 November 2021  17:31:33 +0000 (0:00:00.044)       0:00:01.435 ****** 
Tuesday 09 November 2021  17:31:33 +0000 (0:00:00.046)       0:00:01.481 ****** 
Tuesday 09 November 2021  17:31:33 +0000 (0:00:00.045)       0:00:01.527 ****** 
Tuesday 09 November 2021  17:31:33 +0000 (0:00:00.044)       0:00:01.572 ****** 
Tuesday 09 November 2021  17:31:33 +0000 (0:00:00.045)       0:00:01.617 ****** 
Tuesday 09 November 2021  17:31:33 +0000 (0:00:00.045)       0:00:01.662 ****** 
Tuesday 09 November 2021  17:31:33 +0000 (0:00:00.043)       0:00:01.705 ****** 
Tuesday 09 November 2021  17:31:33 +0000 (0:00:00.044)       0:00:01.750 ****** 
Tuesday 09 November 2021  17:31:33 +0000 (0:00:00.043)       0:00:01.793 ****** 
Tuesday 09 November 2021  17:31:33 +0000 (0:00:00.042)       0:00:01.836 ****** 

TASK [v1aX_integration_test : Deprovision control plane] ***********************
[0;33mchanged: [localhost] => {"changed": true, "result": {"results": [{"changed": true, "method": "delete", "result": {"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "kind": "KubeadmControlPlane", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"controlplane.cluster.x-k8s.io/v1beta1\",\"kind\":\"KubeadmControlPlane\",\"metadata\":{\"annotations\":{},\"name\":\"test1\",\"namespace\":\"metal3\"},\"spec\":{\"kubeadmConfigSpec\":{\"clusterConfiguration\":{},\"files\":[{\"content\":\"#!/bin/bash\\nwhile :; do\\n  curl -sk https://127.0.0.1:6443/healthz 1\\u003e\\u00262 \\u003e /dev/null\\n  isOk=$?\\n  isActive=$(systemctl show -p ActiveState keepalived.service | cut -d'=' -f2)\\n  if [ $isOk == \\\"0\\\" ] \\u0026\\u0026  [ $isActive != \\\"active\\\" ]; then\\n    logger 'API server is healthy, however keepalived is not running, starting keepalived'\\n    echo 'API server is healthy, however keepalived is not running, starting keepalived'\\n    sudo systemctl start keepalived.service\\n  elif [ $isOk != \\\"0\\\" ] \\u0026\\u0026  [ $isActive == \\\"active\\\" ]; then\\n    logger 'API server is not healthy, however keepalived running, stopping keepalived'\\n    echo 'API server is not healthy, however keepalived running, stopping keepalived'\\n    sudo systemctl stop keepalived.service\\n  fi\\n  sleep 5\\ndone\\n\",\"owner\":\"root:root\",\"path\":\"/usr/local/bin/monitor.keepalived.sh\",\"permissions\":\"0755\"},{\"content\":\"[Unit]\\nDescription=Monitors keepalived adjusts status with that of API server\\nAfter=syslog.target network-online.target\\n\\n[Service]\\nType=simple\\nRestart=always\\nExecStart=/usr/local/bin/monitor.keepalived.sh\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\"owner\":\"root:root\",\"path\":\"/lib/systemd/system/monitor.keepalived.service\"},{\"content\":\"! Configuration File for keepalived\\nglobal_defs {\\n    notification_email {\\n    sysadmin@example.com\\n    support@example.com\\n    }\\n    notification_email_from lb@example.com\\n    smtp_server localhost\\n    smtp_connect_timeout 30\\n}\\nvrrp_instance VI_2 {\\n    state MASTER\\n    interface enp2s0\\n    virtual_router_id 2\\n    priority 101\\n    advert_int 1\\n    virtual_ipaddress {\\n        192.168.111.249\\n    }\\n}\\n\",\"path\":\"/etc/keepalived/keepalived.conf\"},{\"content\":\"network:\\n  version: 2\\n  renderer: networkd\\n  bridges:\\n    ironicendpoint:\\n      interfaces: [enp1s0]\\n      addresses:\\n      - {{ ds.meta_data.provisioningIP }}/{{ ds.meta_data.provisioningCIDR }}\\n\",\"owner\":\"root:root\",\"path\":\"/etc/netplan/52-ironicendpoint.yaml\",\"permissions\":\"0644\"},{\"content\":\"[registries.search]\\nregistries = ['docker.io']\\n\\n[registries.insecure]\\nregistries = ['192.168.111.1:5000']\\n\",\"path\":\"/etc/containers/registries.conf\"}],\"initConfiguration\":{\"nodeRegistration\":{\"kubeletExtraArgs\":{\"cgroup-driver\":\"systemd\",\"container-runtime\":\"remote\",\"container-runtime-endpoint\":\"unix:///var/run/crio/crio.sock\",\"feature-gates\":\"AllAlpha=false\",\"node-labels\":\"metal3.io/uuid={{ ds.meta_data.uuid }}\",\"provider-id\":\"metal3://{{ ds.meta_data.uuid }}\",\"runtime-request-timeout\":\"5m\"},\"name\":\"{{ ds.meta_data.name }}\"}},\"joinConfiguration\":{\"controlPlane\":{},\"nodeRegistration\":{\"kubeletExtraArgs\":{\"cgroup-driver\":\"systemd\",\"container-runtime\":\"remote\",\"container-runtime-endpoint\":\"unix:///var/run/crio/crio.sock\",\"feature-gates\":\"AllAlpha=false\",\"node-labels\":\"metal3.io/uuid={{ ds.meta_data.uuid }}\",\"provider-id\":\"metal3://{{ ds.meta_data.uuid }}\",\"runtime-request-timeout\":\"5m\"},\"name\":\"{{ ds.meta_data.name }}\"}},\"postKubeadmCommands\":[\"mkdir -p /home/metal3/.kube\",\"cp /etc/kubernetes/admin.conf /home/metal3/.kube/config\",\"systemctl enable --now keepalived\",\"chown metal3:metal3 /home/metal3/.kube/config\"],\"preKubeadmCommands\":[\"netplan apply\",\"systemctl enable --now crio kubelet\",\"if (curl -sk --max-time 10 https://192.168.111.249:6443/healthz); then echo \\\"keepalived already running\\\";else systemctl start keepalived; fi\",\"systemctl link /lib/systemd/system/monitor.keepalived.service\",\"systemctl enable monitor.keepalived.service\",\"systemctl start monitor.keepalived.service\"],\"users\":[{\"name\":\"metal3\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC0aKU/BbVr0FwTPKXFry6KAQ84SoE9MKSHfmbivmo1ZGPzRH7V28X6nbFq9o25xp0h9YfOH7piu2QjPezC3m/LoozAIWJslNqInyZ8n3AO9zftd5TXwZ0U9jAUaDruDy9XgZJlpvF3JV5ksCeg3MdGNk9xUYu6V1Bbx/ESeKejgxrDdvzY7huRK3T9zwq9p2Mvt5K3QlwEWNjTdK3h0xH8V3ua8zK71Sj1X7RByspmxAeCkY9YiVXaQI5gWGPBP2WXYg0VjuKDhDeHFVpkuII1QiC/5iJtfLwWb9SSSJZIU48P2KE+LO16oEziLvMi/CNVA9+639nN55+TUlnGQGy6J9uO6CdvJYsnuvRM/uGpGcyU8xQsWy+9dlUdkYIlMTOTGjCG6jCHFTxaOS60CtsDQAMkq4pjt6bMXTF8zCODAoWPtCRW5WwRy3O0H62DJZkf2bV6BoPyp+C3NjM9C6RdzmY1ROloQfvJN0pl7DdL9tXDogSdTWK90Yefh1jTMi0= capm3@capm3\"],\"sudo\":\"ALL=(ALL) NOPASSWD:ALL\"}]},\"machineTemplate\":{\"infrastructureRef\":{\"apiVersion\":\"infrastructure.cluster.x-k8s.io/v1beta1\",\"kind\":\"Metal3MachineTemplate\",\"name\":\"test1-controlplane\"},\"nodeDrainTimeout\":\"0s\"},\"replicas\":3,\"rolloutStrategy\":{\"rollingUpdate\":{\"maxSurge\":1}},\"version\":\"v1.21.0\"}}\n"}, "creationTimestamp": "2021-11-09T17:25:38Z", "deletionGracePeriodSeconds": 0, "deletionTimestamp": "2021-11-09T17:31:34Z", "finalizers": ["kubeadm.controlplane.cluster.x-k8s.io"], "generation": 2, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:kubeadmConfigSpec": {".": {}, "f:clusterConfiguration": {}, "f:files": {}, "f:initConfiguration": {".": {}, "f:nodeRegistration": {".": {}, "f:kubeletExtraArgs": {".": {}, "f:cgroup-driver": {}, "f:container-runtime": {}, "f:container-runtime-endpoint": {}, "f:feature-gates": {}, "f:node-labels": {}, "f:provider-id": {}, "f:runtime-request-timeout": {}}, "f:name": {}}}, "f:joinConfiguration": {".": {}, "f:controlPlane": {}, "f:nodeRegistration": {".": {}, "f:kubeletExtraArgs": {".": {}, "f:cgroup-driver": {}, "f:container-runtime": {}, "f:container-runtime-endpoint": {}, "f:feature-gates": {}, "f:node-labels": {}, "f:provider-id": {}, "f:runtime-request-timeout": {}}, "f:name": {}}}, "f:postKubeadmCommands": {}, "f:preKubeadmCommands": {}, "f:users": {}}, "f:machineTemplate": {".": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}}, "f:nodeDrainTimeout": {}}, "f:replicas": {}, "f:rolloutStrategy": {".": {}, "f:rollingUpdate": {".": {}, "f:maxSurge": {}}}, "f:version": {}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-09T17:25:38Z"}, {"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"kubeadm.controlplane.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"ecf235c5-8c2c-4497-80c3-3c26ab31a35d\"}": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-09T17:26:02Z"}, {"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:conditions": {}, "f:observedGeneration": {}, "f:replicas": {}, "f:selector": {}, "f:unavailableReplicas": {}, "f:updatedReplicas": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-09T17:26:09Z"}], "name": "test1", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "Cluster", "name": "test1", "uid": "ecf235c5-8c2c-4497-80c3-3c26ab31a35d"}], "resourceVersion": "16344", "uid": "f5b27473-6e78-4243-b153-2412e1859d51"}, "spec": {"kubeadmConfigSpec": {"clusterConfiguration": {"apiServer": {}, "controllerManager": {}, "dns": {}, "etcd": {}, "networking": {}, "scheduler": {}}, "files": [{"content": "#!/bin/bash\nwhile :; do\n  curl -sk https://127.0.0.1:6443/healthz 1>&2 > /dev/null\n  isOk=$?\n  isActive=$(systemctl show -p ActiveState keepalived.service | cut -d'=' -f2)\n  if [ $isOk == \"0\" ] &&  [ $isActive != \"active\" ]; then\n    logger 'API server is healthy, however keepalived is not running, starting keepalived'\n    echo 'API server is healthy, however keepalived is not running, starting keepalived'\n    sudo systemctl start keepalived.service\n  elif [ $isOk != \"0\" ] &&  [ $isActive == \"active\" ]; then\n    logger 'API server is not healthy, however keepalived running, stopping keepalived'\n    echo 'API server is not healthy, however keepalived running, stopping keepalived'\n    sudo systemctl stop keepalived.service\n  fi\n  sleep 5\ndone\n", "owner": "root:root", "path": "/usr/local/bin/monitor.keepalived.sh", "permissions": "0755"}, {"content": "[Unit]\nDescription=Monitors keepalived adjusts status with that of API server\nAfter=syslog.target network-online.target\n\n[Service]\nType=simple\nRestart=always\nExecStart=/usr/local/bin/monitor.keepalived.sh\n\n[Install]\nWantedBy=multi-user.target\n", "owner": "root:root", "path": "/lib/systemd/system/monitor.keepalived.service"}, {"content": "! Configuration File for keepalived\nglobal_defs {\n    notification_email {\n    sysadmin@example.com\n    support@example.com\n    }\n    notification_email_from lb@example.com\n    smtp_server localhost\n    smtp_connect_timeout 30\n}\nvrrp_instance VI_2 {\n    state MASTER\n    interface enp2s0\n    virtual_router_id 2\n    priority 101\n    advert_int 1\n    virtual_ipaddress {\n        192.168.111.249\n    }\n}\n", "path": "/etc/keepalived/keepalived.conf"}, {"content": "network:\n  version: 2\n  renderer: networkd\n  bridges:\n    ironicendpoint:\n      interfaces: [enp1s0]\n      addresses:\n      - {{ ds.meta_data.provisioningIP }}/{{ ds.meta_data.provisioningCIDR }}\n", "owner": "root:root", "path": "/etc/netplan/52-ironicendpoint.yaml", "permissions": "0644"}, {"content": "[registries.search]\nregistries = ['docker.io']\n\n[registries.insecure]\nregistries = ['192.168.111.1:5000']\n", "path": "/etc/containers/registries.conf"}], "initConfiguration": {"localAPIEndpoint": {}, "nodeRegistration": {"kubeletExtraArgs": {"cgroup-driver": "systemd", "container-runtime": "remote", "container-runtime-endpoint": "unix:///var/run/crio/crio.sock", "feature-gates": "AllAlpha=false", "node-labels": "metal3.io/uuid={{ ds.meta_data.uuid }}", "provider-id": "metal3://{{ ds.meta_data.uuid }}", "runtime-request-timeout": "5m"}, "name": "{{ ds.meta_data.name }}"}}, "joinConfiguration": {"controlPlane": {"localAPIEndpoint": {}}, "discovery": {}, "nodeRegistration": {"kubeletExtraArgs": {"cgroup-driver": "systemd", "container-runtime": "remote", "container-runtime-endpoint": "unix:///var/run/crio/crio.sock", "feature-gates": "AllAlpha=false", "node-labels": "metal3.io/uuid={{ ds.meta_data.uuid }}", "provider-id": "metal3://{{ ds.meta_data.uuid }}", "runtime-request-timeout": "5m"}, "name": "{{ ds.meta_data.name }}"}}, "postKubeadmCommands": ["mkdir -p /home/metal3/.kube", "cp /etc/kubernetes/admin.conf /home/metal3/.kube/config", "systemctl enable --now keepalived", "chown metal3:metal3 /home/metal3/.kube/config"], "preKubeadmCommands": ["netplan apply", "systemctl enable --now crio kubelet", "if (curl -sk --max-time 10 https://192.168.111.249:6443/healthz); then echo \"keepalived already running\";else systemctl start keepalived; fi", "systemctl link /lib/systemd/system/monitor.keepalived.service", "systemctl enable monitor.keepalived.service", "systemctl start monitor.keepalived.service"], "users": [{"name": "metal3", "sshAuthorizedKeys": ["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC0aKU/BbVr0FwTPKXFry6KAQ84SoE9MKSHfmbivmo1ZGPzRH7V28X6nbFq9o25xp0h9YfOH7piu2QjPezC3m/LoozAIWJslNqInyZ8n3AO9zftd5TXwZ0U9jAUaDruDy9XgZJlpvF3JV5ksCeg3MdGNk9xUYu6V1Bbx/ESeKejgxrDdvzY7huRK3T9zwq9p2Mvt5K3QlwEWNjTdK3h0xH8V3ua8zK71Sj1X7RByspmxAeCkY9YiVXaQI5gWGPBP2WXYg0VjuKDhDeHFVpkuII1QiC/5iJtfLwWb9SSSJZIU48P2KE+LO16oEziLvMi/CNVA9+639nN55+TUlnGQGy6J9uO6CdvJYsnuvRM/uGpGcyU8xQsWy+9dlUdkYIlMTOTGjCG6jCHFTxaOS60CtsDQAMkq4pjt6bMXTF8zCODAoWPtCRW5WwRy3O0H62DJZkf2bV6BoPyp+C3NjM9C6RdzmY1ROloQfvJN0pl7DdL9tXDogSdTWK90Yefh1jTMi0= capm3@capm3"], "sudo": "ALL=(ALL) NOPASSWD:ALL"}]}, "machineTemplate": {"infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3MachineTemplate", "name": "test1-controlplane", "namespace": "metal3"}, "metadata": {}, "nodeDrainTimeout": "0s"}, "replicas": 3, "rolloutStrategy": {"rollingUpdate": {"maxSurge": 1}, "type": "RollingUpdate"}, "version": "v1.21.0"}, "status": {"conditions": [{"lastTransitionTime": "2021-11-09T17:26:09Z", "message": "Scaling up control plane to 3 replicas (actual 1)", "reason": "ScalingUp", "severity": "Warning", "status": "False", "type": "Ready"}, {"lastTransitionTime": "2021-11-09T17:26:03Z", "reason": "WaitingForKubeadmInit", "severity": "Info", "status": "False", "type": "Available"}, {"lastTransitionTime": "2021-11-09T17:26:03Z", "status": "True", "type": "CertificatesAvailable"}, {"lastTransitionTime": "2021-11-09T17:26:09Z", "message": "Scaling up control plane to 3 replicas (actual 1)", "reason": "ScalingUp", "severity": "Warning", "status": "False", "type": "Resized"}], "observedGeneration": 1, "replicas": 1, "selector": "cluster.x-k8s.io/cluster-name=test1,cluster.x-k8s.io/control-plane", "unavailableReplicas": 1, "updatedReplicas": 1}}}, {"changed": true, "method": "delete", "result": {"apiVersion": "v1", "details": {"group": "infrastructure.cluster.x-k8s.io", "kind": "metal3machinetemplates", "name": "test1-controlplane", "uid": "4ee94636-c491-47e5-b715-f3f159032193"}, "kind": "Status", "metadata": {}, "status": "Success"}}, {"changed": true, "method": "delete", "result": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3DataTemplate", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"infrastructure.cluster.x-k8s.io/v1beta1\",\"kind\":\"Metal3DataTemplate\",\"metadata\":{\"annotations\":{},\"name\":\"test1-controlplane-template\",\"namespace\":\"metal3\"},\"spec\":{\"clusterName\":\"test1\",\"metaData\":{\"ipAddressesFromIPPool\":[{\"key\":\"provisioningIP\",\"name\":\"provisioning-pool\"}],\"objectNames\":[{\"key\":\"name\",\"object\":\"machine\"},{\"key\":\"local-hostname\",\"object\":\"machine\"},{\"key\":\"local_hostname\",\"object\":\"machine\"}],\"prefixesFromIPPool\":[{\"key\":\"provisioningCIDR\",\"name\":\"provisioning-pool\"}]},\"networkData\":{\"links\":{\"ethernets\":[{\"id\":\"enp1s0\",\"macAddress\":{\"fromHostInterface\":\"enp1s0\"},\"type\":\"phy\"},{\"id\":\"enp2s0\",\"macAddress\":{\"fromHostInterface\":\"enp2s0\"},\"type\":\"phy\"}]},\"networks\":{\"ipv4\":[{\"id\":\"baremetalv4\",\"ipAddressFromIPPool\":\"baremetalv4-pool\",\"link\":\"enp2s0\",\"routes\":[{\"gateway\":{\"fromIPPool\":\"baremetalv4-pool\"},\"network\":\"0.0.0.0\",\"prefix\":0}]}]},\"services\":{\"dns\":[\"8.8.8.8\"]}}}}\n"}, "creationTimestamp": "2021-11-09T17:25:38Z", "deletionGracePeriodSeconds": 0, "deletionTimestamp": "2021-11-09T17:31:34Z", "finalizers": ["metal3datatemplate.infrastructure.cluster.x-k8s.io"], "generation": 2, "managedFields": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"metal3datatemplate.infrastructure.cluster.x-k8s.io\"": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"ecf235c5-8c2c-4497-80c3-3c26ab31a35d\"}": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-09T17:25:38Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:lastUpdated": {}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "subresource": "status", "time": "2021-11-09T17:25:38Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:clusterName": {}, "f:metaData": {".": {}, "f:ipAddressesFromIPPool": {}, "f:objectNames": {}, "f:prefixesFromIPPool": {}}, "f:networkData": {".": {}, "f:links": {".": {}, "f:ethernets": {}}, "f:networks": {".": {}, "f:ipv4": {}}, "f:services": {".": {}, "f:dns": {}}}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-09T17:25:38Z"}], "name": "test1-controlplane-template", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "controller": false, "kind": "Cluster", "name": "test1", "uid": "ecf235c5-8c2c-4497-80c3-3c26ab31a35d"}], "resourceVersion": "16348", "uid": "8063449a-cb92-43dd-a52c-e70d9bb56fd9"}, "spec": {"clusterName": "test1", "metaData": {"ipAddressesFromIPPool": [{"key": "provisioningIP", "name": "provisioning-pool"}], "objectNames": [{"key": "name", "object": "machine"}, {"key": "local-hostname", "object": "machine"}, {"key": "local_hostname", "object": "machine"}], "prefixesFromIPPool": [{"key": "provisioningCIDR", "name": "provisioning-pool"}]}, "networkData": {"links": {"ethernets": [{"id": "enp1s0", "macAddress": {"fromHostInterface": "enp1s0"}, "mtu": 1500, "type": "phy"}, {"id": "enp2s0", "macAddress": {"fromHostInterface": "enp2s0"}, "mtu": 1500, "type": "phy"}]}, "networks": {"ipv4": [{"id": "baremetalv4", "ipAddressFromIPPool": "baremetalv4-pool", "link": "enp2s0", "routes": [{"gateway": {"fromIPPool": "baremetalv4-pool"}, "network": "0.0.0.0", "services": {}}]}]}, "services": {"dns": ["8.8.8.8"]}}}, "status": {"lastUpdated": "2021-11-09T17:26:51Z"}}}]}}[0m
Tuesday 09 November 2021  17:31:34 +0000 (0:00:00.845)       0:00:02.682 ****** 
Tuesday 09 November 2021  17:31:34 +0000 (0:00:00.049)       0:00:02.731 ****** 
Tuesday 09 November 2021  17:31:34 +0000 (0:00:00.046)       0:00:02.777 ****** 
Tuesday 09 November 2021  17:31:34 +0000 (0:00:00.046)       0:00:02.823 ****** 

PLAY RECAP *********************************************************************
[0;33mlocalhost[0m                  : [0;32mok=2   [0m [0;33mchanged=1   [0m unreachable=0    failed=0    [0;36mskipped=15  [0m rescued=0    ignored=0   

Tuesday 09 November 2021  17:31:34 +0000 (0:00:00.062)       0:00:02.885 ****** 
=============================================================================== 
Gathering Facts --------------------------------------------------------- 1.31s
v1aX_integration_test : Deprovision control plane ----------------------- 0.85s
v1aX_integration_test : Node reuse -------------------------------------- 0.06s
