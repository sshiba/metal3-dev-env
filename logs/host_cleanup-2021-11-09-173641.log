+ source lib/common.sh
++ [[ :/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin: != *\:\/\u\s\r\/\l\o\c\a\l\/\g\o\/\b\i\n\:* ]]
++ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin
+++ go env
++ eval 'GO111MODULE=""
GOARCH="amd64"
GOBIN=""
GOCACHE="/home/capm3/.cache/go-build"
GOENV="/home/capm3/.config/go/env"
GOEXE=""
GOFLAGS=""
GOHOSTARCH="amd64"
GOHOSTOS="linux"
GOINSECURE=""
GOMODCACHE="/home/capm3/go/pkg/mod"
GONOPROXY=""
GONOSUMDB=""
GOOS="linux"
GOPATH="/home/capm3/go"
GOPRIVATE=""
GOPROXY="https://proxy.golang.org,direct"
GOROOT="/usr/local/go"
GOSUMDB="sum.golang.org"
GOTMPDIR=""
GOTOOLDIR="/usr/local/go/pkg/tool/linux_amd64"
GOVCS=""
GOVERSION="go1.16.7"
GCCGO="gccgo"
AR="ar"
CC="gcc"
CXX="g++"
CGO_ENABLED="1"
GOMOD="/dev/null"
CGO_CFLAGS="-g -O2"
CGO_CPPFLAGS=""
CGO_CXXFLAGS="-g -O2"
CGO_FFLAGS="-g -O2"
CGO_LDFLAGS="-g -O2"
PKG_CONFIG="pkg-config"
GOGCCFLAGS="-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2173594470=/tmp/go-build -gno-record-gcc-switches"'
+++ GO111MODULE=
+++ GOARCH=amd64
+++ GOBIN=
+++ GOCACHE=/home/capm3/.cache/go-build
+++ GOENV=/home/capm3/.config/go/env
+++ GOEXE=
+++ GOFLAGS=
+++ GOHOSTARCH=amd64
+++ GOHOSTOS=linux
+++ GOINSECURE=
+++ GOMODCACHE=/home/capm3/go/pkg/mod
+++ GONOPROXY=
+++ GONOSUMDB=
+++ GOOS=linux
+++ GOPATH=/home/capm3/go
+++ GOPRIVATE=
+++ GOPROXY=https://proxy.golang.org,direct
+++ GOROOT=/usr/local/go
+++ GOSUMDB=sum.golang.org
+++ GOTMPDIR=
+++ GOTOOLDIR=/usr/local/go/pkg/tool/linux_amd64
+++ GOVCS=
+++ GOVERSION=go1.16.7
+++ GCCGO=gccgo
+++ AR=ar
+++ CC=gcc
+++ CXX=g++
+++ CGO_ENABLED=1
+++ GOMOD=/dev/null
+++ CGO_CFLAGS='-g -O2'
+++ CGO_CPPFLAGS=
+++ CGO_CXXFLAGS='-g -O2'
+++ CGO_FFLAGS='-g -O2'
+++ CGO_LDFLAGS='-g -O2'
+++ PKG_CONFIG=pkg-config
+++ GOGCCFLAGS='-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2173594470=/tmp/go-build -gno-record-gcc-switches'
++ export GOPATH
++++ dirname lib/common.sh
+++ cd lib/..
+++ pwd
++ SCRIPTDIR=/home/capm3/projects/metal3-dev-env
+++ whoami
++ USER=capm3
++ export USER=capm3
++ USER=capm3
++ '[' -z '' ']'
++ '[' '!' -f /home/capm3/projects/metal3-dev-env/config_capm3.sh ']'
++ CONFIG=/home/capm3/projects/metal3-dev-env/config_capm3.sh
++ source /home/capm3/projects/metal3-dev-env/config_capm3.sh
+++ export KUBECONFIG=/home/capm3/.kube/config
+++ KUBECONFIG=/home/capm3/.kube/config
+++ export K8S_AUTH_KUBECONFIG=/home/capm3/.kube/config
+++ K8S_AUTH_KUBECONFIG=/home/capm3/.kube/config
+++ export NUM_NODES=7
+++ NUM_NODES=7
+++ export NUM_OF_MASTER_REPLICAS=3
+++ NUM_OF_MASTER_REPLICAS=3
+++ export NUM_OF_WORKER_REPLICAS=3
+++ NUM_OF_WORKER_REPLICAS=3
+++ export CAPM3_VERSION=v1beta1
+++ CAPM3_VERSION=v1beta1
+++ export CAPI_VERSION=v1beta1
+++ CAPI_VERSION=v1beta1
+++ export KUBERNETES_VERSION=v1.21.0
+++ KUBERNETES_VERSION=v1.21.0
+++ export UPGRADED_K8S_VERSION=v1.22.2
+++ UPGRADED_K8S_VERSION=v1.22.2
+++ export IMAGE_OS=Ubuntu
+++ IMAGE_OS=Ubuntu
+++ export IMAGE_USERNAME=metal3
+++ IMAGE_USERNAME=metal3
+++ export EPHEMERAL_CLUSTER=kind
+++ EPHEMERAL_CLUSTER=kind
++ export MARIADB_HOST=mariaDB
++ MARIADB_HOST=mariaDB
++ export MARIADB_HOST_IP=127.0.0.1
++ MARIADB_HOST_IP=127.0.0.1
++ ADDN_DNS=
++ EXT_IF=
++ PRO_IF=
++ MANAGE_BR_BRIDGE=y
++ MANAGE_PRO_BRIDGE=y
++ MANAGE_INT_BRIDGE=y
++ INT_IF=
++ ROOT_DISK_NAME=/dev/sda
++ NODE_HOSTNAME_FORMAT=node-%d
++ source /etc/os-release
+++ NAME=Ubuntu
+++ VERSION='20.04.3 LTS (Focal Fossa)'
+++ ID=ubuntu
+++ ID_LIKE=debian
+++ PRETTY_NAME='Ubuntu 20.04.3 LTS'
+++ VERSION_ID=20.04
+++ HOME_URL=https://www.ubuntu.com/
+++ SUPPORT_URL=https://help.ubuntu.com/
+++ BUG_REPORT_URL=https://bugs.launchpad.net/ubuntu/
+++ PRIVACY_POLICY_URL=https://www.ubuntu.com/legal/terms-and-policies/privacy-policy
+++ VERSION_CODENAME=focal
+++ UBUNTU_CODENAME=focal
++ export DISTRO=ubuntu20
++ DISTRO=ubuntu20
++ export OS=ubuntu
++ OS=ubuntu
++ export OS_VERSION_ID=20.04
++ OS_VERSION_ID=20.04
++ SUPPORTED_DISTROS=(centos8 rhel8 ubuntu18 ubuntu20)
++ export SUPPORTED_DISTROS
++ [[ ! centos8 rhel8 ubuntu18 ubuntu20 =~ ubuntu20 ]]
++ [[ ubuntu == ubuntu ]]
++ export CONTAINER_RUNTIME=docker
++ CONTAINER_RUNTIME=docker
++ [[ docker == \p\o\d\m\a\n ]]
++ export POD_NAME=
++ POD_NAME=
++ export POD_NAME_INFRA=
++ POD_NAME_INFRA=
++ export SSH_KEY=/home/capm3/.ssh/id_rsa
++ SSH_KEY=/home/capm3/.ssh/id_rsa
++ export SSH_PUB_KEY=/home/capm3/.ssh/id_rsa.pub
++ SSH_PUB_KEY=/home/capm3/.ssh/id_rsa.pub
++ '[' '!' -f /home/capm3/.ssh/id_rsa ']'
++ FILESYSTEM=/
++ CAPM3_VERSION_LIST='v1alpha4 v1alpha5 v1beta1'
++ export CAPM3_VERSION=v1beta1
++ CAPM3_VERSION=v1beta1
++ '[' v1beta1 == v1alpha4 ']'
++ '[' v1beta1 == v1alpha5 ']'
++ '[' v1beta1 == v1beta1 ']'
++ export CAPI_VERSION=v1beta1
++ CAPI_VERSION=v1beta1
++ export M3PATH=/home/capm3/go/src/github.com/metal3-io
++ M3PATH=/home/capm3/go/src/github.com/metal3-io
++ export BMOPATH=/home/capm3/go/src/github.com/metal3-io/baremetal-operator
++ BMOPATH=/home/capm3/go/src/github.com/metal3-io/baremetal-operator
++ export RUN_LOCAL_IRONIC_SCRIPT=/home/capm3/go/src/github.com/metal3-io/baremetal-operator/tools/run_local_ironic.sh
++ RUN_LOCAL_IRONIC_SCRIPT=/home/capm3/go/src/github.com/metal3-io/baremetal-operator/tools/run_local_ironic.sh
++ export CAPM3PATH=/home/capm3/go/src/github.com/metal3-io/cluster-api-provider-metal3
++ CAPM3PATH=/home/capm3/go/src/github.com/metal3-io/cluster-api-provider-metal3
++ export CAPM3_BASE_URL=metal3-io/cluster-api-provider-metal3
++ CAPM3_BASE_URL=metal3-io/cluster-api-provider-metal3
++ export CAPM3REPO=https://github.com/metal3-io/cluster-api-provider-metal3
++ CAPM3REPO=https://github.com/metal3-io/cluster-api-provider-metal3
++ export IPAMPATH=/home/capm3/go/src/github.com/metal3-io/ip-address-manager
++ IPAMPATH=/home/capm3/go/src/github.com/metal3-io/ip-address-manager
++ export IPAM_BASE_URL=metal3-io/ip-address-manager
++ IPAM_BASE_URL=metal3-io/ip-address-manager
++ export IPAMREPO=https://github.com/metal3-io/ip-address-manager
++ IPAMREPO=https://github.com/metal3-io/ip-address-manager
++ '[' v1beta1 == v1alpha3 ']'
++ '[' v1beta1 == v1alpha4 ']'
++ IPAMBRANCH=main
++ IPA_DOWNLOAD_ENABLED=true
++ CAPI_BASE_URL=kubernetes-sigs/cluster-api
++ '[' v1beta1 == v1alpha4 ']'
++ '[' v1beta1 == v1alpha5 ']'
++ CAPM3BRANCH=main
++ BMOREPO=https://github.com/metal3-io/baremetal-operator.git
++ BMOBRANCH=master
++ FORCE_REPO_UPDATE=true
++ BMOCOMMIT=HEAD
++ BMO_RUN_LOCAL=false
++ CAPM3_RUN_LOCAL=false
++ WORKING_DIR=/opt/metal3-dev-env
++ NODES_FILE=/opt/metal3-dev-env/ironic_nodes.json
++ NODES_PLATFORM=libvirt
++ export NAMESPACE=metal3
++ NAMESPACE=metal3
++ export NUM_NODES=7
++ NUM_NODES=7
++ export NUM_OF_MASTER_REPLICAS=3
++ NUM_OF_MASTER_REPLICAS=3
++ export NUM_OF_WORKER_REPLICAS=3
++ NUM_OF_WORKER_REPLICAS=3
++ export VM_EXTRADISKS=false
++ VM_EXTRADISKS=false
++ export VM_EXTRADISKS_FILE_SYSTEM=ext4
++ VM_EXTRADISKS_FILE_SYSTEM=ext4
++ export VM_EXTRADISKS_MOUNT_DIR=/mnt/disk2
++ VM_EXTRADISKS_MOUNT_DIR=/mnt/disk2
++ export NODE_DRAIN_TIMEOUT=0s
++ NODE_DRAIN_TIMEOUT=0s
++ export MAX_SURGE_VALUE=1
++ MAX_SURGE_VALUE=1
++ export DOCKER_REGISTRY_IMAGE=registry:2.7.1
++ DOCKER_REGISTRY_IMAGE=registry:2.7.1
++ export CONTAINER_REGISTRY=quay.io
++ CONTAINER_REGISTRY=quay.io
++ export VBMC_IMAGE=quay.io/metal3-io/vbmc
++ VBMC_IMAGE=quay.io/metal3-io/vbmc
++ export SUSHY_TOOLS_IMAGE=quay.io/metal3-io/sushy-tools
++ SUSHY_TOOLS_IMAGE=quay.io/metal3-io/sushy-tools
++ export IRONIC_TLS_SETUP=true
++ IRONIC_TLS_SETUP=true
++ export IRONIC_BASIC_AUTH=true
++ IRONIC_BASIC_AUTH=true
++ export IPA_DOWNLOADER_IMAGE=quay.io/metal3-io/ironic-ipa-downloader
++ IPA_DOWNLOADER_IMAGE=quay.io/metal3-io/ironic-ipa-downloader
++ export IRONIC_IMAGE=quay.io/metal3-io/ironic
++ IRONIC_IMAGE=quay.io/metal3-io/ironic
++ export IRONIC_CLIENT_IMAGE=quay.io/metal3-io/ironic-client
++ IRONIC_CLIENT_IMAGE=quay.io/metal3-io/ironic-client
++ export IRONIC_DATA_DIR=/opt/metal3-dev-env/ironic
++ IRONIC_DATA_DIR=/opt/metal3-dev-env/ironic
++ export IRONIC_IMAGE_DIR=/opt/metal3-dev-env/ironic/html/images
++ IRONIC_IMAGE_DIR=/opt/metal3-dev-env/ironic/html/images
++ export IRONIC_KEEPALIVED_IMAGE=quay.io/metal3-io/keepalived
++ IRONIC_KEEPALIVED_IMAGE=quay.io/metal3-io/keepalived
++ '[' v1beta1 == v1alpha4 ']'
++ export IRONIC_NAMESPACE=baremetal-operator-system
++ IRONIC_NAMESPACE=baremetal-operator-system
++ export NAMEPREFIX=baremetal-operator
++ NAMEPREFIX=baremetal-operator
++ export RESTART_CONTAINER_CERTIFICATE_UPDATED=true
++ RESTART_CONTAINER_CERTIFICATE_UPDATED=true
++ export BAREMETAL_OPERATOR_IMAGE=quay.io/metal3-io/baremetal-operator
++ BAREMETAL_OPERATOR_IMAGE=quay.io/metal3-io/baremetal-operator
++ export OPENSTACK_CONFIG=/home/capm3/.config/openstack/clouds.yaml
++ OPENSTACK_CONFIG=/home/capm3/.config/openstack/clouds.yaml
++ '[' v1beta1 == v1alpha4 ']'
++ '[' v1beta1 == v1alpha5 ']'
++ export CAPM3_IMAGE=quay.io/metal3-io/cluster-api-provider-metal3:main
++ CAPM3_IMAGE=quay.io/metal3-io/cluster-api-provider-metal3:main
++ export IPAM_IMAGE=quay.io/metal3-io/ip-address-manager:main
++ IPAM_IMAGE=quay.io/metal3-io/ip-address-manager:main
++ export DEFAULT_HOSTS_MEMORY=4096
++ DEFAULT_HOSTS_MEMORY=4096
++ export CLUSTER_NAME=test1
++ CLUSTER_NAME=test1
++ export CLUSTER_APIENDPOINT_IP=192.168.111.249
++ CLUSTER_APIENDPOINT_IP=192.168.111.249
++ export KUBERNETES_VERSION=v1.21.0
++ KUBERNETES_VERSION=v1.21.0
++ export KUBERNETES_BINARIES_VERSION=v1.21.0
++ KUBERNETES_BINARIES_VERSION=v1.21.0
++ export KUBERNETES_BINARIES_CONFIG_VERSION=v0.2.7
++ KUBERNETES_BINARIES_CONFIG_VERSION=v0.2.7
++ '[' docker == docker ']'
++ export EPHEMERAL_CLUSTER=kind
++ EPHEMERAL_CLUSTER=kind
++ export KUSTOMIZE_VERSION=v4.1.3
++ KUSTOMIZE_VERSION=v4.1.3
++ export KIND_VERSION=v0.11.1
++ KIND_VERSION=v0.11.1
++ '[' v1.21.0 == v1.21.2 ']'
++ export KIND_NODE_IMAGE_VERSION=v1.22.2
++ KIND_NODE_IMAGE_VERSION=v1.22.2
++ export MINIKUBE_VERSION=v1.23.2
++ MINIKUBE_VERSION=v1.23.2
++ export ANSIBLE_VERSION=4.8.0
++ ANSIBLE_VERSION=4.8.0
++ SKIP_RETRIES=false
++ TEST_TIME_INTERVAL=10
++ TEST_MAX_TIME=240
++ FAILS=0
++ RESULT_STR=
++ export ANSIBLE_DISPLAY_SKIPPED_HOSTS=no
++ ANSIBLE_DISPLAY_SKIPPED_HOSTS=no
++ '[' 7 -lt 6 ']'
++ export LIBVIRT_DEFAULT_URI=qemu:///system
++ LIBVIRT_DEFAULT_URI=qemu:///system
++ '[' capm3 '!=' root ']'
++ '[' /run/user/1000 == /run/user/0 ']'
++ sudo -n uptime
++ export USE_FIREWALLD=False
++ USE_FIREWALLD=False
++ [[ ubuntu20 == \r\h\e\l\8 ]]
++ [[ ubuntu20 == \c\e\n\t\o\s\8 ]]
+++ df / --output=fstype
+++ tail -n 1
++ FSTYPE=ext4
++ case ${FSTYPE} in
++ '[' '!' -d /opt/metal3-dev-env ']'
+ remove_ironic_containers
+ for name in ipa-downloader vbmc sushy-tools httpd-infra
+ sudo docker ps
+ grep -w 'ipa-downloader$'
+ true
+ sudo docker ps --all
+ grep -w 'ipa-downloader$'
+ true
+ for name in ipa-downloader vbmc sushy-tools httpd-infra
+ sudo docker ps
+ grep -w 'vbmc$'
b942aa23d09f   quay.io/metal3-io/vbmc          "/bin/sh -c '/usr/bi…"   About an hour ago   Up About an hour                                               vbmc
+ sudo docker kill vbmc
vbmc
+ sudo docker ps --all
+ grep -w 'vbmc$'
b942aa23d09f   quay.io/metal3-io/vbmc          "/bin/sh -c '/usr/bi…"   About an hour ago   Exited (137) Less than a second ago                                               vbmc
+ sudo docker rm vbmc -f
vbmc
+ for name in ipa-downloader vbmc sushy-tools httpd-infra
+ sudo docker ps
+ grep -w 'sushy-tools$'
502ed86635b4   quay.io/metal3-io/sushy-tools   "/bin/sh -c 'sushy-e…"   About an hour ago   Up About an hour                                               sushy-tools
+ sudo docker kill sushy-tools
sushy-tools
+ sudo docker ps --all
+ grep -w 'sushy-tools$'
502ed86635b4   quay.io/metal3-io/sushy-tools   "/bin/sh -c 'sushy-e…"   About an hour ago   Exited (137) Less than a second ago                                               sushy-tools
+ sudo docker rm sushy-tools -f
sushy-tools
+ for name in ipa-downloader vbmc sushy-tools httpd-infra
+ sudo docker ps
+ grep -w 'httpd-infra$'
21449a750c00   quay.io/metal3-io/ironic   "/bin/runhttpd"          About an hour ago   Up About an hour                                               httpd-infra
+ sudo docker kill httpd-infra
httpd-infra
+ sudo docker ps --all
+ grep -w 'httpd-infra$'
21449a750c00   quay.io/metal3-io/ironic   "/bin/runhttpd"          About an hour ago   Exited (137) Less than a second ago                                               httpd-infra
+ sudo docker rm httpd-infra -f
httpd-infra
+ [[ docker == \p\o\d\m\a\n ]]
+ '[' false = true ']'
+ '[' false = true ']'
+ ANSIBLE_FORCE_COLOR=true
+ ansible-playbook -e working_dir=/opt/metal3-dev-env -e num_nodes=7 -e extradisks=false -e virthost=capm3 -e manage_baremetal=y -e nodes_file=/opt/metal3-dev-env/ironic_nodes.json -i vm-setup/inventory.ini -b -v vm-setup/teardown-playbook.yml
[0;34mUsing /home/capm3/projects/metal3-dev-env/ansible.cfg as config file[0m
[0;35m[DEPRECATION WARNING]: [defaults]callback_whitelist option, normalizing names [0m
[0;35mto new standard, use callbacks_enabled instead. This feature will be removed [0m
[0;35mfrom ansible-core in version 2.15. Deprecation warnings can be disabled by [0m
[0;35msetting deprecation_warnings=False in ansible.cfg.[0m

PLAY [Teardown previous libvirt setup] *****************************************
Tuesday 09 November 2021  17:36:43 +0000 (0:00:00.012)       0:00:00.012 ****** 

TASK [Gathering Facts] *********************************************************
[0;32mok: [localhost][0m
Tuesday 09 November 2021  17:36:45 +0000 (0:00:01.403)       0:00:01.416 ****** 

TASK [common : set_fact] *******************************************************
[0;32mok: [localhost] => {"ansible_facts": {"generate_vm_nodes": true}, "changed": false}[0m
Tuesday 09 November 2021  17:36:45 +0000 (0:00:00.068)       0:00:01.485 ****** 

TASK [common : Set an empty default for vm_nodes if not already defined] *******
[0;32mok: [localhost] => {"ansible_facts": {"vm_nodes": []}, "changed": false}[0m
Tuesday 09 November 2021  17:36:45 +0000 (0:00:00.045)       0:00:01.530 ****** 

TASK [common : Populate vm_nodes if not already defined] ***********************
[0;36mincluded: /home/capm3/projects/metal3-dev-env/vm-setup/roles/common/tasks/vm_nodes_tasks.yml for localhost => (item={'key': 'node', 'value': {'memory': '8192', 'disk': '50', 'vcpu': '2', 'extradisks': False}})[0m
Tuesday 09 November 2021  17:36:45 +0000 (0:00:00.091)       0:00:01.622 ****** 

TASK [common : set_fact] *******************************************************
[0;32mok: [localhost] => {"ansible_facts": {"vm_nodes_index": "0"}, "changed": false}[0m
Tuesday 09 November 2021  17:36:45 +0000 (0:00:00.064)       0:00:01.687 ****** 

TASK [common : set_fact] *******************************************************
[0;32mok: [localhost] => (item=0) => {"ansible_facts": {"vm_nodes": [{"flavor": "node", "name": "node_0", "virtualbmc_port": 6230}]}, "ansible_loop_var": "item", "changed": false, "item": 0}[0m
[0;32mok: [localhost] => (item=1) => {"ansible_facts": {"vm_nodes": [{"flavor": "node", "name": "node_0", "virtualbmc_port": 6230}, {"flavor": "node", "name": "node_1", "virtualbmc_port": 6231}]}, "ansible_loop_var": "item", "changed": false, "item": 1}[0m
[0;32mok: [localhost] => (item=2) => {"ansible_facts": {"vm_nodes": [{"flavor": "node", "name": "node_0", "virtualbmc_port": 6230}, {"flavor": "node", "name": "node_1", "virtualbmc_port": 6231}, {"flavor": "node", "name": "node_2", "virtualbmc_port": 6232}]}, "ansible_loop_var": "item", "changed": false, "item": 2}[0m
[0;32mok: [localhost] => (item=3) => {"ansible_facts": {"vm_nodes": [{"flavor": "node", "name": "node_0", "virtualbmc_port": 6230}, {"flavor": "node", "name": "node_1", "virtualbmc_port": 6231}, {"flavor": "node", "name": "node_2", "virtualbmc_port": 6232}, {"flavor": "node", "name": "node_3", "virtualbmc_port": 6233}]}, "ansible_loop_var": "item", "changed": false, "item": 3}[0m
[0;32mok: [localhost] => (item=4) => {"ansible_facts": {"vm_nodes": [{"flavor": "node", "name": "node_0", "virtualbmc_port": 6230}, {"flavor": "node", "name": "node_1", "virtualbmc_port": 6231}, {"flavor": "node", "name": "node_2", "virtualbmc_port": 6232}, {"flavor": "node", "name": "node_3", "virtualbmc_port": 6233}, {"flavor": "node", "name": "node_4", "virtualbmc_port": 6234}]}, "ansible_loop_var": "item", "changed": false, "item": 4}[0m
[0;32mok: [localhost] => (item=5) => {"ansible_facts": {"vm_nodes": [{"flavor": "node", "name": "node_0", "virtualbmc_port": 6230}, {"flavor": "node", "name": "node_1", "virtualbmc_port": 6231}, {"flavor": "node", "name": "node_2", "virtualbmc_port": 6232}, {"flavor": "node", "name": "node_3", "virtualbmc_port": 6233}, {"flavor": "node", "name": "node_4", "virtualbmc_port": 6234}, {"flavor": "node", "name": "node_5", "virtualbmc_port": 6235}]}, "ansible_loop_var": "item", "changed": false, "item": 5}[0m
[0;32mok: [localhost] => (item=6) => {"ansible_facts": {"vm_nodes": [{"flavor": "node", "name": "node_0", "virtualbmc_port": 6230}, {"flavor": "node", "name": "node_1", "virtualbmc_port": 6231}, {"flavor": "node", "name": "node_2", "virtualbmc_port": 6232}, {"flavor": "node", "name": "node_3", "virtualbmc_port": 6233}, {"flavor": "node", "name": "node_4", "virtualbmc_port": 6234}, {"flavor": "node", "name": "node_5", "virtualbmc_port": 6235}, {"flavor": "node", "name": "node_6", "virtualbmc_port": 6236}]}, "ansible_loop_var": "item", "changed": false, "item": 6}[0m
Tuesday 09 November 2021  17:36:45 +0000 (0:00:00.145)       0:00:01.832 ****** 

TASK [common : set_fact] *******************************************************
[0;32mok: [localhost] => {"ansible_facts": {"vm_nodes_index": "7"}, "changed": false}[0m
Tuesday 09 November 2021  17:36:45 +0000 (0:00:00.068)       0:00:01.901 ****** 

TASK [common : debug] **********************************************************
[0;32mok: [localhost] => {[0m
[0;32m    "vm_nodes": [[0m
[0;32m        {[0m
[0;32m            "flavor": "node",[0m
[0;32m            "name": "node_0",[0m
[0;32m            "virtualbmc_port": 6230[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "flavor": "node",[0m
[0;32m            "name": "node_1",[0m
[0;32m            "virtualbmc_port": 6231[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "flavor": "node",[0m
[0;32m            "name": "node_2",[0m
[0;32m            "virtualbmc_port": 6232[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "flavor": "node",[0m
[0;32m            "name": "node_3",[0m
[0;32m            "virtualbmc_port": 6233[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "flavor": "node",[0m
[0;32m            "name": "node_4",[0m
[0;32m            "virtualbmc_port": 6234[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "flavor": "node",[0m
[0;32m            "name": "node_5",[0m
[0;32m            "virtualbmc_port": 6235[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "flavor": "node",[0m
[0;32m            "name": "node_6",[0m
[0;32m            "virtualbmc_port": 6236[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
Tuesday 09 November 2021  17:36:45 +0000 (0:00:00.076)       0:00:01.977 ****** 

TASK [common : set_fact] *******************************************************
[0;32mok: [localhost] => {"ansible_facts": {"generate_vm_nodes": false}, "changed": false}[0m
Tuesday 09 November 2021  17:36:45 +0000 (0:00:00.067)       0:00:02.045 ****** 
Tuesday 09 November 2021  17:36:45 +0000 (0:00:00.041)       0:00:02.086 ****** 
Tuesday 09 November 2021  17:36:46 +0000 (0:00:00.080)       0:00:02.167 ****** 
Tuesday 09 November 2021  17:36:46 +0000 (0:00:00.069)       0:00:02.236 ****** 
Tuesday 09 November 2021  17:36:46 +0000 (0:00:00.042)       0:00:02.278 ****** 
Tuesday 09 November 2021  17:36:46 +0000 (0:00:00.042)       0:00:02.321 ****** 
Tuesday 09 November 2021  17:36:46 +0000 (0:00:00.042)       0:00:02.363 ****** 

TASK [libvirt : include_tasks] *************************************************
[0;36mincluded: /home/capm3/projects/metal3-dev-env/vm-setup/roles/libvirt/tasks/network_teardown_tasks.yml for localhost[0m
Tuesday 09 November 2021  17:36:46 +0000 (0:00:00.059)       0:00:02.422 ****** 
[1;35m[WARNING]: The value '' is not a valid IP address or network, passing this[0m
[1;35mvalue to ipaddr filter might result in breaking change in future.[0m

TASK [libvirt : Stop libvirt networks] *****************************************
[0;33mchanged: [localhost] => (item={'name': 'provisioning', 'bridge': 'provisioning', 'forward_mode': 'bridge'}) => {"ansible_loop_var": "item", "changed": true, "item": {"bridge": "provisioning", "forward_mode": "bridge", "name": "provisioning"}, "msg": 0}[0m
[0;33mchanged: [localhost] => (item={'name': 'baremetal', 'bridge': 'baremetal', 'forward_mode': 'nat', 'address_v4': '', 'netmask_v4': False, 'dhcp_range_v4': ['', ''], 'address_v6': '', 'prefix_v6': False, 'dhcp_range_v6': ['', ''], 'lease_expiry': 60, 'nat_port_range': [1024, 65535], 'domain': 'ostest.test.metalkube.org', 'dns': {'hosts': [], 'forwarders': [{'domain': 'apps.ostest.test.metalkube.org', 'addr': '::1'}], 'srvs': []}}) => {"ansible_loop_var": "item", "changed": true, "item": {"address_v4": "", "address_v6": "", "bridge": "baremetal", "dhcp_range_v4": ["", ""], "dhcp_range_v6": ["", ""], "dns": {"forwarders": [{"addr": "::1", "domain": "apps.ostest.test.metalkube.org"}], "hosts": [], "srvs": []}, "domain": "ostest.test.metalkube.org", "forward_mode": "nat", "lease_expiry": 60, "name": "baremetal", "nat_port_range": [1024, 65535], "netmask_v4": false, "prefix_v6": false}, "msg": 0}[0m
Tuesday 09 November 2021  17:36:47 +0000 (0:00:00.944)       0:00:03.366 ****** 
[1;35m[WARNING]: The value '' is not a valid IP address or network, passing this[0m
[1;35mvalue to ipaddr filter might result in breaking change in future.[0m

TASK [libvirt : Delete libvirt networks] ***************************************
[0;33mchanged: [localhost] => (item={'name': 'provisioning', 'bridge': 'provisioning', 'forward_mode': 'bridge'}) => {"ansible_loop_var": "item", "changed": true, "item": {"bridge": "provisioning", "forward_mode": "bridge", "name": "provisioning"}, "msg": 0}[0m
[0;33mchanged: [localhost] => (item={'name': 'baremetal', 'bridge': 'baremetal', 'forward_mode': 'nat', 'address_v4': '', 'netmask_v4': False, 'dhcp_range_v4': ['', ''], 'address_v6': '', 'prefix_v6': False, 'dhcp_range_v6': ['', ''], 'lease_expiry': 60, 'nat_port_range': [1024, 65535], 'domain': 'ostest.test.metalkube.org', 'dns': {'hosts': [], 'forwarders': [{'domain': 'apps.ostest.test.metalkube.org', 'addr': '::1'}], 'srvs': []}}) => {"ansible_loop_var": "item", "changed": true, "item": {"address_v4": "", "address_v6": "", "bridge": "baremetal", "dhcp_range_v4": ["", ""], "dhcp_range_v6": ["", ""], "dns": {"forwarders": [{"addr": "::1", "domain": "apps.ostest.test.metalkube.org"}], "hosts": [], "srvs": []}, "domain": "ostest.test.metalkube.org", "forward_mode": "nat", "lease_expiry": 60, "name": "baremetal", "nat_port_range": [1024, 65535], "netmask_v4": false, "prefix_v6": false}, "msg": 0}[0m
Tuesday 09 November 2021  17:36:47 +0000 (0:00:00.614)       0:00:03.981 ****** 

TASK [libvirt : Delete bridges and veth interfaces on Ubuntu] ******************
[0;33mchanged: [localhost] => {"changed": true, "cmd": "sudo ip link set baremetal down\nsudo ip link set provisioning down\nsudo ip link set ironicendpoint down\nbrctl delbr baremetal || true\nbrctl delbr provisioning || true\nsudo ip link del ironicendpoint || true\n", "delta": "0:00:00.308338", "end": "2021-11-09 17:36:48.536125", "msg": "", "rc": 0, "start": "2021-11-09 17:36:48.227787", "stderr": "Cannot find device \"baremetal\"\nbridge baremetal doesn't exist; can't delete it", "stderr_lines": ["Cannot find device \"baremetal\"", "bridge baremetal doesn't exist; can't delete it"], "stdout": "", "stdout_lines": []}[0m
Tuesday 09 November 2021  17:36:48 +0000 (0:00:00.697)       0:00:04.678 ****** 

TASK [libvirt : include_tasks] *************************************************
[0;36mincluded: /home/capm3/projects/metal3-dev-env/vm-setup/roles/libvirt/tasks/vm_teardown_tasks.yml for localhost[0m
Tuesday 09 November 2021  17:36:48 +0000 (0:00:00.063)       0:00:04.741 ****** 

TASK [libvirt : Check if libvirt is available] *********************************
[0;32mok: [localhost] => {"changed": false, "cmd": ["virsh", "uri"], "delta": "0:00:00.020218", "end": "2021-11-09 17:36:48.894982", "msg": "", "rc": 0, "start": "2021-11-09 17:36:48.874764", "stderr": "", "stderr_lines": [], "stdout": "qemu:///system", "stdout_lines": ["qemu:///system"]}[0m
Tuesday 09 November 2021  17:36:48 +0000 (0:00:00.294)       0:00:05.036 ****** 

TASK [libvirt : Check vm vms] **************************************************
[0;33mchanged: [localhost] => (item={'name': 'node_0', 'flavor': 'node', 'virtualbmc_port': 6230}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_0"], "delta": "0:00:00.019469", "end": "2021-11-09 17:36:49.180695", "item": {"flavor": "node", "name": "node_0", "virtualbmc_port": 6230}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.161226", "stderr": "", "stderr_lines": [], "stdout": "5", "stdout_lines": ["5"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_1', 'flavor': 'node', 'virtualbmc_port': 6231}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_1"], "delta": "0:00:00.019383", "end": "2021-11-09 17:36:49.395711", "item": {"flavor": "node", "name": "node_1", "virtualbmc_port": 6231}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.376328", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_2', 'flavor': 'node', 'virtualbmc_port': 6232}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_2"], "delta": "0:00:00.020211", "end": "2021-11-09 17:36:49.636517", "item": {"flavor": "node", "name": "node_2", "virtualbmc_port": 6232}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.616306", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_3', 'flavor': 'node', 'virtualbmc_port': 6233}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_3"], "delta": "0:00:00.019646", "end": "2021-11-09 17:36:49.852395", "item": {"flavor": "node", "name": "node_3", "virtualbmc_port": 6233}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.832749", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_4', 'flavor': 'node', 'virtualbmc_port': 6234}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_4"], "delta": "0:00:00.020455", "end": "2021-11-09 17:36:50.079698", "item": {"flavor": "node", "name": "node_4", "virtualbmc_port": 6234}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:50.059243", "stderr": "", "stderr_lines": [], "stdout": "7", "stdout_lines": ["7"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_5', 'flavor': 'node', 'virtualbmc_port': 6235}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_5"], "delta": "0:00:00.019309", "end": "2021-11-09 17:36:50.294543", "item": {"flavor": "node", "name": "node_5", "virtualbmc_port": 6235}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:50.275234", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_6', 'flavor': 'node', 'virtualbmc_port': 6236}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_6"], "delta": "0:00:00.019714", "end": "2021-11-09 17:36:50.508494", "item": {"flavor": "node", "name": "node_6", "virtualbmc_port": 6236}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:50.488780", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}[0m
Tuesday 09 November 2021  17:36:50 +0000 (0:00:01.624)       0:00:06.660 ****** 

TASK [libvirt : Destroy vm vms] ************************************************
[0;33mchanged: [localhost] => (item={'changed': True, 'stdout': '5', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_0'], 'start': '2021-11-09 17:36:49.161226', 'end': '2021-11-09 17:36:49.180695', 'delta': '0:00:00.019469', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_0"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['5'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_0', 'flavor': 'node', 'virtualbmc_port': 6230}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "destroy", "node_0"], "delta": "0:00:00.429183", "end": "2021-11-09 17:36:51.218084", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_0"], "delta": "0:00:00.019469", "end": "2021-11-09 17:36:49.180695", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_0\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_0", "virtualbmc_port": 6230}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.161226", "stderr": "", "stderr_lines": [], "stdout": "5", "stdout_lines": ["5"]}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:50.788901", "stderr": "", "stderr_lines": [], "stdout": "Domain node_0 destroyed", "stdout_lines": ["Domain node_0 destroyed"]}[0m
[0;31mfailed: [localhost] (item={'changed': True, 'stdout': '-', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_1'], 'start': '2021-11-09 17:36:49.376328', 'end': '2021-11-09 17:36:49.395711', 'delta': '0:00:00.019383', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_1"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['-'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_1', 'flavor': 'node', 'virtualbmc_port': 6231}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "destroy", "node_1"], "delta": "0:00:00.019655", "end": "2021-11-09 17:36:51.446535", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_1"], "delta": "0:00:00.019383", "end": "2021-11-09 17:36:49.395711", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_1\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_1", "virtualbmc_port": 6231}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.376328", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}, "msg": "non-zero return code", "rc": 1, "start": "2021-11-09 17:36:51.426880", "stderr": "error: Failed to destroy domain node_1\nerror: Requested operation is not valid: domain is not running", "stderr_lines": ["error: Failed to destroy domain node_1", "error: Requested operation is not valid: domain is not running"], "stdout": "", "stdout_lines": []}[0m
[0;31mfailed: [localhost] (item={'changed': True, 'stdout': '-', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_2'], 'start': '2021-11-09 17:36:49.616306', 'end': '2021-11-09 17:36:49.636517', 'delta': '0:00:00.020211', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_2"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['-'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_2', 'flavor': 'node', 'virtualbmc_port': 6232}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "destroy", "node_2"], "delta": "0:00:00.019476", "end": "2021-11-09 17:36:51.668861", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_2"], "delta": "0:00:00.020211", "end": "2021-11-09 17:36:49.636517", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_2\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_2", "virtualbmc_port": 6232}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.616306", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}, "msg": "non-zero return code", "rc": 1, "start": "2021-11-09 17:36:51.649385", "stderr": "error: Failed to destroy domain node_2\nerror: Requested operation is not valid: domain is not running", "stderr_lines": ["error: Failed to destroy domain node_2", "error: Requested operation is not valid: domain is not running"], "stdout": "", "stdout_lines": []}[0m
[0;31mfailed: [localhost] (item={'changed': True, 'stdout': '-', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_3'], 'start': '2021-11-09 17:36:49.832749', 'end': '2021-11-09 17:36:49.852395', 'delta': '0:00:00.019646', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_3"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['-'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_3', 'flavor': 'node', 'virtualbmc_port': 6233}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "destroy", "node_3"], "delta": "0:00:00.021482", "end": "2021-11-09 17:36:51.892049", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_3"], "delta": "0:00:00.019646", "end": "2021-11-09 17:36:49.852395", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_3\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_3", "virtualbmc_port": 6233}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.832749", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}, "msg": "non-zero return code", "rc": 1, "start": "2021-11-09 17:36:51.870567", "stderr": "error: Failed to destroy domain node_3\nerror: Requested operation is not valid: domain is not running", "stderr_lines": ["error: Failed to destroy domain node_3", "error: Requested operation is not valid: domain is not running"], "stdout": "", "stdout_lines": []}[0m
[0;33mchanged: [localhost] => (item={'changed': True, 'stdout': '7', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_4'], 'start': '2021-11-09 17:36:50.059243', 'end': '2021-11-09 17:36:50.079698', 'delta': '0:00:00.020455', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_4"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['7'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_4', 'flavor': 'node', 'virtualbmc_port': 6234}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "destroy", "node_4"], "delta": "0:00:00.429560", "end": "2021-11-09 17:36:52.546615", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_4"], "delta": "0:00:00.020455", "end": "2021-11-09 17:36:50.079698", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_4\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_4", "virtualbmc_port": 6234}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:50.059243", "stderr": "", "stderr_lines": [], "stdout": "7", "stdout_lines": ["7"]}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:52.117055", "stderr": "", "stderr_lines": [], "stdout": "Domain node_4 destroyed", "stdout_lines": ["Domain node_4 destroyed"]}[0m
[0;31mfailed: [localhost] (item={'changed': True, 'stdout': '-', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_5'], 'start': '2021-11-09 17:36:50.275234', 'end': '2021-11-09 17:36:50.294543', 'delta': '0:00:00.019309', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_5"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['-'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_5', 'flavor': 'node', 'virtualbmc_port': 6235}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "destroy", "node_5"], "delta": "0:00:00.019843", "end": "2021-11-09 17:36:52.767371", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_5"], "delta": "0:00:00.019309", "end": "2021-11-09 17:36:50.294543", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_5\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_5", "virtualbmc_port": 6235}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:50.275234", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}, "msg": "non-zero return code", "rc": 1, "start": "2021-11-09 17:36:52.747528", "stderr": "error: Failed to destroy domain node_5\nerror: Requested operation is not valid: domain is not running", "stderr_lines": ["error: Failed to destroy domain node_5", "error: Requested operation is not valid: domain is not running"], "stdout": "", "stdout_lines": []}[0m
[0;31mfailed: [localhost] (item={'changed': True, 'stdout': '-', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_6'], 'start': '2021-11-09 17:36:50.488780', 'end': '2021-11-09 17:36:50.508494', 'delta': '0:00:00.019714', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_6"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['-'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_6', 'flavor': 'node', 'virtualbmc_port': 6236}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "destroy", "node_6"], "delta": "0:00:00.020168", "end": "2021-11-09 17:36:53.011162", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_6"], "delta": "0:00:00.019714", "end": "2021-11-09 17:36:50.508494", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_6\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_6", "virtualbmc_port": 6236}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:50.488780", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}, "msg": "non-zero return code", "rc": 1, "start": "2021-11-09 17:36:52.990994", "stderr": "error: Failed to destroy domain node_6\nerror: Requested operation is not valid: domain is not running", "stderr_lines": ["error: Failed to destroy domain node_6", "error: Requested operation is not valid: domain is not running"], "stdout": "", "stdout_lines": []}[0m
[0;36m...ignoring[0m
Tuesday 09 November 2021  17:36:53 +0000 (0:00:02.505)       0:00:09.165 ****** 

TASK [libvirt : Undefine vm vms] ***********************************************
[0;33mchanged: [localhost] => (item={'changed': True, 'stdout': '5', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_0'], 'start': '2021-11-09 17:36:49.161226', 'end': '2021-11-09 17:36:49.180695', 'delta': '0:00:00.019469', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_0"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['5'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_0', 'flavor': 'node', 'virtualbmc_port': 6230}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "undefine", "--nvram", "node_0"], "delta": "0:00:00.022431", "end": "2021-11-09 17:36:53.320562", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_0"], "delta": "0:00:00.019469", "end": "2021-11-09 17:36:49.180695", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_0\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_0", "virtualbmc_port": 6230}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.161226", "stderr": "", "stderr_lines": [], "stdout": "5", "stdout_lines": ["5"]}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:53.298131", "stderr": "", "stderr_lines": [], "stdout": "Domain node_0 has been undefined", "stdout_lines": ["Domain node_0 has been undefined"]}[0m
[0;33mchanged: [localhost] => (item={'changed': True, 'stdout': '-', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_1'], 'start': '2021-11-09 17:36:49.376328', 'end': '2021-11-09 17:36:49.395711', 'delta': '0:00:00.019383', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_1"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['-'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_1', 'flavor': 'node', 'virtualbmc_port': 6231}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "undefine", "--nvram", "node_1"], "delta": "0:00:00.020258", "end": "2021-11-09 17:36:53.538869", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_1"], "delta": "0:00:00.019383", "end": "2021-11-09 17:36:49.395711", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_1\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_1", "virtualbmc_port": 6231}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.376328", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:53.518611", "stderr": "", "stderr_lines": [], "stdout": "Domain node_1 has been undefined", "stdout_lines": ["Domain node_1 has been undefined"]}[0m
[0;33mchanged: [localhost] => (item={'changed': True, 'stdout': '-', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_2'], 'start': '2021-11-09 17:36:49.616306', 'end': '2021-11-09 17:36:49.636517', 'delta': '0:00:00.020211', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_2"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['-'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_2', 'flavor': 'node', 'virtualbmc_port': 6232}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "undefine", "--nvram", "node_2"], "delta": "0:00:00.020138", "end": "2021-11-09 17:36:53.755287", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_2"], "delta": "0:00:00.020211", "end": "2021-11-09 17:36:49.636517", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_2\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_2", "virtualbmc_port": 6232}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.616306", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:53.735149", "stderr": "", "stderr_lines": [], "stdout": "Domain node_2 has been undefined", "stdout_lines": ["Domain node_2 has been undefined"]}[0m
[0;33mchanged: [localhost] => (item={'changed': True, 'stdout': '-', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_3'], 'start': '2021-11-09 17:36:49.832749', 'end': '2021-11-09 17:36:49.852395', 'delta': '0:00:00.019646', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_3"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['-'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_3', 'flavor': 'node', 'virtualbmc_port': 6233}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "undefine", "--nvram", "node_3"], "delta": "0:00:00.021045", "end": "2021-11-09 17:36:53.976886", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_3"], "delta": "0:00:00.019646", "end": "2021-11-09 17:36:49.852395", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_3\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_3", "virtualbmc_port": 6233}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:49.832749", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:53.955841", "stderr": "", "stderr_lines": [], "stdout": "Domain node_3 has been undefined", "stdout_lines": ["Domain node_3 has been undefined"]}[0m
[0;33mchanged: [localhost] => (item={'changed': True, 'stdout': '7', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_4'], 'start': '2021-11-09 17:36:50.059243', 'end': '2021-11-09 17:36:50.079698', 'delta': '0:00:00.020455', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_4"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['7'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_4', 'flavor': 'node', 'virtualbmc_port': 6234}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "undefine", "--nvram", "node_4"], "delta": "0:00:00.019862", "end": "2021-11-09 17:36:54.194953", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_4"], "delta": "0:00:00.020455", "end": "2021-11-09 17:36:50.079698", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_4\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_4", "virtualbmc_port": 6234}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:50.059243", "stderr": "", "stderr_lines": [], "stdout": "7", "stdout_lines": ["7"]}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:54.175091", "stderr": "", "stderr_lines": [], "stdout": "Domain node_4 has been undefined", "stdout_lines": ["Domain node_4 has been undefined"]}[0m
[0;33mchanged: [localhost] => (item={'changed': True, 'stdout': '-', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_5'], 'start': '2021-11-09 17:36:50.275234', 'end': '2021-11-09 17:36:50.294543', 'delta': '0:00:00.019309', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_5"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['-'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_5', 'flavor': 'node', 'virtualbmc_port': 6235}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "undefine", "--nvram", "node_5"], "delta": "0:00:00.020695", "end": "2021-11-09 17:36:54.444503", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_5"], "delta": "0:00:00.019309", "end": "2021-11-09 17:36:50.294543", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_5\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_5", "virtualbmc_port": 6235}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:50.275234", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:54.423808", "stderr": "", "stderr_lines": [], "stdout": "Domain node_5 has been undefined", "stdout_lines": ["Domain node_5 has been undefined"]}[0m
[0;33mchanged: [localhost] => (item={'changed': True, 'stdout': '-', 'stderr': '', 'rc': 0, 'cmd': ['virsh', 'domid', 'node_6'], 'start': '2021-11-09 17:36:50.488780', 'end': '2021-11-09 17:36:50.508494', 'delta': '0:00:00.019714', 'msg': '', 'invocation': {'module_args': {'_raw_params': 'virsh domid "node_6"\n', '_uses_shell': False, 'warn': False, 'stdin_add_newline': True, 'strip_empty_ends': True, 'argv': None, 'chdir': None, 'executable': None, 'creates': None, 'removes': None, 'stdin': None}}, 'stdout_lines': ['-'], 'stderr_lines': [], 'failed': False, 'item': {'name': 'node_6', 'flavor': 'node', 'virtualbmc_port': 6236}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "undefine", "--nvram", "node_6"], "delta": "0:00:00.019621", "end": "2021-11-09 17:36:54.659795", "item": {"ansible_loop_var": "item", "changed": true, "cmd": ["virsh", "domid", "node_6"], "delta": "0:00:00.019714", "end": "2021-11-09 17:36:50.508494", "failed": false, "invocation": {"module_args": {"_raw_params": "virsh domid \"node_6\"\n", "_uses_shell": false, "argv": null, "chdir": null, "creates": null, "executable": null, "removes": null, "stdin": null, "stdin_add_newline": true, "strip_empty_ends": true, "warn": false}}, "item": {"flavor": "node", "name": "node_6", "virtualbmc_port": 6236}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:50.488780", "stderr": "", "stderr_lines": [], "stdout": "-", "stdout_lines": ["-"]}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:54.640174", "stderr": "", "stderr_lines": [], "stdout": "Domain node_6 has been undefined", "stdout_lines": ["Domain node_6 has been undefined"]}[0m
Tuesday 09 November 2021  17:36:54 +0000 (0:00:01.670)       0:00:10.836 ****** 

TASK [libvirt : Delete baremetal vm storage] ***********************************
[0;33mchanged: [localhost] => (item={'name': 'node_0', 'flavor': 'node', 'virtualbmc_port': 6230}) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh vol-dumpxml --pool 'oooq_pool'  'node_0'.qcow2 2>&1 > /dev/null\nvirsh vol-delete --pool 'oooq_pool'  'node_0'.qcow2\n", "delta": "0:00:00.038524", "end": "2021-11-09 17:36:55.006818", "item": {"flavor": "node", "name": "node_0", "virtualbmc_port": 6230}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:54.968294", "stderr": "", "stderr_lines": [], "stdout": "Vol node_0.qcow2 deleted", "stdout_lines": ["Vol node_0.qcow2 deleted"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_1', 'flavor': 'node', 'virtualbmc_port': 6231}) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh vol-dumpxml --pool 'oooq_pool'  'node_1'.qcow2 2>&1 > /dev/null\nvirsh vol-delete --pool 'oooq_pool'  'node_1'.qcow2\n", "delta": "0:00:00.038969", "end": "2021-11-09 17:36:55.244628", "item": {"flavor": "node", "name": "node_1", "virtualbmc_port": 6231}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:55.205659", "stderr": "", "stderr_lines": [], "stdout": "Vol node_1.qcow2 deleted", "stdout_lines": ["Vol node_1.qcow2 deleted"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_2', 'flavor': 'node', 'virtualbmc_port': 6232}) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh vol-dumpxml --pool 'oooq_pool'  'node_2'.qcow2 2>&1 > /dev/null\nvirsh vol-delete --pool 'oooq_pool'  'node_2'.qcow2\n", "delta": "0:00:02.827252", "end": "2021-11-09 17:36:58.265797", "item": {"flavor": "node", "name": "node_2", "virtualbmc_port": 6232}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:55.438545", "stderr": "", "stderr_lines": [], "stdout": "Vol node_2.qcow2 deleted", "stdout_lines": ["Vol node_2.qcow2 deleted"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_3', 'flavor': 'node', 'virtualbmc_port': 6233}) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh vol-dumpxml --pool 'oooq_pool'  'node_3'.qcow2 2>&1 > /dev/null\nvirsh vol-delete --pool 'oooq_pool'  'node_3'.qcow2\n", "delta": "0:00:02.971135", "end": "2021-11-09 17:37:01.438940", "item": {"flavor": "node", "name": "node_3", "virtualbmc_port": 6233}, "msg": "", "rc": 0, "start": "2021-11-09 17:36:58.467805", "stderr": "", "stderr_lines": [], "stdout": "Vol node_3.qcow2 deleted", "stdout_lines": ["Vol node_3.qcow2 deleted"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_4', 'flavor': 'node', 'virtualbmc_port': 6234}) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh vol-dumpxml --pool 'oooq_pool'  'node_4'.qcow2 2>&1 > /dev/null\nvirsh vol-delete --pool 'oooq_pool'  'node_4'.qcow2\n", "delta": "0:00:00.038307", "end": "2021-11-09 17:37:01.674711", "item": {"flavor": "node", "name": "node_4", "virtualbmc_port": 6234}, "msg": "", "rc": 0, "start": "2021-11-09 17:37:01.636404", "stderr": "", "stderr_lines": [], "stdout": "Vol node_4.qcow2 deleted", "stdout_lines": ["Vol node_4.qcow2 deleted"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_5', 'flavor': 'node', 'virtualbmc_port': 6235}) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh vol-dumpxml --pool 'oooq_pool'  'node_5'.qcow2 2>&1 > /dev/null\nvirsh vol-delete --pool 'oooq_pool'  'node_5'.qcow2\n", "delta": "0:00:02.978716", "end": "2021-11-09 17:37:04.875579", "item": {"flavor": "node", "name": "node_5", "virtualbmc_port": 6235}, "msg": "", "rc": 0, "start": "2021-11-09 17:37:01.896863", "stderr": "", "stderr_lines": [], "stdout": "Vol node_5.qcow2 deleted", "stdout_lines": ["Vol node_5.qcow2 deleted"]}[0m
[0;33mchanged: [localhost] => (item={'name': 'node_6', 'flavor': 'node', 'virtualbmc_port': 6236}) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh vol-dumpxml --pool 'oooq_pool'  'node_6'.qcow2 2>&1 > /dev/null\nvirsh vol-delete --pool 'oooq_pool'  'node_6'.qcow2\n", "delta": "0:00:02.915099", "end": "2021-11-09 17:37:07.988843", "item": {"flavor": "node", "name": "node_6", "virtualbmc_port": 6236}, "msg": "", "rc": 0, "start": "2021-11-09 17:37:05.073744", "stderr": "", "stderr_lines": [], "stdout": "Vol node_6.qcow2 deleted", "stdout_lines": ["Vol node_6.qcow2 deleted"]}[0m
Tuesday 09 November 2021  17:37:08 +0000 (0:00:13.306)       0:00:24.143 ****** 

TASK [libvirt : Check volume pool] *********************************************
[0;33mchanged: [localhost] => {"changed": true, "cmd": ["virsh", "pool-uuid", "oooq_pool"], "delta": "0:00:00.019316", "end": "2021-11-09 17:37:08.265355", "msg": "", "rc": 0, "start": "2021-11-09 17:37:08.246039", "stderr": "", "stderr_lines": [], "stdout": "d462c5fe-ccf9-466b-9349-69424fdf4474", "stdout_lines": ["d462c5fe-ccf9-466b-9349-69424fdf4474"]}[0m
Tuesday 09 November 2021  17:37:08 +0000 (0:00:00.266)       0:00:24.409 ****** 

TASK [libvirt : Work around libvirt bug] ***************************************
[0;33mchanged: [localhost] => {"changed": true, "cmd": "virsh pool-dumpxml \"oooq_pool\" |\nvirsh pool-define /dev/stdin\n", "delta": "0:01:23.265013", "end": "2021-11-09 17:38:31.780341", "msg": "", "rc": 0, "start": "2021-11-09 17:37:08.515328", "stderr": "", "stderr_lines": [], "stdout": "Pool oooq_pool defined from /dev/stdin", "stdout_lines": ["Pool oooq_pool defined from /dev/stdin"]}[0m
Tuesday 09 November 2021  17:38:31 +0000 (0:01:23.513)       0:01:47.923 ****** 

TASK [libvirt : Destroy volume pool] *******************************************
[0;33mchanged: [localhost] => {"changed": true, "cmd": ["virsh", "pool-destroy", "oooq_pool"], "delta": "0:00:00.019345", "end": "2021-11-09 17:38:32.046174", "msg": "", "rc": 0, "start": "2021-11-09 17:38:32.026829", "stderr": "", "stderr_lines": [], "stdout": "Pool oooq_pool destroyed", "stdout_lines": ["Pool oooq_pool destroyed"]}[0m
Tuesday 09 November 2021  17:38:32 +0000 (0:00:00.263)       0:01:48.186 ****** 

TASK [libvirt : Undefine volume pool] ******************************************
[0;33mchanged: [localhost] => {"changed": true, "cmd": ["virsh", "pool-undefine", "oooq_pool"], "delta": "0:00:00.019895", "end": "2021-11-09 17:38:32.317320", "msg": "", "rc": 0, "start": "2021-11-09 17:38:32.297425", "stderr": "", "stderr_lines": [], "stdout": "Pool oooq_pool has been undefined", "stdout_lines": ["Pool oooq_pool has been undefined"]}[0m
Tuesday 09 November 2021  17:38:32 +0000 (0:00:00.271)       0:01:48.458 ****** 

TASK [libvirt : Get UID of pool user] ******************************************
[0;32mok: [localhost] => {"changed": false, "cmd": ["id", "-u", "root"], "delta": "0:00:00.003423", "end": "2021-11-09 17:38:32.596283", "msg": "", "rc": 0, "start": "2021-11-09 17:38:32.592860", "stderr": "", "stderr_lines": [], "stdout": "0", "stdout_lines": ["0"]}[0m
Tuesday 09 November 2021  17:38:32 +0000 (0:00:00.279)       0:01:48.737 ****** 

TASK [libvirt : Destroy pool definition file] **********************************
[0;32mok: [localhost] => {"changed": false, "path": "/run/user/0/libvirt/storage/run/oooq_pool.xml", "state": "absent"}[0m
Tuesday 09 November 2021  17:38:33 +0000 (0:00:00.378)       0:01:49.115 ****** 

TASK [libvirt : Remove ironic_nodes.json] **************************************
[0;33mchanged: [localhost] => {"changed": true, "path": "/opt/metal3-dev-env/ironic_nodes.json", "state": "absent"}[0m
Tuesday 09 November 2021  17:38:33 +0000 (0:00:00.282)       0:01:49.398 ****** 
Tuesday 09 November 2021  17:38:33 +0000 (0:00:00.043)       0:01:49.441 ****** 

TASK [virtbmc : include_tasks] *************************************************
[0;36mincluded: /home/capm3/projects/metal3-dev-env/vm-setup/roles/virtbmc/tasks/teardown_tasks.yml for localhost[0m
Tuesday 09 November 2021  17:38:33 +0000 (0:00:00.055)       0:01:49.497 ****** 

TASK [virtbmc : Remove virtualbmc directories] *********************************
[0;32mok: [localhost] => (item=/etc/virtualbmc) => {"ansible_loop_var": "item", "changed": false, "item": "/etc/virtualbmc", "path": "/etc/virtualbmc", "state": "absent"}[0m
[0;32mok: [localhost] => (item=/var/log/virtualbmc) => {"ansible_loop_var": "item", "changed": false, "item": "/var/log/virtualbmc", "path": "/var/log/virtualbmc", "state": "absent"}[0m
[0;32mok: [localhost] => (item=/root/.vbmc/) => {"ansible_loop_var": "item", "changed": false, "item": "/root/.vbmc/", "path": "/root/.vbmc/", "state": "absent"}[0m
[0;33mchanged: [localhost] => (item=/opt/metal3-dev-env/virtualbmc) => {"ansible_loop_var": "item", "changed": true, "item": "/opt/metal3-dev-env/virtualbmc", "path": "/opt/metal3-dev-env/virtualbmc", "state": "absent"}[0m
Tuesday 09 November 2021  17:38:34 +0000 (0:00:00.853)       0:01:50.351 ****** 

TASK [virtbmc : Stop/disable the Virtual BMCs (virtualbmc >= 1.4.0+) on Ubuntu] ***
[0;33mchanged: [localhost] => {"changed": true, "cmd": "pkill vbmcd || true", "delta": "0:00:00.034888", "end": "2021-11-09 17:38:34.505157", "msg": "", "rc": 0, "start": "2021-11-09 17:38:34.470269", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

PLAY RECAP *********************************************************************
[0;33mlocalhost[0m                  : [0;32mok=29  [0m [0;33mchanged=14  [0m unreachable=0    failed=0    [0;36mskipped=7   [0m rescued=0    [1;35mignored=1   [0m

Tuesday 09 November 2021  17:38:34 +0000 (0:00:00.312)       0:01:50.663 ****** 
=============================================================================== 
libvirt : Work around libvirt bug -------------------------------------- 83.51s
libvirt : Delete baremetal vm storage ---------------------------------- 13.31s
libvirt : Destroy vm vms ------------------------------------------------ 2.51s
+ '[' False == False ']'
+ ANSIBLE_FORCE_COLOR=true
+ ansible-playbook -e '{use_firewalld: False}' -e 'external_subnet_v4: ' -e firewall_rule_state=absent -i vm-setup/inventory.ini -b -v vm-setup/firewall.yml
[0;34mUsing /home/capm3/projects/metal3-dev-env/ansible.cfg as config file[0m
[0;35m[DEPRECATION WARNING]: [defaults]callback_whitelist option, normalizing names [0m
[0;35mto new standard, use callbacks_enabled instead. This feature will be removed [0m
[0;35mfrom ansible-core in version 2.15. Deprecation warnings can be disabled by [0m
[0;35msetting deprecation_warnings=False in ansible.cfg.[0m

PLAY [Setup dummy baremetal VMs] ***********************************************
Tuesday 09 November 2021  17:38:35 +0000 (0:00:00.031)       0:00:00.031 ****** 

TASK [Gathering Facts] *********************************************************
[0;32mok: [localhost][0m
Tuesday 09 November 2021  17:38:36 +0000 (0:00:01.281)       0:00:01.313 ****** 
Tuesday 09 November 2021  17:38:36 +0000 (0:00:00.036)       0:00:01.349 ****** 

TASK [firewall : iptables] *****************************************************
[0;36mincluded: /home/capm3/projects/metal3-dev-env/vm-setup/roles/firewall/tasks/iptables.yaml for localhost[0m
Tuesday 09 November 2021  17:38:36 +0000 (0:00:00.052)       0:00:01.401 ****** 

TASK [firewall : iptables: Firewalld service stopped] **************************
[1;30mtask path: /home/capm3/projects/metal3-dev-env/vm-setup/roles/firewall/tasks/iptables.yaml:1[0m
[0;31mfatal: [localhost]: FAILED! => {"changed": false, "msg": "Could not find the requested service firewalld: host"}[0m
[0;36m...ignoring[0m
Tuesday 09 November 2021  17:38:37 +0000 (0:00:00.596)       0:00:01.998 ****** 

TASK [firewall : iptables: VBMC Ports] *****************************************
[0;33mchanged: [localhost] => {"chain": "INPUT", "changed": true, "flush": false, "ip_version": "ipv4", "rule": "-p udp -m udp -j ACCEPT -i baremetal --destination-port 6230:6235", "state": "absent", "table": "filter"}[0m
Tuesday 09 November 2021  17:38:37 +0000 (0:00:00.380)       0:00:02.379 ****** 

TASK [firewall : iptables: sushy Port] *****************************************
[0;33mchanged: [localhost] => {"chain": "INPUT", "changed": true, "flush": false, "ip_version": "ipv4", "rule": "-p tcp -m tcp -j ACCEPT -i baremetal --destination-port 8000", "state": "absent", "table": "filter"}[0m
Tuesday 09 November 2021  17:38:37 +0000 (0:00:00.238)       0:00:02.617 ****** 

TASK [firewall : iptables: Established and related] ****************************
[0;33mchanged: [localhost] => {"chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "rule": "-m conntrack -j ACCEPT -i provisioning --ctstate ESTABLISHED,RELATED", "state": "absent", "table": "filter"}[0m
Tuesday 09 November 2021  17:38:37 +0000 (0:00:00.239)       0:00:02.857 ****** 

TASK [firewall : iptables: Ironic Ports] ***************************************
[0;33mchanged: [localhost] => (item=6180) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "6180", "rule": "-p tcp -m tcp -j ACCEPT -i provisioning --destination-port 6180", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=5050) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "5050", "rule": "-p tcp -m tcp -j ACCEPT -i provisioning --destination-port 5050", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=6385) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "6385", "rule": "-p tcp -m tcp -j ACCEPT -i provisioning --destination-port 6385", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=9999) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "9999", "rule": "-p tcp -m tcp -j ACCEPT -i provisioning --destination-port 9999", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=80) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "80", "rule": "-p tcp -m tcp -j ACCEPT -i provisioning --destination-port 80", "state": "absent", "table": "filter"}[0m
Tuesday 09 November 2021  17:38:39 +0000 (0:00:01.101)       0:00:03.958 ****** 

TASK [firewall : iptables: Provisioning host ports] ****************************
[0;33mchanged: [localhost] => (item=80) => {"ansible_loop_var": "item", "chain": "INPUT", "changed": true, "flush": false, "ip_version": "ipv4", "item": "80", "rule": "-p tcp -m tcp -j ACCEPT -i provisioning --destination-port 80", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=5000) => {"ansible_loop_var": "item", "chain": "INPUT", "changed": true, "flush": false, "ip_version": "ipv4", "item": "5000", "rule": "-p tcp -m tcp -j ACCEPT -i provisioning --destination-port 5000", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=53) => {"ansible_loop_var": "item", "chain": "INPUT", "changed": true, "flush": false, "ip_version": "ipv4", "item": "53", "rule": "-p tcp -m tcp -j ACCEPT -i provisioning --destination-port 53", "state": "absent", "table": "filter"}[0m
Tuesday 09 November 2021  17:38:39 +0000 (0:00:00.671)       0:00:04.629 ****** 

TASK [firewall : iptables: PXE Ports] ******************************************
[0;33mchanged: [localhost] => (item=5353) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "5353", "rule": "-p udp -m udp -j ACCEPT -i provisioning --destination-port 5353", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=67) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "67", "rule": "-p udp -m udp -j ACCEPT -i provisioning --destination-port 67", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=68) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "68", "rule": "-p udp -m udp -j ACCEPT -i provisioning --destination-port 68", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=546) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "546", "rule": "-p udp -m udp -j ACCEPT -i provisioning --destination-port 546", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=547) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "547", "rule": "-p udp -m udp -j ACCEPT -i provisioning --destination-port 547", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=69) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "69", "rule": "-p udp -m udp -j ACCEPT -i provisioning --destination-port 69", "state": "absent", "table": "filter"}[0m
Tuesday 09 November 2021  17:38:40 +0000 (0:00:01.269)       0:00:05.899 ****** 

TASK [firewall : iptables: Ironic Endpoint Keepalived] *************************
[0;33mchanged: [localhost] => (item=112) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "112", "rule": "-p 112 -j ACCEPT -i provisioning", "state": "absent", "table": "filter"}[0m
[0;33mchanged: [localhost] => (item=icmp) => {"ansible_loop_var": "item", "chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "item": "icmp", "rule": "-p icmp -j ACCEPT -i provisioning", "state": "absent", "table": "filter"}[0m
Tuesday 09 November 2021  17:38:41 +0000 (0:00:00.462)       0:00:06.361 ****** 

TASK [firewall : iptables: Allow access to baremetal network from kind] ********
[0;33mchanged: [localhost] => {"chain": "FORWARD", "changed": true, "flush": false, "ip_version": "ipv4", "rule": "-d 192.168.111.0/24 -j ACCEPT -o baremetal", "state": "absent", "table": "filter"}[0m

PLAY RECAP *********************************************************************
[0;33mlocalhost[0m                  : [0;32mok=11  [0m [0;33mchanged=8   [0m unreachable=0    failed=0    [0;36mskipped=1   [0m rescued=0    [1;35mignored=1   [0m

Tuesday 09 November 2021  17:38:41 +0000 (0:00:00.276)       0:00:06.637 ****** 
=============================================================================== 
Gathering Facts --------------------------------------------------------- 1.28s
firewall : iptables: PXE Ports ------------------------------------------ 1.27s
firewall : iptables: Ironic Ports --------------------------------------- 1.10s
+ [[ ubuntu == \c\e\n\t\o\s ]]
+ [[ ubuntu == \r\h\e\l ]]
+ sudo rm -rf /var/log/libvirt/qemu/node_0-serial0.log /var/log/libvirt/qemu/node_1-serial0.log /var/log/libvirt/qemu/node_2-serial0.log /var/log/libvirt/qemu/node_3-serial0.log /var/log/libvirt/qemu/node_4-serial0.log /var/log/libvirt/qemu/node_5-serial0.log /var/log/libvirt/qemu/node_6-serial0.log
+ rm -rf /home/capm3/.cluster-api
