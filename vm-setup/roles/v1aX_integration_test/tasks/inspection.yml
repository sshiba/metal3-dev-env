---
  - name: Ensure jmespath is intalled
    pip:
      executable: "pip3"
      name: jmespath
      state: present
    become: yes
    become_user: root

  - name: Wait until "{{ NUM_NODES }}" bmhs become available.
    k8s_info:
      api_version: metal3.io/v1alpha1
      kind: BareMetalHost
      namespace: "{{ NAMESPACE }}"
    register: bmhs
    retries: 150
    delay: 10
    until:
      - bmhs is succeeded
      - bmhs.resources | filter_provisioning("available,ready") | length == (NUM_NODES | int)

  - name: Request inspection for hosts via API
    k8s:
      state: present
      namespace: "{{ NAMESPACE }}"
      definition:
        apiVersion: metal3.io/v1alpha1
        kind: BareMetalHost
        metadata:
          name: "{{ item }}"
          annotations:
            inspect.metal3.io: ""
    loop: "{{ bmhs.resources | filter_provisioning('available,ready') | map(attribute='metadata.name') }}"

  - name: Wait until "{{ NUM_NODES }}" bmhs are in inspecting or inspect wait state.
    k8s_info:
      api_version: metal3.io/v1alpha1
      kind: BareMetalHost
      namespace: "{{ NAMESPACE }}"
    register: bmhs
    retries: 150
    delay: 10
    until:
      - bmhs is succeeded
      - bmhs.resources | filter_provisioning("inspecting") |
        union(bmhs.resources | filter_provisioning("inspect wait")) |
        length == (NUM_NODES | int)

  - name: Wait until "{{ NUM_NODES }}" bmhs become available again.
    k8s_info:
      api_version: metal3.io/v1alpha1
      kind: BareMetalHost
      namespace: "{{ NAMESPACE }}"
    register: bmhs
    retries: 150
    delay: 10
    until:
      - bmhs is succeeded
      - bmhs.resources | filter_provisioning("available,ready") | length == (NUM_NODES | int)
