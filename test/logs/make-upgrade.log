capm3@capm3:~/projects/metal3-dev-env$ cd scripts/feature_tests/upgrade/
capm3@capm3:~/projects/metal3-dev-env/scripts/feature_tests/upgrade$ make
./../../fetch_manifests.sh
./upgrade.sh
++ export CAPIRELEASE_HARDCODED=v1.0.1
++ CAPIRELEASE_HARDCODED=v1.0.1
++ export CAPM3RELEASE=v1.0.1
++ CAPM3RELEASE=v1.0.1
+++ get_latest_capm3_release
+++ clusterctl upgrade plan
+++ grep infrastructure-metal3
+++ awk 'NR == 1 {print $5}'
Checking cert-manager version...
Checking new release availability...
Error: invalid provider metadata: version v1.0.0 (the current version) for the provider capm3-system/infrastructure-metal3 does not match any release series
++ CAPM3_REL_TO_VERSION=
++ export CAPM3_REL_TO_VERSION
++ export CAPIRELEASE=v1.0.1
++ CAPIRELEASE=v1.0.1
+++ get_latest_capi_release
+++ clusterctl upgrade plan
+++ grep cluster-api
+++ awk 'NR == 1 {print $5}'
Checking cert-manager version...
Checking new release availability...
Error: invalid provider metadata: version v1.0.0 (the current version) for the provider capm3-system/infrastructure-metal3 does not match any release series
++ CAPI_REL_TO_VERSION=
++ export CAPI_REL_TO_VERSION
++ export FROM_K8S_VERSION=v1.21.1
++ FROM_K8S_VERSION=v1.21.1
++ export KUBERNETES_VERSION=v1.21.1
++ KUBERNETES_VERSION=v1.21.1
++ export UPGRADED_K8S_VERSION=v1.22.2
++ UPGRADED_K8S_VERSION=v1.22.2
++ export MAX_SURGE_VALUE=0
++ MAX_SURGE_VALUE=0
++ export NUM_OF_MASTER_REPLICAS=3
++ NUM_OF_MASTER_REPLICAS=3
++ export NUM_OF_WORKER_REPLICAS=2
++ NUM_OF_WORKER_REPLICAS=2
+ export ACTION=upgrading
+ ACTION=upgrading
+ /home/capm3/projects/metal3-dev-env/scripts/feature_tests/upgrade/../../../scripts/run.sh
+++ readlink -f /home/capm3/projects/metal3-dev-env/scripts/feature_tests/upgrade/../../../scripts/run.sh
++ dirname /home/capm3/projects/metal3-dev-env/scripts/run.sh
+ METAL3_DIR=/home/capm3/projects/metal3-dev-env/scripts/..
+ ACTION=upgrading
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/logging.sh
+++ dirname /home/capm3/projects/metal3-dev-env/scripts/feature_tests/upgrade/../../../scripts/run.sh
++ LOGDIR=/home/capm3/projects/metal3-dev-env/scripts/feature_tests/upgrade/../../../scripts/logs
++ '[' '!' -d /home/capm3/projects/metal3-dev-env/scripts/feature_tests/upgrade/../../../scripts/logs ']'
+++ basename /home/capm3/projects/metal3-dev-env/scripts/feature_tests/upgrade/../../../scripts/run.sh .sh
+++ date +%F-%H%M%S
++ LOGFILE=/home/capm3/projects/metal3-dev-env/scripts/feature_tests/upgrade/../../../scripts/logs/run-2021-11-19-143637.log
++ echo 'Logging to /home/capm3/projects/metal3-dev-env/scripts/feature_tests/upgrade/../../../scripts/logs/run-2021-11-19-143637.log'
Logging to /home/capm3/projects/metal3-dev-env/scripts/feature_tests/upgrade/../../../scripts/logs/run-2021-11-19-143637.log
++ exec
+++ tee /home/capm3/projects/metal3-dev-env/scripts/feature_tests/upgrade/../../../scripts/logs/run-2021-11-19-143637.log
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/common.sh
++ [[ :/home/capm3/.local/bin:/home/capm3/.krew/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin: != *\:\/\u\s\r\/\l\o\c\a\l\/\g\o\/\b\i\n\:* ]]
+++ go env
++ eval 'GO111MODULE=""
GOARCH="amd64"
GOBIN=""
GOCACHE="/home/capm3/.cache/go-build"
GOENV="/home/capm3/.config/go/env"
GOEXE=""
GOFLAGS=""
GOHOSTARCH="amd64"
GOHOSTOS="linux"
GOINSECURE=""
GOMODCACHE="/home/capm3/go/pkg/mod"
GONOPROXY=""
GONOSUMDB=""
GOOS="linux"
GOPATH="/home/capm3/go"
GOPRIVATE=""
GOPROXY="https://proxy.golang.org,direct"
GOROOT="/usr/local/go"
GOSUMDB="sum.golang.org"
GOTMPDIR=""
GOTOOLDIR="/usr/local/go/pkg/tool/linux_amd64"
GOVCS=""
GOVERSION="go1.16.7"
GCCGO="gccgo"
AR="ar"
CC="gcc"
CXX="g++"
CGO_ENABLED="1"
GOMOD="/dev/null"
CGO_CFLAGS="-g -O2"
CGO_CPPFLAGS=""
CGO_CXXFLAGS="-g -O2"
CGO_FFLAGS="-g -O2"
CGO_LDFLAGS="-g -O2"
PKG_CONFIG="pkg-config"
GOGCCFLAGS="-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2206969095=/tmp/go-build -gno-record-gcc-switches"'
+++ GO111MODULE=
+++ GOARCH=amd64
+++ GOBIN=
+++ GOCACHE=/home/capm3/.cache/go-build
+++ GOENV=/home/capm3/.config/go/env
+++ GOEXE=
+++ GOFLAGS=
+++ GOHOSTARCH=amd64
+++ GOHOSTOS=linux
+++ GOINSECURE=
+++ GOMODCACHE=/home/capm3/go/pkg/mod
+++ GONOPROXY=
+++ GONOSUMDB=
+++ GOOS=linux
+++ GOPATH=/home/capm3/go
+++ GOPRIVATE=
+++ GOPROXY=https://proxy.golang.org,direct
+++ GOROOT=/usr/local/go
+++ GOSUMDB=sum.golang.org
+++ GOTMPDIR=
+++ GOTOOLDIR=/usr/local/go/pkg/tool/linux_amd64
+++ GOVCS=
+++ GOVERSION=go1.16.7
+++ GCCGO=gccgo
+++ AR=ar
+++ CC=gcc
+++ CXX=g++
+++ CGO_ENABLED=1
+++ GOMOD=/dev/null
+++ CGO_CFLAGS='-g -O2'
+++ CGO_CPPFLAGS=
+++ CGO_CXXFLAGS='-g -O2'
+++ CGO_FFLAGS='-g -O2'
+++ CGO_LDFLAGS='-g -O2'
+++ PKG_CONFIG=pkg-config
+++ GOGCCFLAGS='-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2206969095=/tmp/go-build -gno-record-gcc-switches'
++ export GOPATH
++++ dirname /home/capm3/projects/metal3-dev-env/scripts/../lib/common.sh
+++ cd /home/capm3/projects/metal3-dev-env/scripts/../lib/..
+++ pwd
++ SCRIPTDIR=/home/capm3/projects/metal3-dev-env
+++ whoami
++ USER=capm3
++ export USER=capm3
++ USER=capm3
++ '[' -z '' ']'
++ '[' '!' -f /home/capm3/projects/metal3-dev-env/config_capm3.sh ']'
++ CONFIG=/home/capm3/projects/metal3-dev-env/config_capm3.sh
++ source /home/capm3/projects/metal3-dev-env/config_capm3.sh
+++ export IRONIC_IMAGE_DIR=/home/capm3/projects/metal3-dev-env/test/images
+++ IRONIC_IMAGE_DIR=/home/capm3/projects/metal3-dev-env/test/images
+++ export KUBECONFIG=/home/capm3/.kube/config
+++ KUBECONFIG=/home/capm3/.kube/config
+++ export K8S_AUTH_KUBECONFIG=/home/capm3/.kube/config
+++ K8S_AUTH_KUBECONFIG=/home/capm3/.kube/config
+++ export IMAGE_OS=Ubuntu
+++ IMAGE_OS=Ubuntu
+++ export EPHEMERAL_CLUSTER=kind
+++ EPHEMERAL_CLUSTER=kind
+++ export CONTAINER_RUNTIME=docker
+++ CONTAINER_RUNTIME=docker
+++ export NUM_NODES=5
+++ NUM_NODES=5
+++ export NUM_OF_MASTER_REPLICAS=3
+++ NUM_OF_MASTER_REPLICAS=3
+++ export NUM_OF_WORKER_REPLICAS=2
+++ NUM_OF_WORKER_REPLICAS=2
+++ export CAPM3_VERSION=v1beta1
+++ CAPM3_VERSION=v1beta1
+++ export CAPI_VERSION=v1beta1
+++ CAPI_VERSION=v1beta1
+++ export KUBERNETES_VERSION=v1.21.1
+++ KUBERNETES_VERSION=v1.21.1
+++ export UPGRADED_K8S_VERSION=v1.22.2
+++ UPGRADED_K8S_VERSION=v1.22.2
+++ export IMAGE_USERNAME=metal3
+++ IMAGE_USERNAME=metal3
++ export MARIADB_HOST=mariaDB
++ MARIADB_HOST=mariaDB
++ export MARIADB_HOST_IP=127.0.0.1
++ MARIADB_HOST_IP=127.0.0.1
++ ADDN_DNS=
++ EXT_IF=
++ PRO_IF=
++ MANAGE_BR_BRIDGE=y
++ MANAGE_PRO_BRIDGE=y
++ MANAGE_INT_BRIDGE=y
++ INT_IF=
++ ROOT_DISK_NAME=/dev/sda
++ NODE_HOSTNAME_FORMAT=node-%d
++ source /etc/os-release
+++ NAME=Ubuntu
+++ VERSION='20.04.3 LTS (Focal Fossa)'
+++ ID=ubuntu
+++ ID_LIKE=debian
+++ PRETTY_NAME='Ubuntu 20.04.3 LTS'
+++ VERSION_ID=20.04
+++ HOME_URL=https://www.ubuntu.com/
+++ SUPPORT_URL=https://help.ubuntu.com/
+++ BUG_REPORT_URL=https://bugs.launchpad.net/ubuntu/
+++ PRIVACY_POLICY_URL=https://www.ubuntu.com/legal/terms-and-policies/privacy-policy
+++ VERSION_CODENAME=focal
+++ UBUNTU_CODENAME=focal
++ export DISTRO=ubuntu20
++ DISTRO=ubuntu20
++ export OS=ubuntu
++ OS=ubuntu
++ export OS_VERSION_ID=20.04
++ OS_VERSION_ID=20.04
++ SUPPORTED_DISTROS=(centos8 rhel8 ubuntu18 ubuntu20)
++ export SUPPORTED_DISTROS
++ [[ ! centos8 rhel8 ubuntu18 ubuntu20 =~ ubuntu20 ]]
++ [[ ubuntu == ubuntu ]]
++ export CONTAINER_RUNTIME=docker
++ CONTAINER_RUNTIME=docker
++ [[ docker == \p\o\d\m\a\n ]]
++ export POD_NAME=
++ POD_NAME=
++ export POD_NAME_INFRA=
++ POD_NAME_INFRA=
++ export SSH_KEY=/home/capm3/.ssh/id_rsa
++ SSH_KEY=/home/capm3/.ssh/id_rsa
++ export SSH_PUB_KEY=/home/capm3/.ssh/id_rsa.pub
++ SSH_PUB_KEY=/home/capm3/.ssh/id_rsa.pub
++ '[' '!' -f /home/capm3/.ssh/id_rsa ']'
++ FILESYSTEM=/
++ CAPM3_VERSION_LIST='v1alpha4 v1alpha5 v1beta1'
++ export CAPM3_VERSION=v1beta1
++ CAPM3_VERSION=v1beta1
++ '[' v1beta1 == v1alpha4 ']'
++ '[' v1beta1 == v1alpha5 ']'
++ '[' v1beta1 == v1beta1 ']'
++ export CAPI_VERSION=v1beta1
++ CAPI_VERSION=v1beta1
++ export M3PATH=/home/capm3/go/src/github.com/metal3-io
++ M3PATH=/home/capm3/go/src/github.com/metal3-io
++ export BMOPATH=/home/capm3/go/src/github.com/metal3-io/baremetal-operator
++ BMOPATH=/home/capm3/go/src/github.com/metal3-io/baremetal-operator
++ export RUN_LOCAL_IRONIC_SCRIPT=/home/capm3/go/src/github.com/metal3-io/baremetal-operator/tools/run_local_ironic.sh
++ RUN_LOCAL_IRONIC_SCRIPT=/home/capm3/go/src/github.com/metal3-io/baremetal-operator/tools/run_local_ironic.sh
++ export CAPM3PATH=/home/capm3/go/src/github.com/metal3-io/cluster-api-provider-metal3
++ CAPM3PATH=/home/capm3/go/src/github.com/metal3-io/cluster-api-provider-metal3
++ export CAPM3_BASE_URL=metal3-io/cluster-api-provider-metal3
++ CAPM3_BASE_URL=metal3-io/cluster-api-provider-metal3
++ export CAPM3REPO=https://github.com/metal3-io/cluster-api-provider-metal3
++ CAPM3REPO=https://github.com/metal3-io/cluster-api-provider-metal3
++ export IPAMPATH=/home/capm3/go/src/github.com/metal3-io/ip-address-manager
++ IPAMPATH=/home/capm3/go/src/github.com/metal3-io/ip-address-manager
++ export IPAM_BASE_URL=metal3-io/ip-address-manager
++ IPAM_BASE_URL=metal3-io/ip-address-manager
++ export IPAMREPO=https://github.com/metal3-io/ip-address-manager
++ IPAMREPO=https://github.com/metal3-io/ip-address-manager
++ '[' v1beta1 == v1alpha3 ']'
++ '[' v1beta1 == v1alpha4 ']'
++ IPAMBRANCH=main
++ IPA_DOWNLOAD_ENABLED=true
++ CAPI_BASE_URL=kubernetes-sigs/cluster-api
++ '[' v1beta1 == v1alpha4 ']'
++ '[' v1beta1 == v1alpha5 ']'
++ CAPM3BRANCH=main
++ BMOREPO=https://github.com/metal3-io/baremetal-operator.git
++ BMOBRANCH=master
++ FORCE_REPO_UPDATE=true
++ BMOCOMMIT=HEAD
++ BMO_RUN_LOCAL=false
++ CAPM3_RUN_LOCAL=false
++ WORKING_DIR=/opt/metal3-dev-env
++ NODES_FILE=/opt/metal3-dev-env/ironic_nodes.json
++ NODES_PLATFORM=libvirt
++ export NAMESPACE=metal3
++ NAMESPACE=metal3
++ export NUM_NODES=5
++ NUM_NODES=5
++ export NUM_OF_MASTER_REPLICAS=3
++ NUM_OF_MASTER_REPLICAS=3
++ export NUM_OF_WORKER_REPLICAS=2
++ NUM_OF_WORKER_REPLICAS=2
++ export VM_EXTRADISKS=false
++ VM_EXTRADISKS=false
++ export VM_EXTRADISKS_FILE_SYSTEM=ext4
++ VM_EXTRADISKS_FILE_SYSTEM=ext4
++ export VM_EXTRADISKS_MOUNT_DIR=/mnt/disk2
++ VM_EXTRADISKS_MOUNT_DIR=/mnt/disk2
++ export NODE_DRAIN_TIMEOUT=0s
++ NODE_DRAIN_TIMEOUT=0s
++ export MAX_SURGE_VALUE=0
++ MAX_SURGE_VALUE=0
++ export DOCKER_REGISTRY_IMAGE=registry:2.7.1
++ DOCKER_REGISTRY_IMAGE=registry:2.7.1
++ export CONTAINER_REGISTRY=quay.io
++ CONTAINER_REGISTRY=quay.io
++ export VBMC_IMAGE=quay.io/metal3-io/vbmc
++ VBMC_IMAGE=quay.io/metal3-io/vbmc
++ export SUSHY_TOOLS_IMAGE=quay.io/metal3-io/sushy-tools
++ SUSHY_TOOLS_IMAGE=quay.io/metal3-io/sushy-tools
++ export IRONIC_TLS_SETUP=true
++ IRONIC_TLS_SETUP=true
++ export IRONIC_BASIC_AUTH=true
++ IRONIC_BASIC_AUTH=true
++ export IPA_DOWNLOADER_IMAGE=quay.io/metal3-io/ironic-ipa-downloader
++ IPA_DOWNLOADER_IMAGE=quay.io/metal3-io/ironic-ipa-downloader
++ export IRONIC_IMAGE=quay.io/metal3-io/ironic
++ IRONIC_IMAGE=quay.io/metal3-io/ironic
++ export IRONIC_CLIENT_IMAGE=quay.io/metal3-io/ironic-client
++ IRONIC_CLIENT_IMAGE=quay.io/metal3-io/ironic-client
++ export IRONIC_DATA_DIR=/opt/metal3-dev-env/ironic
++ IRONIC_DATA_DIR=/opt/metal3-dev-env/ironic
++ export IRONIC_IMAGE_DIR=/opt/metal3-dev-env/ironic/html/images
++ IRONIC_IMAGE_DIR=/opt/metal3-dev-env/ironic/html/images
++ export IRONIC_KEEPALIVED_IMAGE=quay.io/metal3-io/keepalived
++ IRONIC_KEEPALIVED_IMAGE=quay.io/metal3-io/keepalived
++ '[' v1beta1 == v1alpha4 ']'
++ export IRONIC_NAMESPACE=baremetal-operator-system
++ IRONIC_NAMESPACE=baremetal-operator-system
++ export NAMEPREFIX=baremetal-operator
++ NAMEPREFIX=baremetal-operator
++ export RESTART_CONTAINER_CERTIFICATE_UPDATED=true
++ RESTART_CONTAINER_CERTIFICATE_UPDATED=true
++ export BAREMETAL_OPERATOR_IMAGE=quay.io/metal3-io/baremetal-operator
++ BAREMETAL_OPERATOR_IMAGE=quay.io/metal3-io/baremetal-operator
++ export OPENSTACK_CONFIG=/home/capm3/.config/openstack/clouds.yaml
++ OPENSTACK_CONFIG=/home/capm3/.config/openstack/clouds.yaml
++ '[' v1beta1 == v1alpha4 ']'
++ '[' v1beta1 == v1alpha5 ']'
++ export CAPM3_IMAGE=quay.io/metal3-io/cluster-api-provider-metal3:main
++ CAPM3_IMAGE=quay.io/metal3-io/cluster-api-provider-metal3:main
++ export IPAM_IMAGE=quay.io/metal3-io/ip-address-manager:main
++ IPAM_IMAGE=quay.io/metal3-io/ip-address-manager:main
++ export DEFAULT_HOSTS_MEMORY=4096
++ DEFAULT_HOSTS_MEMORY=4096
++ export CLUSTER_NAME=test1
++ CLUSTER_NAME=test1
++ export CLUSTER_APIENDPOINT_IP=192.168.111.249
++ CLUSTER_APIENDPOINT_IP=192.168.111.249
++ export KUBERNETES_VERSION=v1.21.1
++ KUBERNETES_VERSION=v1.21.1
++ export KUBERNETES_BINARIES_VERSION=v1.21.1
++ KUBERNETES_BINARIES_VERSION=v1.21.1
++ export KUBERNETES_BINARIES_CONFIG_VERSION=v0.2.7
++ KUBERNETES_BINARIES_CONFIG_VERSION=v0.2.7
++ '[' docker == docker ']'
++ export EPHEMERAL_CLUSTER=kind
++ EPHEMERAL_CLUSTER=kind
++ export KUSTOMIZE_VERSION=v4.1.3
++ KUSTOMIZE_VERSION=v4.1.3
++ export KIND_VERSION=v0.11.1
++ KIND_VERSION=v0.11.1
++ '[' v1.21.1 == v1.21.2 ']'
++ export KIND_NODE_IMAGE_VERSION=v1.22.2
++ KIND_NODE_IMAGE_VERSION=v1.22.2
++ export MINIKUBE_VERSION=v1.23.2
++ MINIKUBE_VERSION=v1.23.2
++ export ANSIBLE_VERSION=4.8.0
++ ANSIBLE_VERSION=4.8.0
++ SKIP_RETRIES=false
++ TEST_TIME_INTERVAL=10
++ TEST_MAX_TIME=240
++ FAILS=0
++ RESULT_STR=
++ export ANSIBLE_DISPLAY_SKIPPED_HOSTS=no
++ ANSIBLE_DISPLAY_SKIPPED_HOSTS=no
++ '[' 5 -lt 5 ']'
++ export LIBVIRT_DEFAULT_URI=qemu:///system
++ LIBVIRT_DEFAULT_URI=qemu:///system
++ '[' capm3 '!=' root ']'
++ '[' /run/user/1000 == /run/user/0 ']'
++ sudo -n uptime
++ export USE_FIREWALLD=False
++ USE_FIREWALLD=False
++ [[ ubuntu20 == \r\h\e\l\8 ]]
++ [[ ubuntu20 == \c\e\n\t\o\s\8 ]]
+++ df / --output=fstype
+++ tail -n 1
++ FSTYPE=ext4
++ case ${FSTYPE} in
++ '[' '!' -d /opt/metal3-dev-env ']'
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/releases.sh
++ CAPM3RELEASEPATH=https://api.github.com/repos/metal3-io/cluster-api-provider-metal3/releases
++ CAPIRELEASEPATH=https://api.github.com/repos/kubernetes-sigs/cluster-api/releases
++ '[' v1beta1 == v1alpha3 ']'
++ '[' v1beta1 == v1alpha4 ']'
++ export CAPIRELEASE=v1.0.1
++ CAPIRELEASE=v1.0.1
++ '[' v1beta1 == v1alpha4 ']'
++ '[' v1beta1 == v1alpha5 ']'
++ export CAPM3RELEASE=v1.0.0
++ CAPM3RELEASE=v1.0.0
++ [[ v1.0.1 == '' ]]
++ [[ v1.0.0 == '' ]]
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/network.sh
++ export CLUSTER_PROVISIONING_INTERFACE=ironicendpoint
++ CLUSTER_PROVISIONING_INTERFACE=ironicendpoint
++ export POD_CIDR=192.168.0.0/18
++ POD_CIDR=192.168.0.0/18
++ PROVISIONING_IPV6=false
++ IPV6_ADDR_PREFIX=fd2e:6f44:5dd8:b856
++ [[ false == \t\r\u\e ]]
++ export BOOT_MODE=legacy
++ BOOT_MODE=legacy
++ export PROVISIONING_NETWORK=172.22.0.0/24
++ PROVISIONING_NETWORK=172.22.0.0/24
++ [[ legacy == \l\e\g\a\c\y ]]
++ export LIBVIRT_FIRMWARE=bios
++ LIBVIRT_FIRMWARE=bios
++ export LIBVIRT_SECURE_BOOT=false
++ LIBVIRT_SECURE_BOOT=false
++ prefixlen PROVISIONING_CIDR 172.22.0.0/24
++ resultvar=PROVISIONING_CIDR
++ network=172.22.0.0/24
+++ python -c 'import ipaddress; print(ipaddress.ip_network(u"172.22.0.0/24").prefixlen)'
++ result=24
++ eval PROVISIONING_CIDR=24
+++ PROVISIONING_CIDR=24
++ export PROVISIONING_CIDR
++ export PROVISIONING_CIDR
+++ python -c 'import ipaddress; print(ipaddress.ip_network(u"172.22.0.0/24").netmask)'
++ export PROVISIONING_NETMASK=255.255.255.0
++ PROVISIONING_NETMASK=255.255.255.0
++ network_address PROVISIONING_IP 172.22.0.0/24 1
++ resultvar=PROVISIONING_IP
++ network=172.22.0.0/24
++ record=1
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 1 - 1, None)))'
++ result=172.22.0.1
++ eval PROVISIONING_IP=172.22.0.1
+++ PROVISIONING_IP=172.22.0.1
++ export PROVISIONING_IP
++ network_address CLUSTER_PROVISIONING_IP 172.22.0.0/24 2
++ resultvar=CLUSTER_PROVISIONING_IP
++ network=172.22.0.0/24
++ record=2
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 2 - 1, None)))'
++ result=172.22.0.2
++ eval CLUSTER_PROVISIONING_IP=172.22.0.2
+++ CLUSTER_PROVISIONING_IP=172.22.0.2
++ export CLUSTER_PROVISIONING_IP
++ export PROVISIONING_IP
++ export CLUSTER_PROVISIONING_IP
++ [[ 172.22.0.1 == *\:* ]]
++ export PROVISIONING_URL_HOST=172.22.0.1
++ PROVISIONING_URL_HOST=172.22.0.1
++ export CLUSTER_URL_HOST=172.22.0.2
++ CLUSTER_URL_HOST=172.22.0.2
++ [[ 192.168.111.249 == *\:* ]]
++ export CLUSTER_APIENDPOINT_HOST=192.168.111.249
++ CLUSTER_APIENDPOINT_HOST=192.168.111.249
++ export CLUSTER_APIENDPOINT_PORT=6443
++ CLUSTER_APIENDPOINT_PORT=6443
++ network_address dhcp_range_start 172.22.0.0/24 10
++ resultvar=dhcp_range_start
++ network=172.22.0.0/24
++ record=10
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 10 - 1, None)))'
++ result=172.22.0.10
++ eval dhcp_range_start=172.22.0.10
+++ dhcp_range_start=172.22.0.10
++ export dhcp_range_start
++ network_address dhcp_range_end 172.22.0.0/24 100
++ resultvar=dhcp_range_end
++ network=172.22.0.0/24
++ record=100
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 100 - 1, None)))'
++ result=172.22.0.100
++ eval dhcp_range_end=172.22.0.100
+++ dhcp_range_end=172.22.0.100
++ export dhcp_range_end
++ network_address PROVISIONING_POOL_RANGE_START 172.22.0.0/24 100
++ resultvar=PROVISIONING_POOL_RANGE_START
++ network=172.22.0.0/24
++ record=100
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 100 - 1, None)))'
++ result=172.22.0.100
++ eval PROVISIONING_POOL_RANGE_START=172.22.0.100
+++ PROVISIONING_POOL_RANGE_START=172.22.0.100
++ export PROVISIONING_POOL_RANGE_START
++ network_address PROVISIONING_POOL_RANGE_END 172.22.0.0/24 200
++ resultvar=PROVISIONING_POOL_RANGE_END
++ network=172.22.0.0/24
++ record=200
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 200 - 1, None)))'
++ result=172.22.0.200
++ eval PROVISIONING_POOL_RANGE_END=172.22.0.200
+++ PROVISIONING_POOL_RANGE_END=172.22.0.200
++ export PROVISIONING_POOL_RANGE_END
++ export PROVISIONING_POOL_RANGE_START
++ export PROVISIONING_POOL_RANGE_END
++ export CLUSTER_DHCP_RANGE=172.22.0.10,172.22.0.100
++ CLUSTER_DHCP_RANGE=172.22.0.10,172.22.0.100
++ EXTERNAL_SUBNET=
++ [[ -n '' ]]
++ export IP_STACK=v4
++ IP_STACK=v4
++ [[ v4 == \v\4 ]]
++ export EXTERNAL_SUBNET_V4=192.168.111.0/24
++ EXTERNAL_SUBNET_V4=192.168.111.0/24
++ export EXTERNAL_SUBNET_V6=
++ EXTERNAL_SUBNET_V6=
++ [[ kind == \m\i\n\i\k\u\b\e ]]
++ [[ -n 192.168.111.0/24 ]]
++ prefixlen EXTERNAL_SUBNET_V4_PREFIX 192.168.111.0/24
++ resultvar=EXTERNAL_SUBNET_V4_PREFIX
++ network=192.168.111.0/24
+++ python -c 'import ipaddress; print(ipaddress.ip_network(u"192.168.111.0/24").prefixlen)'
++ result=24
++ eval EXTERNAL_SUBNET_V4_PREFIX=24
+++ EXTERNAL_SUBNET_V4_PREFIX=24
++ export EXTERNAL_SUBNET_V4_PREFIX
++ export EXTERNAL_SUBNET_V4_PREFIX
++ [[ -z '' ]]
++ network_address EXTERNAL_SUBNET_V4_HOST 192.168.111.0/24 1
++ resultvar=EXTERNAL_SUBNET_V4_HOST
++ network=192.168.111.0/24
++ record=1
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"192.168.111.0/24").hosts(), 1 - 1, None)))'
++ result=192.168.111.1
++ eval EXTERNAL_SUBNET_V4_HOST=192.168.111.1
+++ EXTERNAL_SUBNET_V4_HOST=192.168.111.1
++ export EXTERNAL_SUBNET_V4_HOST
++ network_address VIRSH_DHCP_V4_START 192.168.111.0/24 20
++ resultvar=VIRSH_DHCP_V4_START
++ network=192.168.111.0/24
++ record=20
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"192.168.111.0/24").hosts(), 20 - 1, None)))'
++ result=192.168.111.20
++ eval VIRSH_DHCP_V4_START=192.168.111.20
+++ VIRSH_DHCP_V4_START=192.168.111.20
++ export VIRSH_DHCP_V4_START
++ network_address VIRSH_DHCP_V4_END 192.168.111.0/24 60
++ resultvar=VIRSH_DHCP_V4_END
++ network=192.168.111.0/24
++ record=60
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"192.168.111.0/24").hosts(), 60 - 1, None)))'
++ result=192.168.111.60
++ eval VIRSH_DHCP_V4_END=192.168.111.60
+++ VIRSH_DHCP_V4_END=192.168.111.60
++ export VIRSH_DHCP_V4_END
++ network_address BAREMETALV4_POOL_RANGE_START 192.168.111.0/24 100
++ resultvar=BAREMETALV4_POOL_RANGE_START
++ network=192.168.111.0/24
++ record=100
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"192.168.111.0/24").hosts(), 100 - 1, None)))'
++ result=192.168.111.100
++ eval BAREMETALV4_POOL_RANGE_START=192.168.111.100
+++ BAREMETALV4_POOL_RANGE_START=192.168.111.100
++ export BAREMETALV4_POOL_RANGE_START
++ network_address BAREMETALV4_POOL_RANGE_END 192.168.111.0/24 200
++ resultvar=BAREMETALV4_POOL_RANGE_END
++ network=192.168.111.0/24
++ record=200
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"192.168.111.0/24").hosts(), 200 - 1, None)))'
++ result=192.168.111.200
++ eval BAREMETALV4_POOL_RANGE_END=192.168.111.200
+++ BAREMETALV4_POOL_RANGE_END=192.168.111.200
++ export BAREMETALV4_POOL_RANGE_END
++ export VIRSH_DHCP_V4_START
++ export VIRSH_DHCP_V4_END
++ export BAREMETALV4_POOL_RANGE_START
++ export BAREMETALV4_POOL_RANGE_END
++ [[ -n '' ]]
++ export EXTERNAL_SUBNET_V6_HOST=
++ EXTERNAL_SUBNET_V6_HOST=
++ export EXTERNAL_SUBNET_V6_PREFIX=
++ EXTERNAL_SUBNET_V6_PREFIX=
++ export BAREMETALV6_POOL_RANGE_START=
++ BAREMETALV6_POOL_RANGE_START=
++ export BAREMETALV6_POOL_RANGE_END=
++ BAREMETALV6_POOL_RANGE_END=
++ export REGISTRY_PORT=5000
++ REGISTRY_PORT=5000
++ export HTTP_PORT=6180
++ HTTP_PORT=6180
++ export IRONIC_INSPECTOR_PORT=5050
++ IRONIC_INSPECTOR_PORT=5050
++ export IRONIC_API_PORT=6385
++ IRONIC_API_PORT=6385
++ [[ -n 192.168.111.1 ]]
++ export REGISTRY=192.168.111.1:5000
++ REGISTRY=192.168.111.1:5000
++ network_address INITIAL_IRONICBRIDGE_IP 172.22.0.0/24 9
++ resultvar=INITIAL_IRONICBRIDGE_IP
++ network=172.22.0.0/24
++ record=9
+++ python -c 'import ipaddress; import itertools; print(next(itertools.islice(ipaddress.ip_network(u"172.22.0.0/24").hosts(), 9 - 1, None)))'
++ result=172.22.0.9
++ eval INITIAL_IRONICBRIDGE_IP=172.22.0.9
+++ INITIAL_IRONICBRIDGE_IP=172.22.0.9
++ export INITIAL_IRONICBRIDGE_IP
++ export DEPLOY_KERNEL_URL=http://172.22.0.2:6180/images/ironic-python-agent.kernel
++ DEPLOY_KERNEL_URL=http://172.22.0.2:6180/images/ironic-python-agent.kernel
++ export DEPLOY_RAMDISK_URL=http://172.22.0.2:6180/images/ironic-python-agent.initramfs
++ DEPLOY_RAMDISK_URL=http://172.22.0.2:6180/images/ironic-python-agent.initramfs
++ '[' true == true ']'
++ export IRONIC_URL=https://172.22.0.2:6385/v1/
++ IRONIC_URL=https://172.22.0.2:6385/v1/
++ export IRONIC_INSPECTOR_URL=https://172.22.0.2:5050/v1/
++ IRONIC_INSPECTOR_URL=https://172.22.0.2:5050/v1/
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/images.sh
++ IMAGE_OS=Ubuntu
++ [[ Ubuntu == \U\b\u\n\t\u ]]
++ export IMAGE_NAME=UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1.qcow2
++ IMAGE_NAME=UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1.qcow2
++ export IMAGE_LOCATION=https://artifactory.nordix.org/artifactory/airship/images/k8s_v1.21.1/
++ IMAGE_LOCATION=https://artifactory.nordix.org/artifactory/airship/images/k8s_v1.21.1/
++ export IMAGE_URL=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1.qcow2
++ IMAGE_URL=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1.qcow2
++ export IMAGE_CHECKSUM=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1.qcow2.md5sum
++ IMAGE_CHECKSUM=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1.qcow2.md5sum
++ export IMAGE_USERNAME=metal3
++ IMAGE_USERNAME=metal3
++ IMAGE_BASE_NAME=UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1
++ export IMAGE_RAW_NAME=UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img
++ IMAGE_RAW_NAME=UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img
++ export IMAGE_RAW_URL=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img
++ IMAGE_RAW_URL=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img
++ export IMAGE_RAW_CHECKSUM=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum
++ IMAGE_RAW_CHECKSUM=http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/ironic_tls_setup.sh
++ '[' true == true ']'
++ pushd /opt/metal3-dev-env
/opt/metal3-dev-env ~/projects/metal3-dev-env/scripts/feature_tests/upgrade
++ mkdir -p /opt/metal3-dev-env/certs
++ pushd /opt/metal3-dev-env/certs
/opt/metal3-dev-env/certs /opt/metal3-dev-env ~/projects/metal3-dev-env/scripts/feature_tests/upgrade
++ export IRONIC_BASE_URL=https://172.22.0.2
++ IRONIC_BASE_URL=https://172.22.0.2
++ export IRONIC_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ IRONIC_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ export IRONIC_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ IRONIC_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ export IRONIC_CERT_FILE=/opt/metal3-dev-env/certs/ironic.crt
++ IRONIC_CERT_FILE=/opt/metal3-dev-env/certs/ironic.crt
++ export IRONIC_KEY_FILE=/opt/metal3-dev-env/certs/ironic.key
++ IRONIC_KEY_FILE=/opt/metal3-dev-env/certs/ironic.key
++ export IRONIC_INSPECTOR_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ IRONIC_INSPECTOR_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ export IRONIC_INSPECTOR_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ IRONIC_INSPECTOR_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ export IRONIC_INSPECTOR_CERT_FILE=/opt/metal3-dev-env/certs/ironic-inspector.crt
++ IRONIC_INSPECTOR_CERT_FILE=/opt/metal3-dev-env/certs/ironic-inspector.crt
++ export IRONIC_INSPECTOR_KEY_FILE=/opt/metal3-dev-env/certs/ironic-inspector.key
++ IRONIC_INSPECTOR_KEY_FILE=/opt/metal3-dev-env/certs/ironic-inspector.key
++ export MARIADB_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ MARIADB_CACERT_FILE=/opt/metal3-dev-env/certs/ironic-ca.pem
++ export MARIADB_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ MARIADB_CAKEY_FILE=/opt/metal3-dev-env/certs/ironic-ca.key
++ export MARIADB_CERT_FILE=/opt/metal3-dev-env/certs/mariadb.crt
++ MARIADB_CERT_FILE=/opt/metal3-dev-env/certs/mariadb.crt
++ export MARIADB_KEY_FILE=/opt/metal3-dev-env/certs/mariadb.key
++ MARIADB_KEY_FILE=/opt/metal3-dev-env/certs/mariadb.key
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.pem ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.pem ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-ca.pem ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-inspector.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/mariadb.key ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic.crt ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/ironic-inspector.crt ']'
++ '[' '!' -f /opt/metal3-dev-env/certs/mariadb.crt ']'
++ '[' /opt/metal3-dev-env/certs/ironic-ca.pem == /opt/metal3-dev-env/certs/ironic-ca.pem ']'
+++ base64 -w 0
++ IRONIC_CA_CERT_B64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lVT3VuNm5LYy9vS29sc0FyVXQ0RWJNMXNMWkM4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZERVNNQkFHQTFVRUF3d0phWEp2Ym1saklFTkJNQjRYRFRJeE1URXdPVEUyTXpFME5sb1hEVEkyTVRFdwpPREUyTXpFME5sb3dGREVTTUJBR0ExVUVBd3dKYVhKdmJtbGpJRU5CTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBblJQdFNlT0VnSnZGN05oS2k2U0Z0bkFkelhJM0ZLckZmTjhzdkpCR0FqYU0KS2xxeUhvY1haUmFLWiswM1NXWDBzOHBlYkpKZFQxUUpZRURCbEY1MnlNeEt1TTZ6elZocmNiTU5mWExmbE1YbwpYekhFVGdRZmVvRXRPL1RLWWlyTWQ0WmU2a0VvSGI5Yk9EWk9XRUoweWJSQUgzNFdOdjRvV2s5TkdWenlFN012ClRqVWcrZ0lzdWdQbGhTeXc3L3lzL1hoeEtnYXN0UXRjZnZ2clBBY0hsd3YrT3UyMkVFZk5sbGprNDQzU2gzMGkKSzR6ZCtZRW02ZnBFdDI3SFEybXhqL2hlWWcxQW9rTC8xcVNaaGlkWnM0cU03R3Z6WVRZc3ZLZ3haYXNUR2NuSAp3Ylc5WmpFNk40Y1piTVFIM1dmbnRqcWk0VmJSbmRmM3JTRHQ2RFlJOVFJREFRQUJvMU13VVRBZEJnTlZIUTRFCkZnUVVRQnpRM2FHK3h6Sm5tK0FjV2wrbTZyVlRXbll3SHdZRFZSMGpCQmd3Rm9BVVFCelEzYUcreHpKbm0rQWMKV2wrbTZyVlRXbll3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBSjZzVgpGV3VpT3lMUzNTWnBrak00YWJmMmI0blZIalI0UllsZWZITjd1SUpMUnQwSFdJWmNDbThmOVJkMitodUhkTTh1Cm5QRVcxQWFPZkFiNFVqRWM1WHhmN3UrbGdvSHBiSy9jQURJWTBsQ09pK2Q0MHM3VDNCRFJhakNXVHl2NlBuYkMKTXRKV2FDWkhFcElGdGtqbmZ3MFNHOEdOaTBsbWRyVmFPdmo4NmpRUVlRVEFsWk96ek8yZ3p6TjJCdVVLZ0hUZApOWlZ3a29jWkVwVS9tT1ZKZ2l2YnJBeFpLcmVYUXN4dWFWbys3eXNwR2lyKzF2dklOc29pNlRsV1d5Syt0ZVlrCitNODg0VStUQ2lJRE5EbTI1T09scWhPYlVScW5HWUpmdXBNSlREbGpLNDhJZytodk55a05EdGQ1RFczWGVpUkIKWjZiQURWc2pOelZVNm83YmhRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
++ export IRONIC_CA_CERT_B64
++ popd
/opt/metal3-dev-env ~/projects/metal3-dev-env/scripts/feature_tests/upgrade
++ popd
~/projects/metal3-dev-env/scripts/feature_tests/upgrade
++ unset IRONIC_NO_CA_CERT
+ source /home/capm3/projects/metal3-dev-env/scripts/../lib/ironic_basic_auth.sh
++ '[' true == true ']'
++ IRONIC_AUTH_DIR=/opt/metal3-dev-env/ironic/auth/
++ mkdir -p /opt/metal3-dev-env/ironic/auth/
++ '[' -z '' ']'
++ '[' '!' -f /opt/metal3-dev-env/ironic/auth/ironic-username ']'
+++ cat /opt/metal3-dev-env/ironic/auth/ironic-username
++ IRONIC_USERNAME=beEjrgcnZkhE
++ '[' -z '' ']'
++ '[' '!' -f /opt/metal3-dev-env/ironic/auth/ironic-password ']'
+++ cat /opt/metal3-dev-env/ironic/auth/ironic-password
++ IRONIC_PASSWORD=mT7bb6QxcdIT
++ IRONIC_INSPECTOR_USERNAME=beEjrgcnZkhE
++ IRONIC_INSPECTOR_PASSWORD=mT7bb6QxcdIT
++ export IRONIC_USERNAME
++ export IRONIC_PASSWORD
++ export IRONIC_INSPECTOR_USERNAME
++ export IRONIC_INSPECTOR_PASSWORD
++ unset IRONIC_NO_BASIC_AUTH
++ unset IRONIC_INSPECTOR_NO_BASIC_AUTH
+ export ANSIBLE_HOST_KEY_CHECKING=False
+ ANSIBLE_HOST_KEY_CHECKING=False
+ export ANSIBLE_CONFIG=/home/capm3/projects/metal3-dev-env/scripts/../ansible.cfg
+ ANSIBLE_CONFIG=/home/capm3/projects/metal3-dev-env/scripts/../ansible.cfg
+ ANSIBLE_FORCE_COLOR=true
+ ansible-playbook -e metal3_dir=/home/capm3/projects/metal3-dev-env -e v1aX_integration_test_action=upgrading -i /home/capm3/projects/metal3-dev-env/scripts/../vm-setup/inventory.ini -b -v /home/capm3/projects/metal3-dev-env/scripts/../vm-setup/v1aX_integration_test.yml
Using /home/capm3/projects/metal3-dev-env/ansible.cfg as config file
[DEPRECATION WARNING]: [defaults]callback_whitelist option, normalizing names 
to new standard, use callbacks_enabled instead. This feature will be removed 
from ansible-core in version 2.15. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
[WARNING]: Skipping plugin (/home/capm3/projects/metal3-dev-env/vm-
setup/roles/v1aX_integration_test/filter_plugins/k8s_fields_test.py) as it
seems to be invalid: No module named 'k8s_fields'

PLAY [v1beta1 integration test] ************************************************
Friday 19 November 2021  14:36:38 +0000 (0:00:00.077)       0:00:00.077 ******* 

TASK [Gathering Facts] *********************************************************
ok: [localhost]
Friday 19 November 2021  14:36:40 +0000 (0:00:01.585)       0:00:01.662 ******* 

TASK [v1aX_integration_test : Generate templates] ******************************
included: /home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/tasks/generate_templates.yml for localhost
Friday 19 November 2021  14:36:40 +0000 (0:00:00.098)       0:00:01.761 ******* 

TASK [v1aX_integration_test : Get BMH facts] ***********************************
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-0\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6230\",\"credentialsName\":\"node-0-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:93\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T14:17:18Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 1, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:online": {}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:21:49Z"}], "name": "node-0", "namespace": "metal3", "resourceVersion": "2994", "uid": "5f526f39-9270-4941-8328-f783b718f46d"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6230", "credentialsName": "node-0-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:93", "bootMode": "legacy", "online": true}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-0-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "1750"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-0", "nics": [{"ip": "192.168.111.20", "mac": "00:32:34:b8:79:95", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::3b75:9a7:38c4:db26%enp2s0", "mac": "00:32:34:b8:79:95", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.30", "mac": "00:32:34:b8:79:93", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::7e4:4deb:a8d5:366d%enp1s0", "mac": "00:32:34:b8:79:93", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T14:21:49Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:48Z", "start": "2021-11-19T14:18:04Z"}, "provision": {"end": null, "start": null}, "register": {"end": "2021-11-19T14:18:04Z", "start": "2021-11-19T14:17:51Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "480c61c8-a74b-4574-b204-442759c05719", "bootMode": "legacy", "image": {"url": ""}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "available"}, "triedCredentials": {"credentials": {"name": "node-0-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "1750"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-1\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"redfish+http://192.168.111.1:8000/redfish/v1/Systems/580c73b0-bb65-4b2a-9761-d79d7b4d7002\",\"credentialsName\":\"node-1-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:97\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T14:17:18Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 1, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:online": {}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:21:33Z"}], "name": "node-1", "namespace": "metal3", "resourceVersion": "2893", "uid": "1f1f0f2f-1031-45d9-8192-f3645deeba0d"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "redfish+http://192.168.111.1:8000/redfish/v1/Systems/580c73b0-bb65-4b2a-9761-d79d7b4d7002", "credentialsName": "node-1-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:97", "bootMode": "legacy", "online": true}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-1-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "1756"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-1", "nics": [{"ip": "192.168.111.21", "mac": "00:32:34:b8:79:99", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::1418:ce16:723:a6cc%enp2s0", "mac": "00:32:34:b8:79:99", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.34", "mac": "00:32:34:b8:79:97", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::61ef:8c7a:20af:9369%enp1s0", "mac": "00:32:34:b8:79:97", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T14:21:34Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:33Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": null, "start": null}, "register": {"end": "2021-11-19T14:18:03Z", "start": "2021-11-19T14:17:51Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "80f8b62a-b7e0-4952-b2e6-2ca81961612b", "bootMode": "legacy", "image": {"url": ""}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "available"}, "triedCredentials": {"credentials": {"name": "node-1-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "1756"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-2\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6232\",\"credentialsName\":\"node-2-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:9b\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T14:17:18Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 1, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:online": {}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:21:48Z"}], "name": "node-2", "namespace": "metal3", "resourceVersion": "2973", "uid": "a0d2af16-8f4c-4ff3-bb36-a6b7046796f0"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6232", "credentialsName": "node-2-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:9b", "bootMode": "legacy", "online": true}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-2-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "1753"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-2", "nics": [{"ip": "192.168.111.22", "mac": "00:32:34:b8:79:9d", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::4543:596e:ca54:27b0%enp2s0", "mac": "00:32:34:b8:79:9d", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.38", "mac": "00:32:34:b8:79:9b", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::f6c7:ad5a:940c:e9c8%enp1s0", "mac": "00:32:34:b8:79:9b", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T14:21:48Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:47Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": null, "start": null}, "register": {"end": "2021-11-19T14:18:03Z", "start": "2021-11-19T14:17:51Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "f378a1a8-875c-482c-95ce-2f889ef86554", "bootMode": "legacy", "image": {"url": ""}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "available"}, "triedCredentials": {"credentials": {"name": "node-2-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "1753"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-3\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"redfish+http://192.168.111.1:8000/redfish/v1/Systems/d244c2e6-fb91-4804-a12f-0aff629d7019\",\"credentialsName\":\"node-3-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:9f\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T14:17:18Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 1, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:online": {}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:21:48Z"}], "name": "node-3", "namespace": "metal3", "resourceVersion": "2974", "uid": "cdbb73f8-8247-495f-97dd-ee54daaa1098"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "redfish+http://192.168.111.1:8000/redfish/v1/Systems/d244c2e6-fb91-4804-a12f-0aff629d7019", "credentialsName": "node-3-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:9f", "bootMode": "legacy", "online": true}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-3-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "1752"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-3", "nics": [{"ip": "192.168.111.23", "mac": "00:32:34:b8:79:a1", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::3d37:b969:de95:55ec%enp2s0", "mac": "00:32:34:b8:79:a1", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.42", "mac": "00:32:34:b8:79:9f", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::6876:f857:58c4:b12b%enp1s0", "mac": "00:32:34:b8:79:9f", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T14:21:48Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:47Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": null, "start": null}, "register": {"end": "2021-11-19T14:18:03Z", "start": "2021-11-19T14:17:51Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "49016cb5-f391-4fbc-9f1e-b0c0b1537656", "bootMode": "legacy", "image": {"url": ""}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "available"}, "triedCredentials": {"credentials": {"name": "node-3-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "1752"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-4\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6234\",\"credentialsName\":\"node-4-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:a3\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T14:17:18Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 1, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:online": {}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:21:49Z"}], "name": "node-4", "namespace": "metal3", "resourceVersion": "2993", "uid": "a3b5897b-6923-406c-9314-a89e423a1a80"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6234", "credentialsName": "node-4-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:a3", "bootMode": "legacy", "online": true}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-4-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "1747"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-4", "nics": [{"ip": "192.168.111.24", "mac": "00:32:34:b8:79:a5", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::ef5e:d24f:b921:dbef%enp2s0", "mac": "00:32:34:b8:79:a5", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.46", "mac": "00:32:34:b8:79:a3", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::b539:db85:4c3e:29ab%enp1s0", "mac": "00:32:34:b8:79:a3", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T14:21:49Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:48Z", "start": "2021-11-19T14:18:04Z"}, "provision": {"end": null, "start": null}, "register": {"end": "2021-11-19T14:18:04Z", "start": "2021-11-19T14:17:51Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "99c4e4f5-637b-46a5-93eb-fc57a95069df", "bootMode": "legacy", "image": {"url": ""}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "available"}, "triedCredentials": {"credentials": {"name": "node-4-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "1747"}}}]}
Friday 19 November 2021  14:36:44 +0000 (0:00:03.771)       0:00:05.533 ******* 

TASK [v1aX_integration_test : Set fact for NIC names for the first BMH found] ***
ok: [localhost] => {"ansible_facts": {"bmh_nic_names": ["enp1s0", "enp2s0"]}, "changed": false}
Friday 19 November 2021  14:36:44 +0000 (0:00:00.070)       0:00:05.603 ******* 

TASK [v1aX_integration_test : Create a temporary manifest directory if it does not exist] ***
ok: [localhost] => {"changed": false, "gid": 1000, "group": "capm3", "mode": "0755", "owner": "capm3", "path": "/home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/files/manifests", "size": 4096, "state": "directory", "uid": 1000}
Friday 19 November 2021  14:36:44 +0000 (0:00:00.399)       0:00:06.003 ******* 

TASK [v1aX_integration_test : Deploy clusterctl variables to clusterctl config] ***
changed: [localhost] => {"changed": true, "checksum": "9096389f3d54466462207fb4b346e8b530cfb59c", "dest": "/home/capm3/.cluster-api/clusterctl.yaml", "gid": 1000, "group": "capm3", "md5sum": "4120d0e6da728da2ae9dcabac9988542", "mode": "0664", "owner": "capm3", "size": 867, "src": "/home/capm3/.ansible/tmp/ansible-tmp-1637332604.8832533-52398-142979220967334/source", "state": "file", "uid": 1000}
Friday 19 November 2021  14:36:45 +0000 (0:00:00.771)       0:00:06.774 ******* 

TASK [v1aX_integration_test : Generate clusterctl cluster template] ************
changed: [localhost] => (item=cluster) => {"ansible_loop_var": "item", "changed": true, "checksum": "02ded3a9a5b0271ed55165db861acdfc688f26d7", "dest": "/home/capm3/.cluster-api/overrides/infrastructure-metal3/v1.0.0/cluster-template-cluster.yaml", "gid": 1000, "group": "capm3", "item": "cluster", "md5sum": "17ec48ce22e971759cf211b3c57396cd", "mode": "0664", "owner": "capm3", "size": 1468, "src": "/home/capm3/.ansible/tmp/ansible-tmp-1637332605.661973-52467-108375776619178/source", "state": "file", "uid": 1000}
changed: [localhost] => (item=controlplane) => {"ansible_loop_var": "item", "changed": true, "checksum": "51861f5f6da85329b0debc9bf986aa540a69e3b9", "dest": "/home/capm3/.cluster-api/overrides/infrastructure-metal3/v1.0.0/cluster-template-controlplane.yaml", "gid": 1000, "group": "capm3", "item": "controlplane", "md5sum": "c68cbd0c4cd68acd539ec21189ce45e1", "mode": "0664", "owner": "capm3", "size": 7279, "src": "/home/capm3/.ansible/tmp/ansible-tmp-1637332606.0576775-52467-134763757948777/source", "state": "file", "uid": 1000}
changed: [localhost] => (item=workers) => {"ansible_loop_var": "item", "changed": true, "checksum": "78fcdc75c1071ce6105dfc03f575eb339233ff64", "dest": "/home/capm3/.cluster-api/overrides/infrastructure-metal3/v1.0.0/cluster-template-workers.yaml", "gid": 1000, "group": "capm3", "item": "workers", "md5sum": "cf4d6ba7ff2536be44981c61ebe64b8b", "mode": "0664", "owner": "capm3", "size": 4731, "src": "/home/capm3/.ansible/tmp/ansible-tmp-1637332606.5098183-52467-142436486521821/source", "state": "file", "uid": 1000}
Friday 19 November 2021  14:36:46 +0000 (0:00:01.365)       0:00:08.139 ******* 

TASK [v1aX_integration_test : Generate templates] ******************************
changed: [localhost] => (item=cluster) => {"ansible_loop_var": "item", "changed": true, "cmd": "clusterctl generate cluster test1 --from /home/capm3/.cluster-api/overrides/infrastructure-metal3/v1.0.0/cluster-template-cluster.yaml --kubernetes-version v1.21.1 --control-plane-machine-count=3 --worker-machine-count=2 --target-namespace=metal3 > /home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/files/manifests/v1beta1_cluster_ubuntu.yaml\n", "delta": "0:00:00.039099", "end": "2021-11-19 14:36:47.377953", "item": "cluster", "msg": "", "rc": 0, "start": "2021-11-19 14:36:47.338854", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
changed: [localhost] => (item=controlplane) => {"ansible_loop_var": "item", "changed": true, "cmd": "clusterctl generate cluster test1 --from /home/capm3/.cluster-api/overrides/infrastructure-metal3/v1.0.0/cluster-template-controlplane.yaml --kubernetes-version v1.21.1 --control-plane-machine-count=3 --worker-machine-count=2 --target-namespace=metal3 > /home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/files/manifests/v1beta1_controlplane_ubuntu.yaml\n", "delta": "0:00:00.044374", "end": "2021-11-19 14:36:47.640209", "item": "controlplane", "msg": "", "rc": 0, "start": "2021-11-19 14:36:47.595835", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
changed: [localhost] => (item=workers) => {"ansible_loop_var": "item", "changed": true, "cmd": "clusterctl generate cluster test1 --from /home/capm3/.cluster-api/overrides/infrastructure-metal3/v1.0.0/cluster-template-workers.yaml --kubernetes-version v1.21.1 --control-plane-machine-count=3 --worker-machine-count=2 --target-namespace=metal3 > /home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/files/manifests/v1beta1_workers_ubuntu.yaml\n", "delta": "0:00:00.043734", "end": "2021-11-19 14:36:47.891701", "item": "workers", "msg": "", "rc": 0, "start": "2021-11-19 14:36:47.847967", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
Friday 19 November 2021  14:36:47 +0000 (0:00:00.976)       0:00:09.115 ******* 
Friday 19 November 2021  14:36:48 +0000 (0:00:00.054)       0:00:09.170 ******* 
Friday 19 November 2021  14:36:48 +0000 (0:00:00.050)       0:00:09.221 ******* 

TASK [v1aX_integration_test : Provision cluster] *******************************
ok: [localhost] => {"changed": false, "cmd": "kubectl apply -f \"/home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/files/manifests/v1beta1_cluster_ubuntu.yaml\" -n \"metal3\"", "delta": "0:00:00.491671", "end": "2021-11-19 14:36:48.770282", "msg": "", "rc": 0, "start": "2021-11-19 14:36:48.278611", "stderr": "", "stderr_lines": [], "stdout": "cluster.cluster.x-k8s.io/test1 created\nmetal3cluster.infrastructure.cluster.x-k8s.io/test1 created\nippool.ipam.metal3.io/provisioning-pool created\nippool.ipam.metal3.io/baremetalv4-pool created", "stdout_lines": ["cluster.cluster.x-k8s.io/test1 created", "metal3cluster.infrastructure.cluster.x-k8s.io/test1 created", "ippool.ipam.metal3.io/provisioning-pool created", "ippool.ipam.metal3.io/baremetalv4-pool created"]}
Friday 19 November 2021  14:36:48 +0000 (0:00:00.779)       0:00:10.000 ******* 

TASK [v1aX_integration_test : Create control plane] ****************************
ok: [localhost] => {"changed": false, "cmd": "kubectl apply -f \"/home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/files/manifests/v1beta1_controlplane_ubuntu.yaml\" -n \"metal3\"", "delta": "0:00:00.358700", "end": "2021-11-19 14:36:49.412259", "msg": "", "rc": 0, "start": "2021-11-19 14:36:49.053559", "stderr": "", "stderr_lines": [], "stdout": "kubeadmcontrolplane.controlplane.cluster.x-k8s.io/test1 created\nmetal3machinetemplate.infrastructure.cluster.x-k8s.io/test1-controlplane created\nmetal3datatemplate.infrastructure.cluster.x-k8s.io/test1-controlplane-template created", "stdout_lines": ["kubeadmcontrolplane.controlplane.cluster.x-k8s.io/test1 created", "metal3machinetemplate.infrastructure.cluster.x-k8s.io/test1-controlplane created", "metal3datatemplate.infrastructure.cluster.x-k8s.io/test1-controlplane-template created"]}
Friday 19 November 2021  14:36:49 +0000 (0:00:00.630)       0:00:10.631 ******* 

TASK [v1aX_integration_test : Create worker nodes] *****************************
ok: [localhost] => {"changed": false, "cmd": "kubectl apply -f \"/home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/files/manifests/v1beta1_workers_ubuntu.yaml\" -n \"metal3\"", "delta": "0:00:00.361518", "end": "2021-11-19 14:36:50.039558", "msg": "", "rc": 0, "start": "2021-11-19 14:36:49.678040", "stderr": "", "stderr_lines": [], "stdout": "machinedeployment.cluster.x-k8s.io/test1 created\nmetal3machinetemplate.infrastructure.cluster.x-k8s.io/test1-workers created\nmetal3datatemplate.infrastructure.cluster.x-k8s.io/test1-workers-template created\nkubeadmconfigtemplate.bootstrap.cluster.x-k8s.io/test1-workers created", "stdout_lines": ["machinedeployment.cluster.x-k8s.io/test1 created", "metal3machinetemplate.infrastructure.cluster.x-k8s.io/test1-workers created", "metal3datatemplate.infrastructure.cluster.x-k8s.io/test1-workers-template created", "kubeadmconfigtemplate.bootstrap.cluster.x-k8s.io/test1-workers created"]}
Friday 19 November 2021  14:36:50 +0000 (0:00:00.626)       0:00:11.258 ******* 

TASK [v1aX_integration_test : verify deployment] *******************************
included: /home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/tasks/verify.yml for localhost
Friday 19 November 2021  14:36:50 +0000 (0:00:00.095)       0:00:11.353 ******* 

TASK [v1aX_integration_test : Define number of BMH's] **************************
ok: [localhost] => {"ansible_facts": {"NUMBER_OF_BMH": "5"}, "changed": false}
Friday 19 November 2021  14:36:50 +0000 (0:00:00.066)       0:00:11.420 ******* 

TASK [v1aX_integration_test : Wait until cluster becomes provisioned.] *********
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Cluster", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"cluster.x-k8s.io/v1beta1\",\"kind\":\"Cluster\",\"metadata\":{\"annotations\":{},\"name\":\"test1\",\"namespace\":\"metal3\"},\"spec\":{\"clusterNetwork\":{\"pods\":{\"cidrBlocks\":[\"192.168.0.0/18\"]},\"services\":{\"cidrBlocks\":[\"10.96.0.0/12\"]}},\"controlPlaneRef\":{\"apiVersion\":\"controlplane.cluster.x-k8s.io/v1beta1\",\"kind\":\"KubeadmControlPlane\",\"name\":\"test1\"},\"infrastructureRef\":{\"apiVersion\":\"infrastructure.cluster.x-k8s.io/v1beta1\",\"kind\":\"Metal3Cluster\",\"name\":\"test1\"}}}\n"}, "creationTimestamp": "2021-11-19T14:36:48Z", "finalizers": ["cluster.cluster.x-k8s.io"], "generation": 2, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:clusterNetwork": {".": {}, "f:pods": {".": {}, "f:cidrBlocks": {}}, "f:services": {".": {}, "f:cidrBlocks": {}}}, "f:controlPlaneRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T14:36:48Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"cluster.cluster.x-k8s.io\"": {}}}, "f:spec": {"f:controlPlaneEndpoint": {"f:host": {}, "f:port": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:36:48Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:36:48Z"}], "name": "test1", "namespace": "metal3", "resourceVersion": "7505", "uid": "ac1230d5-3ff3-4b3d-a7e3-5ab4b1dc67dc"}, "spec": {"clusterNetwork": {"pods": {"cidrBlocks": ["192.168.0.0/18"]}, "services": {"cidrBlocks": ["10.96.0.0/12"]}}, "controlPlaneEndpoint": {"host": "192.168.111.249", "port": 6443}, "controlPlaneRef": {"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "kind": "KubeadmControlPlane", "name": "test1", "namespace": "metal3"}, "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Cluster", "name": "test1", "namespace": "metal3"}}, "status": {"conditions": [{"lastTransitionTime": "2021-11-19T14:36:48Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T14:36:48Z", "status": "True", "type": "InfrastructureReady"}], "infrastructureReady": true, "observedGeneration": 2, "phase": "Provisioned"}}]}
Friday 19 November 2021  14:36:51 +0000 (0:00:00.789)       0:00:12.210 ******* 
FAILED retry: Wait until "5" BMHs become provisioned.
kind: BareMetalHost
name: node-0
status.provisioning:
  ID: 480c61c8-a74b-4574-b204-442759c05719
  bootMode: legacy
  image:
      url: ''
  raid:
      hardwareRAIDVolumes: null
      softwareRAIDVolumes: []
  rootDeviceHints:
      deviceName: /dev/sda
  state: available

kind: BareMetalHost
name: node-1
status.provisioning:
  ID: 80f8b62a-b7e0-4952-b2e6-2ca81961612b
  bootMode: legacy
  image:
      url: ''
  raid:
      hardwareRAIDVolumes: null
      softwareRAIDVolumes: []
  rootDeviceHints:
      deviceName: /dev/sda
  state: available

kind: BareMetalHost
name: node-2
status.provisioning:
  ID: f378a1a8-875c-482c-95ce-2f889ef86554
  bootMode: legacy
  image:
      url: ''
  raid:
      hardwareRAIDVolumes: null
      softwareRAIDVolumes: []
  rootDeviceHints:
      deviceName: /dev/sda
  state: available

kind: BareMetalHost
name: node-3
status.provisioning:
  ID: 49016cb5-f391-4fbc-9f1e-b0c0b1537656
  bootMode: legacy
  image:
      url: ''
  raid:
      hardwareRAIDVolumes: null
      softwareRAIDVolumes: []
  rootDeviceHints:
      deviceName: /dev/sda
  state: available

kind: BareMetalHost
name: node-4
status.provisioning:
  ID: 99c4e4f5-637b-46a5-93eb-fc57a95069df
  bootMode: legacy
  image:
      url: ''
  raid:
      hardwareRAIDVolumes: null
      softwareRAIDVolumes: []
  rootDeviceHints:
      deviceName: /dev/sda
  state: available

RETRYING: Wait until "5" BMHs become provisioned. 1/300
RETRYING: Wait until "5" BMHs become provisioned. 2/300
RETRYING: Wait until "5" BMHs become provisioned. 3/300
RETRYING: Wait until "5" BMHs become provisioned. 4/300
RETRYING: Wait until "5" BMHs become provisioned. 5/300
RETRYING: Wait until "5" BMHs become provisioned. 6/300
RETRYING: Wait until "5" BMHs become provisioned. 7/300
RETRYING: Wait until "5" BMHs become provisioned. 8/300
RETRYING: Wait until "5" BMHs become provisioned. 9/300
RETRYING: Wait until "5" BMHs become provisioned. 10/300
RETRYING: Wait until "5" BMHs become provisioned. 11/300
RETRYING: Wait until "5" BMHs become provisioned. 12/300
RETRYING: Wait until "5" BMHs become provisioned. 13/300
RETRYING: Wait until "5" BMHs become provisioned. 14/300
RETRYING: Wait until "5" BMHs become provisioned. 15/300
RETRYING: Wait until "5" BMHs become provisioned. 16/300
RETRYING: Wait until "5" BMHs become provisioned. 17/300
RETRYING: Wait until "5" BMHs become provisioned. 18/300
RETRYING: Wait until "5" BMHs become provisioned. 19/300
RETRYING: Wait until "5" BMHs become provisioned. 20/300
RETRYING: Wait until "5" BMHs become provisioned. 21/300
RETRYING: Wait until "5" BMHs become provisioned. 22/300
RETRYING: Wait until "5" BMHs become provisioned. 23/300
RETRYING: Wait until "5" BMHs become provisioned. 24/300
RETRYING: Wait until "5" BMHs become provisioned. 25/300
RETRYING: Wait until "5" BMHs become provisioned. 26/300
RETRYING: Wait until "5" BMHs become provisioned. 27/300
RETRYING: Wait until "5" BMHs become provisioned. 28/300
RETRYING: Wait until "5" BMHs become provisioned. 29/300
RETRYING: Wait until "5" BMHs become provisioned. 30/300
RETRYING: Wait until "5" BMHs become provisioned. 31/300
RETRYING: Wait until "5" BMHs become provisioned. 32/300
RETRYING: Wait until "5" BMHs become provisioned. 33/300
RETRYING: Wait until "5" BMHs become provisioned. 34/300
RETRYING: Wait until "5" BMHs become provisioned. 35/300
RETRYING: Wait until "5" BMHs become provisioned. 36/300
RETRYING: Wait until "5" BMHs become provisioned. 37/300
RETRYING: Wait until "5" BMHs become provisioned. 38/300
RETRYING: Wait until "5" BMHs become provisioned. 39/300
RETRYING: Wait until "5" BMHs become provisioned. 40/300
RETRYING: Wait until "5" BMHs become provisioned. 41/300
RETRYING: Wait until "5" BMHs become provisioned. 42/300
RETRYING: Wait until "5" BMHs become provisioned. 43/300
RETRYING: Wait until "5" BMHs become provisioned. 44/300
RETRYING: Wait until "5" BMHs become provisioned. 45/300
RETRYING: Wait until "5" BMHs become provisioned. 46/300
RETRYING: Wait until "5" BMHs become provisioned. 47/300
RETRYING: Wait until "5" BMHs become provisioned. 48/300
RETRYING: Wait until "5" BMHs become provisioned. 49/300
RETRYING: Wait until "5" BMHs become provisioned. 50/300
RETRYING: Wait until "5" BMHs become provisioned. 51/300
RETRYING: Wait until "5" BMHs become provisioned. 52/300
RETRYING: Wait until "5" BMHs become provisioned. 53/300

TASK [v1aX_integration_test : Wait until "5" BMHs become provisioned.] *********
ok: [localhost] => {"api_found": true, "attempts": 54, "changed": false, "resources": [{"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-0\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6230\",\"credentialsName\":\"node-0-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:93\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T14:17:18Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:online": {}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"60ed567b-04c8-42b5-badd-a05142018390\"}": {}}}, "f:spec": {"f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T14:37:20Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:42:58Z"}], "name": "node-0", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-controlplane-kbfjc", "uid": "60ed567b-04c8-42b5-badd-a05142018390"}], "resourceVersion": "8873", "uid": "5f526f39-9270-4941-8328-f783b718f46d"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6230", "credentialsName": "node-0-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:93", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-kbfjc", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "metaData": {"name": "test1-controlplane-kbfjc-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-controlplane-kbfjc-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-wnn4g", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-0-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "7752"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-0", "nics": [{"ip": "192.168.111.20", "mac": "00:32:34:b8:79:95", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::3b75:9a7:38c4:db26%enp2s0", "mac": "00:32:34:b8:79:95", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.30", "mac": "00:32:34:b8:79:93", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::7e4:4deb:a8d5:366d%enp1s0", "mac": "00:32:34:b8:79:93", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T14:42:58Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:48Z", "start": "2021-11-19T14:18:04Z"}, "provision": {"end": "2021-11-19T14:42:58Z", "start": "2021-11-19T14:37:21Z"}, "register": {"end": "2021-11-19T14:37:21Z", "start": "2021-11-19T14:37:21Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "480c61c8-a74b-4574-b204-442759c05719", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-0-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "7752"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-1\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"redfish+http://192.168.111.1:8000/redfish/v1/Systems/580c73b0-bb65-4b2a-9761-d79d7b4d7002\",\"credentialsName\":\"node-1-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:97\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T14:17:18Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:online": {}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"b397a461-0b9f-42c5-8bca-13c6abc0a5b7\"}": {}}}, "f:spec": {"f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T14:44:37Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:51:17Z"}], "name": "node-1", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-workers-pbd76", "uid": "b397a461-0b9f-42c5-8bca-13c6abc0a5b7"}], "resourceVersion": "9902", "uid": "1f1f0f2f-1031-45d9-8192-f3645deeba0d"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "redfish+http://192.168.111.1:8000/redfish/v1/Systems/580c73b0-bb65-4b2a-9761-d79d7b4d7002", "credentialsName": "node-1-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:97", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-workers-pbd76", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "metaData": {"name": "test1-workers-pbd76-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-workers-pbd76-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-workers-7cq9j", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-1-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "9421"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-1", "nics": [{"ip": "192.168.111.21", "mac": "00:32:34:b8:79:99", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::1418:ce16:723:a6cc%enp2s0", "mac": "00:32:34:b8:79:99", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.34", "mac": "00:32:34:b8:79:97", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::61ef:8c7a:20af:9369%enp1s0", "mac": "00:32:34:b8:79:97", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T14:51:17Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:33Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": "2021-11-19T14:51:17Z", "start": "2021-11-19T14:44:37Z"}, "register": {"end": "2021-11-19T14:44:37Z", "start": "2021-11-19T14:44:37Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "80f8b62a-b7e0-4952-b2e6-2ca81961612b", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-1-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "9421"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-2\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6232\",\"credentialsName\":\"node-2-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:9b\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T14:17:18Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:online": {}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"4e7dab5c-4bfb-4f17-bea0-4560c998a717\"}": {}}}, "f:spec": {"f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T14:44:30Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:51:27Z"}], "name": "node-2", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-controlplane-bpk5l", "uid": "4e7dab5c-4bfb-4f17-bea0-4560c998a717"}], "resourceVersion": "9957", "uid": "a0d2af16-8f4c-4ff3-bb36-a6b7046796f0"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6232", "credentialsName": "node-2-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:9b", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-bpk5l", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "metaData": {"name": "test1-controlplane-bpk5l-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-controlplane-bpk5l-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-7zl6h", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-2-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "9336"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-2", "nics": [{"ip": "192.168.111.22", "mac": "00:32:34:b8:79:9d", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::4543:596e:ca54:27b0%enp2s0", "mac": "00:32:34:b8:79:9d", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.38", "mac": "00:32:34:b8:79:9b", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::f6c7:ad5a:940c:e9c8%enp1s0", "mac": "00:32:34:b8:79:9b", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T14:51:27Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:47Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": "2021-11-19T14:51:27Z", "start": "2021-11-19T14:44:31Z"}, "register": {"end": "2021-11-19T14:44:31Z", "start": "2021-11-19T14:44:30Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "f378a1a8-875c-482c-95ce-2f889ef86554", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-2-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "9336"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-3\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"redfish+http://192.168.111.1:8000/redfish/v1/Systems/d244c2e6-fb91-4804-a12f-0aff629d7019\",\"credentialsName\":\"node-3-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:9f\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T14:17:18Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:online": {}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"057ab8df-0de7-4f03-b654-2881c5d59e91\"}": {}}}, "f:spec": {"f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T14:55:41Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:59:24Z"}], "name": "node-3", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-controlplane-gtk46", "uid": "057ab8df-0de7-4f03-b654-2881c5d59e91"}], "resourceVersion": "10685", "uid": "cdbb73f8-8247-495f-97dd-ee54daaa1098"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "redfish+http://192.168.111.1:8000/redfish/v1/Systems/d244c2e6-fb91-4804-a12f-0aff629d7019", "credentialsName": "node-3-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:9f", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-gtk46", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "metaData": {"name": "test1-controlplane-gtk46-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-controlplane-gtk46-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-bgf69", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-3-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "10341"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-3", "nics": [{"ip": "192.168.111.23", "mac": "00:32:34:b8:79:a1", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::3d37:b969:de95:55ec%enp2s0", "mac": "00:32:34:b8:79:a1", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.42", "mac": "00:32:34:b8:79:9f", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::6876:f857:58c4:b12b%enp1s0", "mac": "00:32:34:b8:79:9f", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T14:59:24Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:47Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": "2021-11-19T14:59:24Z", "start": "2021-11-19T14:55:41Z"}, "register": {"end": "2021-11-19T14:55:41Z", "start": "2021-11-19T14:55:41Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "49016cb5-f391-4fbc-9f1e-b0c0b1537656", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-3-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "10341"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-4\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6234\",\"credentialsName\":\"node-4-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:a3\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T14:17:18Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:online": {}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T14:17:18Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"06cb695c-5237-47fa-8343-68beb1166ecd\"}": {}}}, "f:spec": {"f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T14:44:37Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:06:42Z"}], "name": "node-4", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-workers-gf2cm", "uid": "06cb695c-5237-47fa-8343-68beb1166ecd"}], "resourceVersion": "11709", "uid": "a3b5897b-6923-406c-9314-a89e423a1a80"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6234", "credentialsName": "node-4-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:a3", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-workers-gf2cm", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "metaData": {"name": "test1-workers-gf2cm-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-workers-gf2cm-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-workers-qgzps", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-4-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "9431"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-4", "nics": [{"ip": "192.168.111.24", "mac": "00:32:34:b8:79:a5", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::ef5e:d24f:b921:dbef%enp2s0", "mac": "00:32:34:b8:79:a5", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.46", "mac": "00:32:34:b8:79:a3", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::b539:db85:4c3e:29ab%enp1s0", "mac": "00:32:34:b8:79:a3", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T15:06:42Z", "operationHistory": {"deprovision": {"end": "2021-11-19T15:03:05Z", "start": "2021-11-19T14:59:24Z"}, "inspect": {"end": "2021-11-19T14:21:48Z", "start": "2021-11-19T14:18:04Z"}, "provision": {"end": "2021-11-19T15:06:42Z", "start": "2021-11-19T15:03:06Z"}, "register": {"end": "2021-11-19T14:44:37Z", "start": "2021-11-19T14:44:37Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "99c4e4f5-637b-46a5-93eb-fc57a95069df", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-4-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "9431"}}}]}
Friday 19 November 2021  15:06:51 +0000 (0:30:00.932)       0:30:13.142 ******* 
FAILED retry: Wait until "5" machines become running.
kind: Machine
name: test1-76bd89c664-4jx4f
status:
  addresses:
  -   address: 192.168.111.21
      type: InternalIP
  -   address: fe80::1418:ce16:723:a6cc%enp2s0
      type: InternalIP
  -   address: 172.22.0.34
      type: InternalIP
  -   address: fe80::61ef:8c7a:20af:9369%enp1s0
      type: InternalIP
  -   address: node-1
      type: Hostname
  -   address: node-1
      type: InternalDNS
  bootstrapReady: true
  conditions:
  -   lastTransitionTime: '2021-11-19T14:51:57Z'
      status: 'True'
      type: Ready
  -   lastTransitionTime: '2021-11-19T14:44:37Z'
      status: 'True'
      type: BootstrapReady
  -   lastTransitionTime: '2021-11-19T14:51:57Z'
      status: 'True'
      type: InfrastructureReady
  -   lastTransitionTime: '2021-11-19T14:51:57Z'
      message: 'Node condition Ready is False. '
      reason: NodeConditionsFailed
      severity: Warning
      status: 'False'
      type: NodeHealthy
  infrastructureReady: true
  lastUpdated: '2021-11-19T14:55:25Z'
  nodeInfo:
      architecture: amd64
      bootID: 16872f11-f259-4973-9eaf-7be7b603dbcd
      containerRuntimeVersion: cri-o://1.21.2
      kernelVersion: 5.4.0-42-generic
      kubeProxyVersion: v1.21.1
      kubeletVersion: v1.21.1
      machineID: 97eeb30f3f214f52a873db643b927c1e
      operatingSystem: linux
      osImage: Ubuntu 20.04 LTS
      systemUUID: 580c73b0-bb65-4b2a-9761-d79d7b4d7002
  nodeRef:
      apiVersion: v1
      kind: Node
      name: test1-76bd89c664-4jx4f
      uid: c06b477c-08aa-4548-96aa-e18e7349e236
  observedGeneration: 3
  phase: Running

kind: Machine
name: test1-76bd89c664-z8zr9
status:
  bootstrapReady: true
  conditions:
  -   lastTransitionTime: '2021-11-19T14:44:37Z'
      message: 1 of 2 completed
      reason: WaitingForInfrastructure
      severity: Info
      status: 'False'
      type: Ready
  -   lastTransitionTime: '2021-11-19T14:44:37Z'
      status: 'True'
      type: BootstrapReady
  -   lastTransitionTime: '2021-11-19T14:36:50Z'
      reason: WaitingForInfrastructure
      severity: Info
      status: 'False'
      type: InfrastructureReady
  -   lastTransitionTime: '2021-11-19T14:36:50Z'
      reason: WaitingForNodeRef
      severity: Info
      status: 'False'
      type: NodeHealthy
  lastUpdated: '2021-11-19T14:44:37Z'
  observedGeneration: 2
  phase: Provisioning

kind: Machine
name: test1-9d5zj
status:
  addresses:
  -   address: 192.168.111.22
      type: InternalIP
  -   address: fe80::4543:596e:ca54:27b0%enp2s0
      type: InternalIP
  -   address: 172.22.0.38
      type: InternalIP
  -   address: fe80::f6c7:ad5a:940c:e9c8%enp1s0
      type: InternalIP
  -   address: node-2
      type: Hostname
  -   address: node-2
      type: InternalDNS
  bootstrapReady: true
  conditions:
  -   lastTransitionTime: '2021-11-19T14:55:25Z'
      status: 'True'
      type: Ready
  -   lastTransitionTime: '2021-11-19T14:55:26Z'
      status: 'True'
      type: APIServerPodHealthy
  -   lastTransitionTime: '2021-11-19T14:44:30Z'
      status: 'True'
      type: BootstrapReady
  -   lastTransitionTime: '2021-11-19T14:55:26Z'
      status: 'True'
      type: ControllerManagerPodHealthy
  -   lastTransitionTime: '2021-11-19T14:55:26Z'
      status: 'True'
      type: EtcdMemberHealthy
  -   lastTransitionTime: '2021-11-19T14:55:26Z'
      status: 'True'
      type: EtcdPodHealthy
  -   lastTransitionTime: '2021-11-19T14:55:25Z'
      status: 'True'
      type: InfrastructureReady
  -   lastTransitionTime: '2021-11-19T14:55:25Z'
      message: 'Node condition Ready is False. '
      reason: NodeConditionsFailed
      severity: Warning
      status: 'False'
      type: NodeHealthy
  -   lastTransitionTime: '2021-11-19T14:55:26Z'
      status: 'True'
      type: SchedulerPodHealthy
  infrastructureReady: true
  lastUpdated: '2021-11-19T14:55:25Z'
  nodeInfo:
      architecture: amd64
      bootID: 458a34b4-13d0-4dd4-afb2-6d2ed1cc610d
      containerRuntimeVersion: cri-o://1.21.2
      kernelVersion: 5.4.0-42-generic
      kubeProxyVersion: v1.21.1
      kubeletVersion: v1.21.1
      machineID: 97eeb30f3f214f52a873db643b927c1e
      operatingSystem: linux
      osImage: Ubuntu 20.04 LTS
      systemUUID: 3f2d9cd0-48da-41d2-978e-ead5d5ca837a
  nodeRef:
      apiVersion: v1
      kind: Node
      name: test1-9d5zj
      uid: dbf2f4d1-81ec-4b1c-84a3-4e577cb3c75a
  observedGeneration: 3
  phase: Running

kind: Machine
name: test1-j9gl2
status:
  addresses:
  -   address: 192.168.111.23
      type: InternalIP
  -   address: fe80::3d37:b969:de95:55ec%enp2s0
      type: InternalIP
  -   address: 172.22.0.42
      type: InternalIP
  -   address: fe80::6876:f857:58c4:b12b%enp1s0
      type: InternalIP
  -   address: node-3
      type: Hostname
  -   address: node-3
      type: InternalDNS
  bootstrapReady: true
  conditions:
  -   lastTransitionTime: '2021-11-19T15:01:51Z'
      status: 'True'
      type: Ready
  -   lastTransitionTime: '2021-11-19T15:01:52Z'
      status: 'True'
      type: APIServerPodHealthy
  -   lastTransitionTime: '2021-11-19T14:55:26Z'
      status: 'True'
      type: BootstrapReady
  -   lastTransitionTime: '2021-11-19T15:01:52Z'
      status: 'True'
      type: ControllerManagerPodHealthy
  -   lastTransitionTime: '2021-11-19T15:01:53Z'
      status: 'True'
      type: EtcdMemberHealthy
  -   lastTransitionTime: '2021-11-19T15:01:53Z'
      status: 'True'
      type: EtcdPodHealthy
  -   lastTransitionTime: '2021-11-19T15:01:51Z'
      status: 'True'
      type: InfrastructureReady
  -   lastTransitionTime: '2021-11-19T15:01:51Z'
      message: 'Node condition Ready is False. '
      reason: NodeConditionsFailed
      severity: Warning
      status: 'False'
      type: NodeHealthy
  -   lastTransitionTime: '2021-11-19T15:01:53Z'
      status: 'True'
      type: SchedulerPodHealthy
  infrastructureReady: true
  lastUpdated: '2021-11-19T15:01:51Z'
  nodeInfo:
      architecture: amd64
      bootID: e551ab4f-4dfb-4b6d-9441-42d8f0960ab7
      containerRuntimeVersion: cri-o://1.21.2
      kernelVersion: 5.4.0-42-generic
      kubeProxyVersion: v1.21.1
      kubeletVersion: v1.21.1
      machineID: 97eeb30f3f214f52a873db643b927c1e
      operatingSystem: linux
      osImage: Ubuntu 20.04 LTS
      systemUUID: d244c2e6-fb91-4804-a12f-0aff629d7019
  nodeRef:
      apiVersion: v1
      kind: Node
      name: test1-j9gl2
      uid: 3c80660d-215b-41d6-831c-6308f2837e20
  observedGeneration: 3
  phase: Running

kind: Machine
name: test1-nxssx
status:
  addresses:
  -   address: 192.168.111.20
      type: InternalIP
  -   address: fe80::3b75:9a7:38c4:db26%enp2s0
      type: InternalIP
  -   address: 172.22.0.30
      type: InternalIP
  -   address: fe80::7e4:4deb:a8d5:366d%enp1s0
      type: InternalIP
  -   address: node-0
      type: Hostname
  -   address: node-0
      type: InternalDNS
  bootstrapReady: true
  conditions:
  -   lastTransitionTime: '2021-11-19T14:44:29Z'
      status: 'True'
      type: Ready
  -   lastTransitionTime: '2021-11-19T14:44:29Z'
      status: 'True'
      type: APIServerPodHealthy
  -   lastTransitionTime: '2021-11-19T14:37:20Z'
      status: 'True'
      type: BootstrapReady
  -   lastTransitionTime: '2021-11-19T14:44:29Z'
      status: 'True'
      type: ControllerManagerPodHealthy
  -   lastTransitionTime: '2021-11-19T14:44:29Z'
      status: 'True'
      type: EtcdMemberHealthy
  -   lastTransitionTime: '2021-11-19T14:44:29Z'
      status: 'True'
      type: EtcdPodHealthy
  -   lastTransitionTime: '2021-11-19T14:44:29Z'
      status: 'True'
      type: InfrastructureReady
  -   lastTransitionTime: '2021-11-19T14:44:29Z'
      message: 'Node condition Ready is False. '
      reason: NodeConditionsFailed
      severity: Warning
      status: 'False'
      type: NodeHealthy
  -   lastTransitionTime: '2021-11-19T14:44:30Z'
      status: 'True'
      type: SchedulerPodHealthy
  infrastructureReady: true
  lastUpdated: '2021-11-19T14:44:29Z'
  nodeInfo:
      architecture: amd64
      bootID: 576f91ef-d1fd-40e5-b86d-d61ed5f7700f
      containerRuntimeVersion: cri-o://1.21.2
      kernelVersion: 5.4.0-42-generic
      kubeProxyVersion: v1.21.1
      kubeletVersion: v1.21.1
      machineID: 97eeb30f3f214f52a873db643b927c1e
      operatingSystem: linux
      osImage: Ubuntu 20.04 LTS
      systemUUID: f6cc7069-cb9d-4246-8239-3ea36c87f9bd
  nodeRef:
      apiVersion: v1
      kind: Node
      name: test1-nxssx
      uid: 97487870-7114-438e-a3b6-953b91ed95c8
  observedGeneration: 3
  phase: Running

RETRYING: Wait until "5" machines become running. 1/150

TASK [v1aX_integration_test : Wait until "5" machines become running.] *********
ok: [localhost] => {"api_found": true, "attempts": 2, "changed": false, "resources": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"creationTimestamp": "2021-11-19T14:36:50Z", "finalizers": ["machine.cluster.x-k8s.io"], "generateName": "test1-76bd89c664-", "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "machine-template-hash": "3268457220", "nodepool": "nodepool-0"}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:machine-template-hash": {}, "f:nodepool": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"441d63b3-4673-4f93-ace8-d6f216c9c9ca\"}": {}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:55:25Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:55:25Z"}], "name": "test1-76bd89c664-4jx4f", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "MachineSet", "name": "test1-76bd89c664", "uid": "441d63b3-4673-4f93-ace8-d6f216c9c9ca"}], "resourceVersion": "10217", "uid": "de443d6f-80b7-4b73-ac80-3d28e6b3fbf5"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-workers-7cq9j", "namespace": "metal3", "uid": "9ff30b5b-0635-480f-9eb3-364e9c3d7084"}, "dataSecretName": "test1-workers-7cq9j"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-workers-pbd76", "namespace": "metal3", "uid": "b397a461-0b9f-42c5-8bca-13c6abc0a5b7"}, "nodeDrainTimeout": "0s", "providerID": "metal3://1f1f0f2f-1031-45d9-8192-f3645deeba0d", "version": "v1.21.1"}, "status": {"addresses": [{"address": "192.168.111.21", "type": "InternalIP"}, {"address": "fe80::1418:ce16:723:a6cc%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.34", "type": "InternalIP"}, {"address": "fe80::61ef:8c7a:20af:9369%enp1s0", "type": "InternalIP"}, {"address": "node-1", "type": "Hostname"}, {"address": "node-1", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T14:51:57Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T14:44:37Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T14:51:57Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T14:51:57Z", "message": "Node condition Ready is False. ", "reason": "NodeConditionsFailed", "severity": "Warning", "status": "False", "type": "NodeHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T14:55:25Z", "nodeInfo": {"architecture": "amd64", "bootID": "16872f11-f259-4973-9eaf-7be7b603dbcd", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "580c73b0-bb65-4b2a-9761-d79d7b4d7002"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-76bd89c664-4jx4f", "uid": "c06b477c-08aa-4548-96aa-e18e7349e236"}, "observedGeneration": 3, "phase": "Running"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"creationTimestamp": "2021-11-19T14:36:50Z", "finalizers": ["machine.cluster.x-k8s.io"], "generateName": "test1-76bd89c664-", "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "machine-template-hash": "3268457220", "nodepool": "nodepool-0"}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:machine-template-hash": {}, "f:nodepool": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"441d63b3-4673-4f93-ace8-d6f216c9c9ca\"}": {}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:07:12Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:07:12Z"}], "name": "test1-76bd89c664-z8zr9", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "MachineSet", "name": "test1-76bd89c664", "uid": "441d63b3-4673-4f93-ace8-d6f216c9c9ca"}], "resourceVersion": "11830", "uid": "2c397c19-b7bd-4789-a86b-84e06707cb10"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-workers-qgzps", "namespace": "metal3", "uid": "e6870cd2-26ff-44cc-a45f-1122f45fa096"}, "dataSecretName": "test1-workers-qgzps"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-workers-gf2cm", "namespace": "metal3", "uid": "06cb695c-5237-47fa-8343-68beb1166ecd"}, "nodeDrainTimeout": "0s", "providerID": "metal3://a3b5897b-6923-406c-9314-a89e423a1a80", "version": "v1.21.1"}, "status": {"addresses": [{"address": "192.168.111.24", "type": "InternalIP"}, {"address": "fe80::ef5e:d24f:b921:dbef%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.46", "type": "InternalIP"}, {"address": "fe80::b539:db85:4c3e:29ab%enp1s0", "type": "InternalIP"}, {"address": "node-4", "type": "Hostname"}, {"address": "node-4", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:07:12Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T14:44:37Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:07:12Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:07:12Z", "message": "Node condition Ready is False. ", "reason": "NodeConditionsFailed", "severity": "Warning", "status": "False", "type": "NodeHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T15:07:12Z", "nodeInfo": {"architecture": "amd64", "bootID": "7049e95b-c4f9-4403-ab9d-0537d931d4b6", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "7bb4e9f8-745d-4d09-983a-6815b41fd8cb"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-76bd89c664-z8zr9", "uid": "afff5e28-26b8-451e-9614-6acc2381d84b"}, "observedGeneration": 3, "phase": "Running"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"annotations": {"controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": "{\"etcd\":{},\"networking\":{},\"apiServer\":{},\"controllerManager\":{},\"scheduler\":{},\"dns\":{}}"}, "creationTimestamp": "2021-11-19T14:44:30Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": {}}, "f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"01b31967-9470-4585-b0ed-36c0e299b987\"}": {}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:55:25Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:55:25Z"}], "name": "test1-9d5zj", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "KubeadmControlPlane", "name": "test1", "uid": "01b31967-9470-4585-b0ed-36c0e299b987"}], "resourceVersion": "10224", "uid": "c4468810-7dd6-4ea7-989f-02cf061df551"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-7zl6h", "namespace": "metal3", "uid": "556d7912-8c40-4496-b567-f28621f57b81"}, "dataSecretName": "test1-7zl6h"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-bpk5l", "namespace": "metal3", "uid": "4e7dab5c-4bfb-4f17-bea0-4560c998a717"}, "nodeDrainTimeout": "0s", "providerID": "metal3://a0d2af16-8f4c-4ff3-bb36-a6b7046796f0", "version": "v1.21.1"}, "status": {"addresses": [{"address": "192.168.111.22", "type": "InternalIP"}, {"address": "fe80::4543:596e:ca54:27b0%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.38", "type": "InternalIP"}, {"address": "fe80::f6c7:ad5a:940c:e9c8%enp1s0", "type": "InternalIP"}, {"address": "node-2", "type": "Hostname"}, {"address": "node-2", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T14:55:25Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T14:55:26Z", "status": "True", "type": "APIServerPodHealthy"}, {"lastTransitionTime": "2021-11-19T14:44:30Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T14:55:26Z", "status": "True", "type": "ControllerManagerPodHealthy"}, {"lastTransitionTime": "2021-11-19T14:55:26Z", "status": "True", "type": "EtcdMemberHealthy"}, {"lastTransitionTime": "2021-11-19T14:55:26Z", "status": "True", "type": "EtcdPodHealthy"}, {"lastTransitionTime": "2021-11-19T14:55:25Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T14:55:25Z", "message": "Node condition Ready is False. ", "reason": "NodeConditionsFailed", "severity": "Warning", "status": "False", "type": "NodeHealthy"}, {"lastTransitionTime": "2021-11-19T14:55:26Z", "status": "True", "type": "SchedulerPodHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T14:55:25Z", "nodeInfo": {"architecture": "amd64", "bootID": "458a34b4-13d0-4dd4-afb2-6d2ed1cc610d", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "3f2d9cd0-48da-41d2-978e-ead5d5ca837a"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-9d5zj", "uid": "dbf2f4d1-81ec-4b1c-84a3-4e577cb3c75a"}, "observedGeneration": 3, "phase": "Running"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"annotations": {"controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": "{\"etcd\":{},\"networking\":{},\"apiServer\":{},\"controllerManager\":{},\"scheduler\":{},\"dns\":{}}"}, "creationTimestamp": "2021-11-19T14:55:26Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": {}}, "f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"01b31967-9470-4585-b0ed-36c0e299b987\"}": {}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:01:51Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:01:51Z"}], "name": "test1-j9gl2", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "KubeadmControlPlane", "name": "test1", "uid": "01b31967-9470-4585-b0ed-36c0e299b987"}], "resourceVersion": "11091", "uid": "ce1f2b47-7225-4397-a323-98664b715731"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-bgf69", "namespace": "metal3", "uid": "c88bcb66-ca5c-4165-9e2d-692ca53bc968"}, "dataSecretName": "test1-bgf69"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-gtk46", "namespace": "metal3", "uid": "057ab8df-0de7-4f03-b654-2881c5d59e91"}, "nodeDrainTimeout": "0s", "providerID": "metal3://cdbb73f8-8247-495f-97dd-ee54daaa1098", "version": "v1.21.1"}, "status": {"addresses": [{"address": "192.168.111.23", "type": "InternalIP"}, {"address": "fe80::3d37:b969:de95:55ec%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.42", "type": "InternalIP"}, {"address": "fe80::6876:f857:58c4:b12b%enp1s0", "type": "InternalIP"}, {"address": "node-3", "type": "Hostname"}, {"address": "node-3", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:01:51Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:01:52Z", "status": "True", "type": "APIServerPodHealthy"}, {"lastTransitionTime": "2021-11-19T14:55:26Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:01:52Z", "status": "True", "type": "ControllerManagerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:01:53Z", "status": "True", "type": "EtcdMemberHealthy"}, {"lastTransitionTime": "2021-11-19T15:01:53Z", "status": "True", "type": "EtcdPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:01:51Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:01:51Z", "message": "Node condition Ready is False. ", "reason": "NodeConditionsFailed", "severity": "Warning", "status": "False", "type": "NodeHealthy"}, {"lastTransitionTime": "2021-11-19T15:01:53Z", "status": "True", "type": "SchedulerPodHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T15:01:51Z", "nodeInfo": {"architecture": "amd64", "bootID": "e551ab4f-4dfb-4b6d-9441-42d8f0960ab7", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "d244c2e6-fb91-4804-a12f-0aff629d7019"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-j9gl2", "uid": "3c80660d-215b-41d6-831c-6308f2837e20"}, "observedGeneration": 3, "phase": "Running"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"annotations": {"controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": "{\"etcd\":{},\"networking\":{},\"apiServer\":{},\"controllerManager\":{},\"scheduler\":{},\"dns\":{}}"}, "creationTimestamp": "2021-11-19T14:37:20Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": {}}, "f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"01b31967-9470-4585-b0ed-36c0e299b987\"}": {}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:44:29Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:44:29Z"}], "name": "test1-nxssx", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "KubeadmControlPlane", "name": "test1", "uid": "01b31967-9470-4585-b0ed-36c0e299b987"}], "resourceVersion": "9316", "uid": "80e16b5a-257c-46f8-a1b6-6e13edd94761"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-wnn4g", "namespace": "metal3", "uid": "efb38178-ea30-4e30-bf91-d1aa302af3d1"}, "dataSecretName": "test1-wnn4g"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-kbfjc", "namespace": "metal3", "uid": "60ed567b-04c8-42b5-badd-a05142018390"}, "nodeDrainTimeout": "0s", "providerID": "metal3://5f526f39-9270-4941-8328-f783b718f46d", "version": "v1.21.1"}, "status": {"addresses": [{"address": "192.168.111.20", "type": "InternalIP"}, {"address": "fe80::3b75:9a7:38c4:db26%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.30", "type": "InternalIP"}, {"address": "fe80::7e4:4deb:a8d5:366d%enp1s0", "type": "InternalIP"}, {"address": "node-0", "type": "Hostname"}, {"address": "node-0", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T14:44:29Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T14:44:29Z", "status": "True", "type": "APIServerPodHealthy"}, {"lastTransitionTime": "2021-11-19T14:37:20Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T14:44:29Z", "status": "True", "type": "ControllerManagerPodHealthy"}, {"lastTransitionTime": "2021-11-19T14:44:29Z", "status": "True", "type": "EtcdMemberHealthy"}, {"lastTransitionTime": "2021-11-19T14:44:29Z", "status": "True", "type": "EtcdPodHealthy"}, {"lastTransitionTime": "2021-11-19T14:44:29Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T14:44:29Z", "message": "Node condition Ready is False. ", "reason": "NodeConditionsFailed", "severity": "Warning", "status": "False", "type": "NodeHealthy"}, {"lastTransitionTime": "2021-11-19T14:44:30Z", "status": "True", "type": "SchedulerPodHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T14:44:29Z", "nodeInfo": {"architecture": "amd64", "bootID": "576f91ef-d1fd-40e5-b86d-d61ed5f7700f", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "f6cc7069-cb9d-4246-8239-3ea36c87f9bd"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-nxssx", "uid": "97487870-7114-438e-a3b6-953b91ed95c8"}, "observedGeneration": 3, "phase": "Running"}}]}
Friday 19 November 2021  15:07:13 +0000 (0:00:21.732)       0:30:34.875 ******* 

TASK [v1aX_integration_test : Fetch target cluster kubeconfig] *****************
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {"value": "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNMmFrTkRRV1JMWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkplRTFVUlhoUFZFVXdUWHBKZUU5V2IxaEVWRTE0VFZSRmVFNTZSVEJOZW1ONFQxWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVFVGQkNucE1ZVVZLVkd4UGFsSlBXbWhyV2t4VFlWQkxZVTFSVW5WUFNqUjVOVE5HVjBsVVFXd3ZOV1E1U0hCbWVGUnFTV280YzB4aGJUbHVPR1JoTUVaQ01Ua0tia2x0WVdsaFkyWmFjbk12UVZKdlJISTRLMFJVUlU1Nk9VODVWR1pMVW1VeGFFMVBVVkV4U1haS2R6SkZTM000Y1cxWksyOHhSWGh3ZDI4MFkzcENRZ3BXTm1Wck1tMVFWbmszYjBSSFFXRkNjSHAyYjI1blMxVmFWa3A2ZUZOSVdUUXpPVEZFUkZoTlZ5czFibEJ2Ym1WbkswZERZVlZyY1hkUE5qWlJlRFZxQ2tjMmFXbDVWRk5JVlRaQlZrOXpZMmR5ZW5sa1RrWXdOSEZQWnpCaGRqSTVkWEY1UVZaMVZWSnFXVVpqYjJwUFN6Y3dka2RoYkRBdk1GSTFSMDFaWVRVS05GUnNUak1yTVRsMVNGQlhSak5GVlVZek1qSXhTMlZVU3pFeVoxQnpXVk5VVG1kVVNXeEZkVFFyWjFWeVpHMUNiV2x0Y1VNMksyNUtXVVJzYWs5bVFncDFhazFKV21OSE1EVnhTaTlVUjFSS1NsVmpRMEYzUlVGQllVNUdUVVZOZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVSkpSMEV4VldSRmQwVkNDaTkzVVVsTlFWbENRV1k0UTBGUlFYZElVVmxFVmxJd1QwSkNXVVZHU0RsTU16VkVURzkzU2pSa1RGbFFSRzh2TkV0dkwycGtjRTlOVFVFd1IwTlRjVWNLVTBsaU0wUlJSVUpEZDFWQlFUUkpRa0ZSUW5sQ2FVODFPSEJQZUZGRU5taDVlWGxPSzFScmNubGlkMDlYTm5CdlVWVlBMekl3Vm1kaFYzTmtMM1ZSZGdwMlJHbEpTWEZKZVhsd1V6TjVaMWxhV2toaVdWSTBhVEEzYzFsek5GWlhLMVZuZHpSNFRVRnVlaXRxT1dSdEszQlNWMWxYWkdsM1dIRnhOVVZYYkc5aUNrbDFiVGRLY2tnemFVczJjMnRqWW1WNlRVbHJhMHB1YldwbE1rUnFObXBXTWsxa1UyZDZiMU40V0VVMmFsSlVkQ3RzVVdwVksyNUZNV0ZhSzA5Rk9UVUtkMkZGUm1OalVsUm5XWGxWWWxJckwyNU5lRU5XVjJKcFYxSTJRbVU1YVVsWkwwOXdXa1l6VFdvMVMzVTNUbWxXYTBOaFdVTkJVRE5JTVZSdU9UQlllUXBXTDNWUVRrSjZiV3RLYUdkWWRXTndNa2h1ZFM4NFZFazNOSEZQT1RCMlZrVkRORXBCVjNaMFltWmlaa3cwV21nME1rZExlRlozTjI5VlFWZ3pVMWw0Q2pCR09VMXNZM1p1YW0xMk5UQk5kVTFtVEhKaU9IQlZNRUZDVm10b2RYQlBRblJwVEU5elRWUUtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjExMS4yNDk6NjQ0MwogIG5hbWU6IHRlc3QxCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiB0ZXN0MQogICAgdXNlcjogdGVzdDEtYWRtaW4KICBuYW1lOiB0ZXN0MS1hZG1pbkB0ZXN0MQpjdXJyZW50LWNvbnRleHQ6IHRlc3QxLWFkbWluQHRlc3QxCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogdGVzdDEtYWRtaW4KICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJGZWtORFFXWjFaMEYzU1VKQlowbEpVSEZ1Vm5OaWMwWnlSR3QzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkR1ZFVlVUVUpGUjBFeFZVVUtRWGhOUzJFelZtbGFXRXAxV2xoU2JHTjZRV1ZHZHpCNVRWUkZlRTFVYTNoT1JFMTVUVlJzWVVaM01IbE5ha1Y0VFZScmVFNUVUVE5OYWtKaFRVUlJlQXBHZWtGV1FtZE9Wa0pCYjFSRWJrNDFZek5TYkdKVWNIUlpXRTR3V2xoS2VrMVNhM2RHZDFsRVZsRlJSRVY0UW5Ka1YwcHNZMjAxYkdSSFZucE1WMFpyQ21KWGJIVk5TVWxDU1dwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFURlFNRWRxVDBGWlYzSnVUbWNyWjNFS09HOUliV1FyY21scVZXRmhOVVJOTkVGWUwxbDRaRlJWUkhkeE0xWkRiMUZ4TlhGMFprcHBNbGRHYmtSeWVuUjVMMHBhVVhKSVUyRXlMM1paT1VkVlN3cDVaQzh5YlRCWGRsZHFWRkpNWm1JMFpucEJia0pzYlRaTFFUVjZlRE0wVlZKSGVVTXdiV05FVW5sUUsybDVURnAxWTJsMFJIaENUV3hLUkVOMFdrUTJDa1JHTkUxc1kzaFRNRGQzU21sSlEzZERVbXB5ZG5wUFNIQkxWV3hqTlhvMk1WZ3ZPV0ZsYTJ0SVlrbDJiVlZTVVc1S09WQnBjVVp5ZEZaMFEwZ3lSSE1LYjFJNWJWZEdVbFF5TkhSMlJVbE9NVm93UVhsR1RHSlNVRFZYUzB3Mk5YbHVURWRVUVVaQ1ZFZzJRbXRTU0cxV01VbG1MMk52TjNkak1sbDVibmswTUFwaU5VNXhhVEJzTWtzNFFVMVFjbHByV2tNMU5HcDVTMEZhWTA1T05EUm9ZMmswU25CWFZqTTJTa2QyVjJreU9HbFRjMnBFUVZwRFRrWktSM0ZWWTBGM0NpdE1UV2h1ZDBsRVFWRkJRbTh3WjNkU2FrRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwSmhRWGRGZDFsRVZsSXdiRUpCZDNkRFoxbEpTM2RaUWtKUlZVZ0tRWGRKZDBoM1dVUldVakJxUWtKbmQwWnZRVlZtTUhabWEwMTFha0Z1YURCMFp6aFBhaTluY1dvclRqSnJOSGQzUkZGWlNrdHZXa2xvZG1OT1FWRkZUQXBDVVVGRVoyZEZRa0ZMVnpFNWRqWmpTRTE2YjBOR1V6QkpabmxyUmsxbk1YTXhlVFJ6ZWpCbk1UQkdkMkpHU0hCMEwyVlBUblJVYlZSQlRGSmtNbUkwQ2pjM1ZXczBlRm8yUzJ0SVozUXlVa2hHV2s4eWFGbzVhVGxtWnpWemJUZERlR0ZuVXpCdEswdzNabXRZYTIwNVdWWTBRbE5JVlN0V2JuRldNbkV6ZEdRS1JYZ3ZVR2h0U2xSclpVUlFiSEl5VlRKSGVHTTRlamhqT0VWek9VWnNkbkY1WkVaSlJsWkVXazVoY0ZwdFNUUXhkblk1V2pGU2VuSnhNM1p6TDFsUFRBcHZOVGx4VWlzMGFrNVlTR3hsSzFWeE0zVkxOMUo0ZWt4dVlXZGFWbFZuV1U5WmNXVnJXV1pNYWxWNGQyTXJaRWRPZEVGR1lXWnNOMUpvUm1oVVFtbDNDbWhRV2xoQ05rMUJOMjVNVFN0bU5TOVBXbFZWYTA5SmVtb3pTSGREVkZBMlJuZDJZMlZWTVVoTFJraDRlazlCUkZCekwyMW5iMlZ6VERKVFZuVkhZMUlLYkdSaVdYSXpSbmRDVmxNck16aE1ZbmRvVVZJdk5HVmFkRFpSVnpkS1dUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0ZGSlFrRkJTME5CVVVWQk1WQXdSMnBQUVZsWGNtNU9aeXRuY1RodlNHMWtLM0pwYWxWaFlUVkVUVFJCV0M5WmVHUlVWVVIzY1ROV1EyOVJDbkUxY1hSbVNta3lWMFp1UkhKNmRIa3ZTbHBSY2toVFlUSXZkbGs1UjFWTGVXUXZNbTB3VjNaWGFsUlNUR1ppTkdaNlFXNUNiRzAyUzBFMWVuZ3pORlVLVWtkNVF6QnRZMFJTZVZBcmFYbE1XblZqYVhSRWVFSk5iRXBFUTNSYVJEWkVSalJOYkdONFV6QTNkMHBwU1VOM1ExSnFjblo2VDBod1MxVnNZelY2TmdveFdDODVZV1ZyYTBoaVNYWnRWVkpSYmtvNVVHbHhSbkowVm5SRFNESkVjMjlTT1cxWFJsSlVNalIwZGtWSlRqRmFNRUY1Umt4aVVsQTFWMHRNTmpWNUNtNU1SMVJCUmtKVVNEWkNhMUpJYlZZeFNXWXZZMjgzZDJNeVdYbHVlVFF3WWpWT2NXa3diREpMT0VGTlVISmFhMXBETlRScWVVdEJXbU5PVGpRMGFHTUthVFJLY0ZkV016WktSM1pYYVRJNGFWTnpha1JCV2tOT1JrcEhjVlZqUVhjclRFMW9ibmRKUkVGUlFVSkJiMGxDUVZGRGQxQTFSMnRGWlRCV1duQjJRd3BuSzFSSFQwOW9WMWt6UTBkS09UaFZOVFl4TkRCRGNUVjVjSGxSZEdaV2RrZEZRV3BSVTFFck4zTkJNVGRHU1dGT055c3paRlYyWXpaalJXTlBVbEZZQ21GWFZ6aEhSRVZvTTBaQ01pOVRNemhOTVhJdlNsRkhiVW8yYmpoaE4ydDZXa0Z0ZUdSWWJuTlZiMHBNTlVkV1NFUmtaazR2Vm00MFJsTjZTalFyUXpnS1JIWlNZMDQxWlVObWEyOXpTRWhhYmtaMFlWWk5TMGxyTTNGa2IyWm9NMUZIZUUwMGIwbERhRGhpUW01cWQxZE1hWFptWjJ4eGNYQnRlVFJxVEhBclpBcHFabWxYZVVWSVlrUnNObTV5ZVc1RWNWbHlORGxPVlVaalRHbEhZMmhCV2xOdlRqSXpTekZrZUV3eGFHRnRTVWxLTUhFd01WbHhjbE5ZY0hoTWVFeFVDbU5FY3pGa2VITlJMMDlsUTBwVFVYY3dXRUoxVVZwSlprcFZVVFZNZWt4alZscDJSMVJXVVZSSlZWZFFaVkYzVVZGNGNqZExjelYzWmtSNE1HWTVZV3NLYUVFeVdTc3lNRUpCYjBkQ1FVNDJUMlZNUzJ4YWNtWTBTVFZYVkV0WVZITTFVREZpVW5KWVNXbFdSMjE0VG1ocE0yOUNhelpMZDAxUFpGVlhVVzQxWmdwWVRHa3JXSEZRY2pOb2VWUlBRaXRoVVhkc1QxaDJaVEJ2VW5oalZ6bG9ZbTR5V2sxNE1uRkVXSFpFY1ZOWFRrVXdjSFJHTm5Oek5GRldSV3hRVUdSdUNuUnBURkp6YUZCQmFFNDVibFZ6ZG1oek1VaHRPRUptVDJOelMzSnRLM1Y2VlRaWE5sQkdhMHhwVGtWd2JHNVNRalF3UlVKc1IybDJRVzlIUWtGUVZDc0taV2h3Ylc1TFZYQTNlV3hMWXpaMU1EaFVjR0ZMWldwTU1rOTVhV28xYnpCcFMyMWtNVVJOUkVkMlF6Sm1aWEI1YlZaemRVTlhabEpzWkZnNFNFRXpiQXBWVEVOcGEzRktSazQwWVd0Uk9VRlFiMUo0TmxkR1IxQllTV2hFTjBJd1dYUmpha3hMWW5abWFsQlZTVkU1V0VsMlRUTnVVM2tyV1ZCVGIyWkJNakZtQ2tkNlV6ZElTSGRRSzFGcWVHcEtjMVYzYjBGRFdWQkROVmh1TTJWWmNqWlBiak40YVdWcVNWSkJiMGRDUVVzM2JVTm5XbWx2Tmtkd0swNVZRVXhLUlRrS05XZHpVa2w2VjFOdVp5dDZNMjVuY1RSeE4wZEliU3QxZGk5bmMyOVNOMDA1U1VsbE5GTk5la3B1T0ZGV2QyWkhOVU15TlVWRWNtTkZZM3BITjBWeVVRcFlhV3N6TlROT1YxRkdUbFl5TUhsUE9XMHJaRGsxUjNrMlQyNU1UMDlyTkRoT1RGZE9ibkk1VkdFMUwyUlljbE5MVjJ0Uk9IUm1VMjU1T1V4VE5rcHJDbU5FVlV0aldXbE5NM1l4TlVWRmNsZDVTeTgyWms1WWVrRnZSMEpCVEVSS1RFNTZLMHhKZWpKUVNrVnJSekpJVGtkTlJVNXlUelZEYjI4M2JrbDNObGtLVjBGR2JGWlhiRmRHVlhWaWRFUk1TV0pUWTJocGEwaDZUamxqU1hKRmJrOXlja2t6VEdVMlVWZGxaamRuY2l0U1pEWlhkMFo1YTB4a1V6aFVURVE0TWdwNFNEVllUa0U1VVRKcmN6WnZjRU5UTkUxTlNEUjJXU3RQWlhrMlNXMVFOak5CZG5BNVZEQkZNMkZTTldkUlpYSk1SWEp2TjBsRWIydHRibkpZYmlzMUNrNVNZWGhxVWtkNFFXOUhRVVpwZEV0VmJDczVPVTlYTURoTmJXeHVXVzlKTkVsMlQwMUpURFl3T0ZnNE9VNWlkbVpMZG5OMU1rOVJTMGxvYVRkMk5qVUtPU3RxYkU1bGNFdFZORkZYY1RKM1UzZDZOMGRJV1dkVUwyVlpTWFV2YmpOWlRWZFpNa1psVERSNmFWbGhTV2d4T0U1VFVGaFVaakExTWtsbU5qUkdZUXBhVFZWWlEybEVkR2R0VG1wUVZHUnNNeTl1VW1WVWNGaG1RVFZzY2s1SmMzTlJkRXRKYXpoM2IwWmFNbmxxVjIxRFdrWkJaRWN3UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K"}, "kind": "Secret", "metadata": {"creationTimestamp": "2021-11-19T14:37:20Z", "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:value": {}}, "f:metadata": {"f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"01b31967-9470-4585-b0ed-36c0e299b987\"}": {}}}, "f:type": {}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:37:20Z"}], "name": "test1-kubeconfig", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "KubeadmControlPlane", "name": "test1", "uid": "01b31967-9470-4585-b0ed-36c0e299b987"}], "resourceVersion": "7729", "uid": "1dc8401b-2626-44c8-a4e3-6fb57e1a3236"}, "type": "cluster.x-k8s.io/secret"}]}
Friday 19 November 2021  15:07:19 +0000 (0:00:06.060)       0:30:40.936 ******* 

TASK [v1aX_integration_test : Store target cluster kubeconfig] *****************
changed: [localhost] => {"changed": true, "msg": "File created"}
Friday 19 November 2021  15:07:23 +0000 (0:00:03.423)       0:30:44.360 ******* 

TASK [v1aX_integration_test : Download Calico manifest] ************************
changed: [localhost] => {"changed": true, "checksum_dest": null, "checksum_src": "1f30dbb6715d311f86d94734ecca7875f8556be5", "dest": "/tmp/calico.yaml", "elapsed": 0, "gid": 1000, "group": "capm3", "md5sum": "17ba158b31429704faa7ea7f41dcd81f", "mode": "0664", "msg": "OK (217525 bytes)", "owner": "capm3", "size": 217525, "src": "/home/capm3/.ansible/tmp/ansible-tmp-1637334443.2401006-133121-6255478708579/tmp3fnxdw4v", "state": "file", "status_code": 200, "uid": 1000, "url": "https://docs.projectcalico.org/manifests/calico.yaml"}
Friday 19 November 2021  15:07:24 +0000 (0:00:00.915)       0:30:45.275 ******* 

TASK [v1aX_integration_test : Replace the POD_CIDR in calico config] ***********
changed: [localhost] => {"changed": true, "msg": "1 replacements made"}
Friday 19 November 2021  15:07:24 +0000 (0:00:00.465)       0:30:45.741 ******* 

TASK [v1aX_integration_test : Add IP_AUTODETECTION_METHOD in calico config Ubuntu] ***
changed: [localhost] => {"changed": true, "msg": "Block inserted"}
Friday 19 November 2021  15:07:24 +0000 (0:00:00.268)       0:30:46.010 ******* 

TASK [v1aX_integration_test : Apply Calico manifest] ***************************
changed: [localhost] => {"changed": true, "result": {"results": [{"changed": true, "method": "apply", "result": {"apiVersion": "v1", "data": {"calico_backend": "bird", "cni_network_config": "{\n  \"name\": \"k8s-pod-network\",\n  \"cniVersion\": \"0.3.1\",\n  \"plugins\": [\n    {\n      \"type\": \"calico\",\n      \"log_level\": \"info\",\n      \"log_file_path\": \"/var/log/calico/cni/cni.log\",\n      \"datastore_type\": \"kubernetes\",\n      \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n      \"mtu\": __CNI_MTU__,\n      \"ipam\": {\n          \"type\": \"calico-ipam\"\n      },\n      \"policy\": {\n          \"type\": \"k8s\"\n      },\n      \"kubernetes\": {\n          \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n      }\n    },\n    {\n      \"type\": \"portmap\",\n      \"snat\": true,\n      \"capabilities\": {\"portMappings\": true}\n    },\n    {\n      \"type\": \"bandwidth\",\n      \"capabilities\": {\"bandwidth\": true}\n    }\n  ]\n}", "typha_service_name": "none", "veth_mtu": "0"}, "kind": "ConfigMap", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"calico_backend\":\"bird\",\"cni_network_config\":\"{\\n  \\\"name\\\": \\\"k8s-pod-network\\\",\\n  \\\"cniVersion\\\": \\\"0.3.1\\\",\\n  \\\"plugins\\\": [\\n    {\\n      \\\"type\\\": \\\"calico\\\",\\n      \\\"log_level\\\": \\\"info\\\",\\n      \\\"log_file_path\\\": \\\"/var/log/calico/cni/cni.log\\\",\\n      \\\"datastore_type\\\": \\\"kubernetes\\\",\\n      \\\"nodename\\\": \\\"__KUBERNETES_NODE_NAME__\\\",\\n      \\\"mtu\\\": __CNI_MTU__,\\n      \\\"ipam\\\": {\\n          \\\"type\\\": \\\"calico-ipam\\\"\\n      },\\n      \\\"policy\\\": {\\n          \\\"type\\\": \\\"k8s\\\"\\n      },\\n      \\\"kubernetes\\\": {\\n          \\\"kubeconfig\\\": \\\"__KUBECONFIG_FILEPATH__\\\"\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"portmap\\\",\\n      \\\"snat\\\": true,\\n      \\\"capabilities\\\": {\\\"portMappings\\\": true}\\n    },\\n    {\\n      \\\"type\\\": \\\"bandwidth\\\",\\n      \\\"capabilities\\\": {\\\"bandwidth\\\": true}\\n    }\\n  ]\\n}\",\"typha_service_name\":\"none\",\"veth_mtu\":\"0\"},\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"calico-config\",\"namespace\":\"kube-system\"}}"}, "creationTimestamp": "2021-11-19T15:07:26Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:calico_backend": {}, "f:cni_network_config": {}, "f:typha_service_name": {}, "f:veth_mtu": {}}, "f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:26Z"}], "name": "calico-config", "namespace": "kube-system", "resourceVersion": "2751", "uid": "0919fbd3-8e52-4ba1-a972-16b5bab53afc"}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"bgpconfigurations.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"BGPConfiguration\",\"listKind\":\"BGPConfigurationList\",\"plural\":\"bgpconfigurations\",\"singular\":\"bgpconfiguration\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"BGPConfiguration contains the configuration for any BGP routing.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"BGPConfigurationSpec contains the values of the BGP configuration.\",\"properties\":{\"asNumber\":{\"description\":\"ASNumber is the default AS number used by a node. [Default: 64512]\",\"format\":\"int32\",\"type\":\"integer\"},\"communities\":{\"description\":\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\",\"items\":{\"description\":\"Community contains standard or large community value and its name.\",\"properties\":{\"name\":{\"description\":\"Name given to community value.\",\"type\":\"string\"},\"value\":{\"description\":\"Value must be of format `aa:nn` or `aa:nn:mm`. For standard community use `aa:nn` format, where `aa` and `nn` are 16 bit number. For large community use `aa:nn:mm` format, where `aa`, `nn` and `mm` are 32 bit number. Where, `aa` is an AS Number, `nn` and `mm` are per-AS identifier.\",\"pattern\":\"^(\\\\d+):(\\\\d+)$|^(\\\\d+):(\\\\d+):(\\\\d+)$\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"listenPort\":{\"description\":\"ListenPort is the port where BGP protocol should listen. Defaults to 179\",\"maximum\":65535,\"minimum\":1,\"type\":\"integer\"},\"logSeverityScreen\":{\"description\":\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]\",\"type\":\"string\"},\"nodeToNodeMeshEnabled\":{\"description\":\"NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]\",\"type\":\"boolean\"},\"prefixAdvertisements\":{\"description\":\"PrefixAdvertisements contains per-prefix advertisement configuration.\",\"items\":{\"description\":\"PrefixAdvertisement configures advertisement properties for the specified CIDR.\",\"properties\":{\"cidr\":{\"description\":\"CIDR for which properties should be advertised.\",\"type\":\"string\"},\"communities\":{\"description\":\"Communities can be list of either community names already defined in `Specs.Communities` or community value of format `aa:nn` or `aa:nn:mm`. For standard community use `aa:nn` format, where `aa` and `nn` are 16 bit number. For large community use `aa:nn:mm` format, where `aa`, `nn` and `mm` are 32 bit number. Where,`aa` is an AS Number, `nn` and `mm` are per-AS identifier.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"type\":\"array\"},\"serviceClusterIPs\":{\"description\":\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\",\"items\":{\"description\":\"ServiceClusterIPBlock represents a single allowed ClusterIP CIDR block.\",\"properties\":{\"cidr\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"serviceExternalIPs\":{\"description\":\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\",\"items\":{\"description\":\"ServiceExternalIPBlock represents a single allowed External IP CIDR block.\",\"properties\":{\"cidr\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"serviceLoadBalancerIPs\":{\"description\":\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\",\"items\":{\"description\":\"ServiceLoadBalancerIPBlock represents a single allowed LoadBalancer IP CIDR block.\",\"properties\":{\"cidr\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:26Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:26Z"}], "name": "bgpconfigurations.crd.projectcalico.org", "resourceVersion": "2752", "uid": "ee9e0093-0308-499d-b75d-ca6155fc017b"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "BGPConfiguration", "listKind": "BGPConfigurationList", "plural": "bgpconfigurations", "singular": "bgpconfiguration"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"description": "BGPConfiguration contains the configuration for any BGP routing.", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "BGPConfigurationSpec contains the values of the BGP configuration.", "properties": {"asNumber": {"description": "ASNumber is the default AS number used by a node. [Default: 64512]", "format": "int32", "type": "integer"}, "communities": {"description": "Communities is a list of BGP community values and their arbitrary names for tagging routes.", "items": {"description": "Community contains standard or large community value and its name.", "properties": {"name": {"description": "Name given to community value.", "type": "string"}, "value": {"description": "Value must be of format `aa:nn` or `aa:nn:mm`. For standard community use `aa:nn` format, where `aa` and `nn` are 16 bit number. For large community use `aa:nn:mm` format, where `aa`, `nn` and `mm` are 32 bit number. Where, `aa` is an AS Number, `nn` and `mm` are per-AS identifier.", "pattern": "^(\\d+):(\\d+)$|^(\\d+):(\\d+):(\\d+)$", "type": "string"}}, "type": "object"}, "type": "array"}, "listenPort": {"description": "ListenPort is the port where BGP protocol should listen. Defaults to 179", "maximum": 65535, "minimum": 1, "type": "integer"}, "logSeverityScreen": {"description": "LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]", "type": "string"}, "nodeToNodeMeshEnabled": {"description": "NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]", "type": "boolean"}, "prefixAdvertisements": {"description": "PrefixAdvertisements contains per-prefix advertisement configuration.", "items": {"description": "PrefixAdvertisement configures advertisement properties for the specified CIDR.", "properties": {"cidr": {"description": "CIDR for which properties should be advertised.", "type": "string"}, "communities": {"description": "Communities can be list of either community names already defined in `Specs.Communities` or community value of format `aa:nn` or `aa:nn:mm`. For standard community use `aa:nn` format, where `aa` and `nn` are 16 bit number. For large community use `aa:nn:mm` format, where `aa`, `nn` and `mm` are 32 bit number. Where,`aa` is an AS Number, `nn` and `mm` are per-AS identifier.", "items": {"type": "string"}, "type": "array"}}, "type": "object"}, "type": "array"}, "serviceClusterIPs": {"description": "ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.", "items": {"description": "ServiceClusterIPBlock represents a single allowed ClusterIP CIDR block.", "properties": {"cidr": {"type": "string"}}, "type": "object"}, "type": "array"}, "serviceExternalIPs": {"description": "ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.", "items": {"description": "ServiceExternalIPBlock represents a single allowed External IP CIDR block.", "properties": {"cidr": {"type": "string"}}, "type": "object"}, "type": "array"}, "serviceLoadBalancerIPs": {"description": "ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.", "items": {"description": "ServiceLoadBalancerIPBlock represents a single allowed LoadBalancer IP CIDR block.", "properties": {"cidr": {"type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"bgppeers.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"BGPPeer\",\"listKind\":\"BGPPeerList\",\"plural\":\"bgppeers\",\"singular\":\"bgppeer\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"BGPPeerSpec contains the specification for a BGPPeer resource.\",\"properties\":{\"asNumber\":{\"description\":\"The AS Number of the peer.\",\"format\":\"int32\",\"type\":\"integer\"},\"keepOriginalNextHop\":{\"description\":\"Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \\\"true\\\" configures the selected BGP Peers node to use the \\\"next hop keep;\\\" instead of \\\"next hop self;\\\"(default) in the specific branch of the Node on \\\"bird.cfg\\\".\",\"type\":\"boolean\"},\"maxRestartTime\":{\"description\":\"Time to allow for software restart.  When specified, this is configured as the graceful restart timeout.  When not specified, the BIRD default of 120s is used.\",\"type\":\"string\"},\"node\":{\"description\":\"The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.\",\"type\":\"string\"},\"nodeSelector\":{\"description\":\"Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.\",\"type\":\"string\"},\"password\":{\"description\":\"Optional BGP password for the peerings generated by this BGPPeer resource.\",\"properties\":{\"secretKeyRef\":{\"description\":\"Selects a key of a secret in the node pod's namespace.\",\"properties\":{\"key\":{\"description\":\"The key of the secret to select from.  Must be a valid secret key.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"},\"optional\":{\"description\":\"Specify whether the Secret or its key must be defined\",\"type\":\"boolean\"}},\"required\":[\"key\"],\"type\":\"object\"}},\"type\":\"object\"},\"peerIP\":{\"description\":\"The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be `[<IPv6>]:port` or `<IPv4>:<port>` for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.\",\"type\":\"string\"},\"peerSelector\":{\"description\":\"Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.\",\"type\":\"string\"},\"sourceAddress\":{\"description\":\"Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \\\"UseNodeIP\\\" means to configure the node IP as the source address.  \\\"None\\\" means not to configure a source address.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:26Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:26Z"}], "name": "bgppeers.crd.projectcalico.org", "resourceVersion": "2756", "uid": "ab23e0b8-c452-4826-be55-79fdcb2cb72a"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "BGPPeer", "listKind": "BGPPeerList", "plural": "bgppeers", "singular": "bgppeer"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "BGPPeerSpec contains the specification for a BGPPeer resource.", "properties": {"asNumber": {"description": "The AS Number of the peer.", "format": "int32", "type": "integer"}, "keepOriginalNextHop": {"description": "Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \"true\" configures the selected BGP Peers node to use the \"next hop keep;\" instead of \"next hop self;\"(default) in the specific branch of the Node on \"bird.cfg\".", "type": "boolean"}, "maxRestartTime": {"description": "Time to allow for software restart.  When specified, this is configured as the graceful restart timeout.  When not specified, the BIRD default of 120s is used.", "type": "string"}, "node": {"description": "The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.", "type": "string"}, "nodeSelector": {"description": "Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.", "type": "string"}, "password": {"description": "Optional BGP password for the peerings generated by this BGPPeer resource.", "properties": {"secretKeyRef": {"description": "Selects a key of a secret in the node pod's namespace.", "properties": {"key": {"description": "The key of the secret to select from.  Must be a valid secret key.", "type": "string"}, "name": {"description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?", "type": "string"}, "optional": {"description": "Specify whether the Secret or its key must be defined", "type": "boolean"}}, "required": ["key"], "type": "object"}}, "type": "object"}, "peerIP": {"description": "The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be `[<IPv6>]:port` or `<IPv4>:<port>` for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.", "type": "string"}, "peerSelector": {"description": "Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.", "type": "string"}, "sourceAddress": {"description": "Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \"UseNodeIP\" means to configure the node IP as the source address.  \"None\" means not to configure a source address.", "type": "string"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"blockaffinities.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"BlockAffinity\",\"listKind\":\"BlockAffinityList\",\"plural\":\"blockaffinities\",\"singular\":\"blockaffinity\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"BlockAffinitySpec contains the specification for a BlockAffinity resource.\",\"properties\":{\"cidr\":{\"type\":\"string\"},\"deleted\":{\"description\":\"Deleted indicates that this block affinity is being deleted. This field is a string for compatibility with older releases that mistakenly treat this field as a string.\",\"type\":\"string\"},\"node\":{\"type\":\"string\"},\"state\":{\"type\":\"string\"}},\"required\":[\"cidr\",\"deleted\",\"node\",\"state\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:26Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:26Z"}], "name": "blockaffinities.crd.projectcalico.org", "resourceVersion": "2759", "uid": "121b3ff6-3cd4-497f-b5bc-4f7e51282f1f"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "BlockAffinity", "listKind": "BlockAffinityList", "plural": "blockaffinities", "singular": "blockaffinity"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "BlockAffinitySpec contains the specification for a BlockAffinity resource.", "properties": {"cidr": {"type": "string"}, "deleted": {"description": "Deleted indicates that this block affinity is being deleted. This field is a string for compatibility with older releases that mistakenly treat this field as a string.", "type": "string"}, "node": {"type": "string"}, "state": {"type": "string"}}, "required": ["cidr", "deleted", "node", "state"], "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"controller-gen.kubebuilder.io/version": "(devel)", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"(devel)\"},\"creationTimestamp\":null,\"name\":\"caliconodestatuses.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"CalicoNodeStatus\",\"listKind\":\"CalicoNodeStatusList\",\"plural\":\"caliconodestatuses\",\"singular\":\"caliconodestatus\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"CalicoNodeStatusSpec contains the specification for a CalicoNodeStatus resource.\",\"properties\":{\"classes\":{\"description\":\"Classes declares the types of information to monitor for this calico/node, and allows for selective status reporting about certain subsets of information.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"node\":{\"description\":\"The node name identifies the Calico node instance for node status.\",\"type\":\"string\"},\"updatePeriodSeconds\":{\"description\":\"UpdatePeriodSeconds is the period at which CalicoNodeStatus should be updated. Set to 0 to disable CalicoNodeStatus refresh. Maximum update period is one day.\",\"format\":\"int32\",\"type\":\"integer\"}},\"type\":\"object\"},\"status\":{\"description\":\"CalicoNodeStatusStatus defines the observed state of CalicoNodeStatus. No validation needed for status since it is updated by Calico.\",\"properties\":{\"agent\":{\"description\":\"Agent holds agent status on the node.\",\"properties\":{\"birdV4\":{\"description\":\"BIRDV4 represents the latest observed status of bird4.\",\"properties\":{\"lastBootTime\":{\"description\":\"LastBootTime holds the value of lastBootTime from bird.ctl output.\",\"type\":\"string\"},\"lastReconfigurationTime\":{\"description\":\"LastReconfigurationTime holds the value of lastReconfigTime from bird.ctl output.\",\"type\":\"string\"},\"routerID\":{\"description\":\"Router ID used by bird.\",\"type\":\"string\"},\"state\":{\"description\":\"The state of the BGP Daemon.\",\"type\":\"string\"},\"version\":{\"description\":\"Version of the BGP daemon\",\"type\":\"string\"}},\"type\":\"object\"},\"birdV6\":{\"description\":\"BIRDV6 represents the latest observed status of bird6.\",\"properties\":{\"lastBootTime\":{\"description\":\"LastBootTime holds the value of lastBootTime from bird.ctl output.\",\"type\":\"string\"},\"lastReconfigurationTime\":{\"description\":\"LastReconfigurationTime holds the value of lastReconfigTime from bird.ctl output.\",\"type\":\"string\"},\"routerID\":{\"description\":\"Router ID used by bird.\",\"type\":\"string\"},\"state\":{\"description\":\"The state of the BGP Daemon.\",\"type\":\"string\"},\"version\":{\"description\":\"Version of the BGP daemon\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"bgp\":{\"description\":\"BGP holds node BGP status.\",\"properties\":{\"numberEstablishedV4\":{\"description\":\"The total number of IPv4 established bgp sessions.\",\"type\":\"integer\"},\"numberEstablishedV6\":{\"description\":\"The total number of IPv6 established bgp sessions.\",\"type\":\"integer\"},\"numberNotEstablishedV4\":{\"description\":\"The total number of IPv4 non-established bgp sessions.\",\"type\":\"integer\"},\"numberNotEstablishedV6\":{\"description\":\"The total number of IPv6 non-established bgp sessions.\",\"type\":\"integer\"},\"peersV4\":{\"description\":\"PeersV4 represents IPv4 BGP peers status on the node.\",\"items\":{\"description\":\"CalicoNodePeer contains the status of BGP peers on the node.\",\"properties\":{\"peerIP\":{\"description\":\"IP address of the peer whose condition we are reporting.\",\"type\":\"string\"},\"since\":{\"description\":\"Since the state or reason last changed.\",\"type\":\"string\"},\"state\":{\"description\":\"State is the BGP session state.\",\"type\":\"string\"},\"type\":{\"description\":\"Type indicates whether this peer is configured via the node-to-node mesh, or via en explicit global or per-node BGPPeer object.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"peersV6\":{\"description\":\"PeersV6 represents IPv6 BGP peers status on the node.\",\"items\":{\"description\":\"CalicoNodePeer contains the status of BGP peers on the node.\",\"properties\":{\"peerIP\":{\"description\":\"IP address of the peer whose condition we are reporting.\",\"type\":\"string\"},\"since\":{\"description\":\"Since the state or reason last changed.\",\"type\":\"string\"},\"state\":{\"description\":\"State is the BGP session state.\",\"type\":\"string\"},\"type\":{\"description\":\"Type indicates whether this peer is configured via the node-to-node mesh, or via en explicit global or per-node BGPPeer object.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"required\":[\"numberEstablishedV4\",\"numberEstablishedV6\",\"numberNotEstablishedV4\",\"numberNotEstablishedV6\"],\"type\":\"object\"},\"lastUpdated\":{\"description\":\"LastUpdated is a timestamp representing the server time when CalicoNodeStatus object last updated. It is represented in RFC3339 form and is in UTC.\",\"format\":\"date-time\",\"nullable\":true,\"type\":\"string\"},\"routes\":{\"description\":\"Routes reports routes known to the Calico BGP daemon on the node.\",\"properties\":{\"routesV4\":{\"description\":\"RoutesV4 represents IPv4 routes on the node.\",\"items\":{\"description\":\"CalicoNodeRoute contains the status of BGP routes on the node.\",\"properties\":{\"destination\":{\"description\":\"Destination of the route.\",\"type\":\"string\"},\"gateway\":{\"description\":\"Gateway for the destination.\",\"type\":\"string\"},\"interface\":{\"description\":\"Interface for the destination\",\"type\":\"string\"},\"learnedFrom\":{\"description\":\"LearnedFrom contains information regarding where this route originated.\",\"properties\":{\"peerIP\":{\"description\":\"If sourceType is NodeMesh or BGPPeer, IP address of the router that sent us this route.\",\"type\":\"string\"},\"sourceType\":{\"description\":\"Type of the source where a route is learned from.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":{\"description\":\"Type indicates if the route is being used for forwarding or not.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"routesV6\":{\"description\":\"RoutesV6 represents IPv6 routes on the node.\",\"items\":{\"description\":\"CalicoNodeRoute contains the status of BGP routes on the node.\",\"properties\":{\"destination\":{\"description\":\"Destination of the route.\",\"type\":\"string\"},\"gateway\":{\"description\":\"Gateway for the destination.\",\"type\":\"string\"},\"interface\":{\"description\":\"Interface for the destination\",\"type\":\"string\"},\"learnedFrom\":{\"description\":\"LearnedFrom contains information regarding where this route originated.\",\"properties\":{\"peerIP\":{\"description\":\"If sourceType is NodeMesh or BGPPeer, IP address of the router that sent us this route.\",\"type\":\"string\"},\"sourceType\":{\"description\":\"Type of the source where a route is learned from.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":{\"description\":\"Type indicates if the route is being used for forwarding or not.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:26Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:controller-gen.kubebuilder.io/version": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:26Z"}], "name": "caliconodestatuses.crd.projectcalico.org", "resourceVersion": "2762", "uid": "2cfa25b7-468c-4e14-aedf-72e49a49d9a4"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "CalicoNodeStatus", "listKind": "CalicoNodeStatusList", "plural": "caliconodestatuses", "singular": "caliconodestatus"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "CalicoNodeStatusSpec contains the specification for a CalicoNodeStatus resource.", "properties": {"classes": {"description": "Classes declares the types of information to monitor for this calico/node, and allows for selective status reporting about certain subsets of information.", "items": {"type": "string"}, "type": "array"}, "node": {"description": "The node name identifies the Calico node instance for node status.", "type": "string"}, "updatePeriodSeconds": {"description": "UpdatePeriodSeconds is the period at which CalicoNodeStatus should be updated. Set to 0 to disable CalicoNodeStatus refresh. Maximum update period is one day.", "format": "int32", "type": "integer"}}, "type": "object"}, "status": {"description": "CalicoNodeStatusStatus defines the observed state of CalicoNodeStatus. No validation needed for status since it is updated by Calico.", "properties": {"agent": {"description": "Agent holds agent status on the node.", "properties": {"birdV4": {"description": "BIRDV4 represents the latest observed status of bird4.", "properties": {"lastBootTime": {"description": "LastBootTime holds the value of lastBootTime from bird.ctl output.", "type": "string"}, "lastReconfigurationTime": {"description": "LastReconfigurationTime holds the value of lastReconfigTime from bird.ctl output.", "type": "string"}, "routerID": {"description": "Router ID used by bird.", "type": "string"}, "state": {"description": "The state of the BGP Daemon.", "type": "string"}, "version": {"description": "Version of the BGP daemon", "type": "string"}}, "type": "object"}, "birdV6": {"description": "BIRDV6 represents the latest observed status of bird6.", "properties": {"lastBootTime": {"description": "LastBootTime holds the value of lastBootTime from bird.ctl output.", "type": "string"}, "lastReconfigurationTime": {"description": "LastReconfigurationTime holds the value of lastReconfigTime from bird.ctl output.", "type": "string"}, "routerID": {"description": "Router ID used by bird.", "type": "string"}, "state": {"description": "The state of the BGP Daemon.", "type": "string"}, "version": {"description": "Version of the BGP daemon", "type": "string"}}, "type": "object"}}, "type": "object"}, "bgp": {"description": "BGP holds node BGP status.", "properties": {"numberEstablishedV4": {"description": "The total number of IPv4 established bgp sessions.", "type": "integer"}, "numberEstablishedV6": {"description": "The total number of IPv6 established bgp sessions.", "type": "integer"}, "numberNotEstablishedV4": {"description": "The total number of IPv4 non-established bgp sessions.", "type": "integer"}, "numberNotEstablishedV6": {"description": "The total number of IPv6 non-established bgp sessions.", "type": "integer"}, "peersV4": {"description": "PeersV4 represents IPv4 BGP peers status on the node.", "items": {"description": "CalicoNodePeer contains the status of BGP peers on the node.", "properties": {"peerIP": {"description": "IP address of the peer whose condition we are reporting.", "type": "string"}, "since": {"description": "Since the state or reason last changed.", "type": "string"}, "state": {"description": "State is the BGP session state.", "type": "string"}, "type": {"description": "Type indicates whether this peer is configured via the node-to-node mesh, or via en explicit global or per-node BGPPeer object.", "type": "string"}}, "type": "object"}, "type": "array"}, "peersV6": {"description": "PeersV6 represents IPv6 BGP peers status on the node.", "items": {"description": "CalicoNodePeer contains the status of BGP peers on the node.", "properties": {"peerIP": {"description": "IP address of the peer whose condition we are reporting.", "type": "string"}, "since": {"description": "Since the state or reason last changed.", "type": "string"}, "state": {"description": "State is the BGP session state.", "type": "string"}, "type": {"description": "Type indicates whether this peer is configured via the node-to-node mesh, or via en explicit global or per-node BGPPeer object.", "type": "string"}}, "type": "object"}, "type": "array"}}, "required": ["numberEstablishedV4", "numberEstablishedV6", "numberNotEstablishedV4", "numberNotEstablishedV6"], "type": "object"}, "lastUpdated": {"description": "LastUpdated is a timestamp representing the server time when CalicoNodeStatus object last updated. It is represented in RFC3339 form and is in UTC.", "format": "date-time", "nullable": true, "type": "string"}, "routes": {"description": "Routes reports routes known to the Calico BGP daemon on the node.", "properties": {"routesV4": {"description": "RoutesV4 represents IPv4 routes on the node.", "items": {"description": "CalicoNodeRoute contains the status of BGP routes on the node.", "properties": {"destination": {"description": "Destination of the route.", "type": "string"}, "gateway": {"description": "Gateway for the destination.", "type": "string"}, "interface": {"description": "Interface for the destination", "type": "string"}, "learnedFrom": {"description": "LearnedFrom contains information regarding where this route originated.", "properties": {"peerIP": {"description": "If sourceType is NodeMesh or BGPPeer, IP address of the router that sent us this route.", "type": "string"}, "sourceType": {"description": "Type of the source where a route is learned from.", "type": "string"}}, "type": "object"}, "type": {"description": "Type indicates if the route is being used for forwarding or not.", "type": "string"}}, "type": "object"}, "type": "array"}, "routesV6": {"description": "RoutesV6 represents IPv6 routes on the node.", "items": {"description": "CalicoNodeRoute contains the status of BGP routes on the node.", "properties": {"destination": {"description": "Destination of the route.", "type": "string"}, "gateway": {"description": "Gateway for the destination.", "type": "string"}, "interface": {"description": "Interface for the destination", "type": "string"}, "learnedFrom": {"description": "LearnedFrom contains information regarding where this route originated.", "properties": {"peerIP": {"description": "If sourceType is NodeMesh or BGPPeer, IP address of the router that sent us this route.", "type": "string"}, "sourceType": {"description": "Type of the source where a route is learned from.", "type": "string"}}, "type": "object"}, "type": {"description": "Type indicates if the route is being used for forwarding or not.", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}, "warnings": ["CustomResourceDefinition caliconodestatuses.crd.projectcalico.org: resource definition validation error at metadata.creationTimestamp: None is not of type 'string'"]}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"clusterinformations.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"ClusterInformation\",\"listKind\":\"ClusterInformationList\",\"plural\":\"clusterinformations\",\"singular\":\"clusterinformation\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"ClusterInformation contains the cluster specific information.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"ClusterInformationSpec contains the values of describing the cluster.\",\"properties\":{\"calicoVersion\":{\"description\":\"CalicoVersion is the version of Calico that the cluster is running\",\"type\":\"string\"},\"clusterGUID\":{\"description\":\"ClusterGUID is the GUID of the cluster\",\"type\":\"string\"},\"clusterType\":{\"description\":\"ClusterType describes the type of the cluster\",\"type\":\"string\"},\"datastoreReady\":{\"description\":\"DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.\",\"type\":\"boolean\"},\"variant\":{\"description\":\"Variant declares which variant of Calico should be active.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:26Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:26Z"}], "name": "clusterinformations.crd.projectcalico.org", "resourceVersion": "2765", "uid": "e56766c0-de58-4c87-9e0a-86e87f1f5ae1"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "ClusterInformation", "listKind": "ClusterInformationList", "plural": "clusterinformations", "singular": "clusterinformation"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"description": "ClusterInformation contains the cluster specific information.", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "ClusterInformationSpec contains the values of describing the cluster.", "properties": {"calicoVersion": {"description": "CalicoVersion is the version of Calico that the cluster is running", "type": "string"}, "clusterGUID": {"description": "ClusterGUID is the GUID of the cluster", "type": "string"}, "clusterType": {"description": "ClusterType describes the type of the cluster", "type": "string"}, "datastoreReady": {"description": "DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.", "type": "boolean"}, "variant": {"description": "Variant declares which variant of Calico should be active.", "type": "string"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"felixconfigurations.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"FelixConfiguration\",\"listKind\":\"FelixConfigurationList\",\"plural\":\"felixconfigurations\",\"singular\":\"felixconfiguration\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Felix Configuration contains the configuration for Felix.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"FelixConfigurationSpec contains the values of the Felix configuration.\",\"properties\":{\"allowIPIPPacketsFromWorkloads\":{\"description\":\"AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]\",\"type\":\"boolean\"},\"allowVXLANPacketsFromWorkloads\":{\"description\":\"AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]\",\"type\":\"boolean\"},\"awsSrcDstCheck\":{\"description\":\"Set source-destination-check on AWS EC2 instances. Accepted value must be one of \\\"DoNothing\\\", \\\"Enable\\\" or \\\"Disable\\\". [Default: DoNothing]\",\"enum\":[\"DoNothing\",\"Enable\",\"Disable\"],\"type\":\"string\"},\"bpfConnectTimeLoadBalancingEnabled\":{\"description\":\"BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]\",\"type\":\"boolean\"},\"bpfDataIfacePattern\":{\"description\":\"BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).\",\"type\":\"string\"},\"bpfDisableUnprivileged\":{\"description\":\"BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]\",\"type\":\"boolean\"},\"bpfEnabled\":{\"description\":\"BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]\",\"type\":\"boolean\"},\"bpfExtToServiceConnmark\":{\"description\":\"BPFExtToServiceConnmark in BPF mode, control a 32bit mark that is set on connections from an external client to a local service. This mark allows us to control how packets of that connection are routed within the host and how is routing intepreted by RPF check. [Default: 0]\",\"type\":\"integer\"},\"bpfExternalServiceMode\":{\"description\":\"BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \\\"Tunnel\\\" then both request and response traffic is tunneled to the remote node.  If set to \\\"DSR\\\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \\\"DSR\\\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]\",\"type\":\"string\"},\"bpfKubeProxyEndpointSlicesEnabled\":{\"description\":\"BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.\",\"type\":\"boolean\"},\"bpfKubeProxyIptablesCleanupEnabled\":{\"description\":\"BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]\",\"type\":\"boolean\"},\"bpfKubeProxyMinSyncPeriod\":{\"description\":\"BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]\",\"type\":\"string\"},\"bpfLogLevel\":{\"description\":\"BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \\\"Off\\\", \\\"Info\\\", or \\\"Debug\\\".  The logs are emitted to the BPF trace pipe, accessible with the command `tc exec bpf debug`. [Default: Off].\",\"type\":\"string\"},\"chainInsertMode\":{\"description\":\"ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]\",\"type\":\"string\"},\"dataplaneDriver\":{\"type\":\"string\"},\"debugDisableLogDropping\":{\"type\":\"boolean\"},\"debugMemoryProfilePath\":{\"type\":\"string\"},\"debugSimulateCalcGraphHangAfter\":{\"type\":\"string\"},\"debugSimulateDataplaneHangAfter\":{\"type\":\"string\"},\"defaultEndpointToHostAction\":{\"description\":\"DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables \\\"DROP\\\" action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables \\\"INPUT\\\" chain; Calico will insert its rules at the top of that chain, then \\\"RETURN\\\" packets to the \\\"INPUT\\\" chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]\",\"type\":\"string\"},\"deviceRouteProtocol\":{\"description\":\"This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.\",\"type\":\"integer\"},\"deviceRouteSourceAddress\":{\"description\":\"This is the source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\",\"type\":\"string\"},\"disableConntrackInvalidCheck\":{\"type\":\"boolean\"},\"endpointReportingDelay\":{\"type\":\"string\"},\"endpointReportingEnabled\":{\"type\":\"boolean\"},\"externalNodesList\":{\"description\":\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"failsafeInboundHostPorts\":{\"description\":\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\",\"items\":{\"description\":\"ProtoPort is combination of protocol, port, and CIDR. Protocol and port must be specified.\",\"properties\":{\"net\":{\"type\":\"string\"},\"port\":{\"type\":\"integer\"},\"protocol\":{\"type\":\"string\"}},\"required\":[\"port\",\"protocol\"],\"type\":\"object\"},\"type\":\"array\"},\"failsafeOutboundHostPorts\":{\"description\":\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\",\"items\":{\"description\":\"ProtoPort is combination of protocol, port, and CIDR. Protocol and port must be specified.\",\"properties\":{\"net\":{\"type\":\"string\"},\"port\":{\"type\":\"integer\"},\"protocol\":{\"type\":\"string\"}},\"required\":[\"port\",\"protocol\"],\"type\":\"object\"},\"type\":\"array\"},\"featureDetectOverride\":{\"description\":\"FeatureDetectOverride is used to override the feature detection. Values are specified in a comma separated list with no spaces, example; \\\"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\\\". \\\"true\\\" or \\\"false\\\" will force the feature, empty or omitted values are auto-detected.\",\"type\":\"string\"},\"genericXDPEnabled\":{\"description\":\"GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]\",\"type\":\"boolean\"},\"healthEnabled\":{\"type\":\"boolean\"},\"healthHost\":{\"type\":\"string\"},\"healthPort\":{\"type\":\"integer\"},\"interfaceExclude\":{\"description\":\"InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]\",\"type\":\"string\"},\"interfacePrefix\":{\"description\":\"InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]\",\"type\":\"string\"},\"interfaceRefreshInterval\":{\"description\":\"InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.\",\"type\":\"string\"},\"ipipEnabled\":{\"type\":\"boolean\"},\"ipipMTU\":{\"description\":\"IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\",\"type\":\"integer\"},\"ipsetsRefreshInterval\":{\"description\":\"IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]\",\"type\":\"string\"},\"iptablesBackend\":{\"description\":\"IptablesBackend specifies which backend of iptables will be used. The default is legacy.\",\"type\":\"string\"},\"iptablesFilterAllowAction\":{\"type\":\"string\"},\"iptablesLockFilePath\":{\"description\":\"IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]\",\"type\":\"string\"},\"iptablesLockProbeInterval\":{\"description\":\"IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]\",\"type\":\"string\"},\"iptablesLockTimeout\":{\"description\":\"IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]\",\"type\":\"string\"},\"iptablesMangleAllowAction\":{\"type\":\"string\"},\"iptablesMarkMask\":{\"description\":\"IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]\",\"format\":\"int32\",\"type\":\"integer\"},\"iptablesNATOutgoingInterfaceFilter\":{\"type\":\"string\"},\"iptablesPostWriteCheckInterval\":{\"description\":\"IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]\",\"type\":\"string\"},\"iptablesRefreshInterval\":{\"description\":\"IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]\",\"type\":\"string\"},\"ipv6Support\":{\"type\":\"boolean\"},\"kubeNodePortRanges\":{\"description\":\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"logFilePath\":{\"description\":\"LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]\",\"type\":\"string\"},\"logPrefix\":{\"description\":\"LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]\",\"type\":\"string\"},\"logSeverityFile\":{\"description\":\"LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]\",\"type\":\"string\"},\"logSeverityScreen\":{\"description\":\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\",\"type\":\"string\"},\"logSeveritySys\":{\"description\":\"LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]\",\"type\":\"string\"},\"maxIpsetSize\":{\"type\":\"integer\"},\"metadataAddr\":{\"description\":\"MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]\",\"type\":\"string\"},\"metadataPort\":{\"description\":\"MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].\",\"type\":\"integer\"},\"mtuIfacePattern\":{\"description\":\"MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).\",\"type\":\"string\"},\"natOutgoingAddress\":{\"description\":\"NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)\",\"type\":\"string\"},\"natPortRange\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.\",\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"netlinkTimeout\":{\"type\":\"string\"},\"openstackRegion\":{\"description\":\"OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]\",\"type\":\"string\"},\"policySyncPathPrefix\":{\"description\":\"PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]\",\"type\":\"string\"},\"prometheusGoMetricsEnabled\":{\"description\":\"PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\",\"type\":\"boolean\"},\"prometheusMetricsEnabled\":{\"description\":\"PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]\",\"type\":\"boolean\"},\"prometheusMetricsHost\":{\"description\":\"PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]\",\"type\":\"string\"},\"prometheusMetricsPort\":{\"description\":\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]\",\"type\":\"integer\"},\"prometheusProcessMetricsEnabled\":{\"description\":\"PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\",\"type\":\"boolean\"},\"prometheusWireGuardMetricsEnabled\":{\"description\":\"PrometheusWireGuardMetricsEnabled disables wireguard metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\",\"type\":\"boolean\"},\"removeExternalRoutes\":{\"description\":\"Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.\",\"type\":\"boolean\"},\"reportingInterval\":{\"description\":\"ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]\",\"type\":\"string\"},\"reportingTTL\":{\"description\":\"ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]\",\"type\":\"string\"},\"routeRefreshInterval\":{\"description\":\"RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]\",\"type\":\"string\"},\"routeSource\":{\"description\":\"RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.\",\"type\":\"string\"},\"routeTableRange\":{\"description\":\"Calico programs additional Linux route tables for various purposes.  RouteTableRange specifies the indices of the route tables that Calico should use.\",\"properties\":{\"max\":{\"type\":\"integer\"},\"min\":{\"type\":\"integer\"}},\"required\":[\"max\",\"min\"],\"type\":\"object\"},\"serviceLoopPrevention\":{\"description\":\"When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \\\"Disabled\\\", in which case such routing loops continue to be allowed. [Default: Drop]\",\"type\":\"string\"},\"sidecarAccelerationEnabled\":{\"description\":\"SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]\",\"type\":\"boolean\"},\"usageReportingEnabled\":{\"description\":\"UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]\",\"type\":\"boolean\"},\"usageReportingInitialDelay\":{\"description\":\"UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]\",\"type\":\"string\"},\"usageReportingInterval\":{\"description\":\"UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]\",\"type\":\"string\"},\"useInternalDataplaneDriver\":{\"type\":\"boolean\"},\"vxlanEnabled\":{\"type\":\"boolean\"},\"vxlanMTU\":{\"description\":\"VXLANMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\",\"type\":\"integer\"},\"vxlanPort\":{\"type\":\"integer\"},\"vxlanVNI\":{\"type\":\"integer\"},\"wireguardEnabled\":{\"description\":\"WireguardEnabled controls whether Wireguard is enabled. [Default: false]\",\"type\":\"boolean\"},\"wireguardHostEncryptionEnabled\":{\"description\":\"WireguardHostEncryptionEnabled controls whether Wireguard host-to-host encryption is enabled. [Default: false]\",\"type\":\"boolean\"},\"wireguardInterfaceName\":{\"description\":\"WireguardInterfaceName specifies the name to use for the Wireguard interface. [Default: wg.calico]\",\"type\":\"string\"},\"wireguardListeningPort\":{\"description\":\"WireguardListeningPort controls the listening port used by Wireguard. [Default: 51820]\",\"type\":\"integer\"},\"wireguardMTU\":{\"description\":\"WireguardMTU controls the MTU on the Wireguard interface. See Configuring MTU [Default: 1420]\",\"type\":\"integer\"},\"wireguardRoutingRulePriority\":{\"description\":\"WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]\",\"type\":\"integer\"},\"xdpEnabled\":{\"description\":\"XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]\",\"type\":\"boolean\"},\"xdpRefreshInterval\":{\"description\":\"XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:26Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:26Z"}], "name": "felixconfigurations.crd.projectcalico.org", "resourceVersion": "2768", "uid": "2e65fad5-a749-4254-8ba0-c4a7dce1bdbf"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "FelixConfiguration", "listKind": "FelixConfigurationList", "plural": "felixconfigurations", "singular": "felixconfiguration"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"description": "Felix Configuration contains the configuration for Felix.", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "FelixConfigurationSpec contains the values of the Felix configuration.", "properties": {"allowIPIPPacketsFromWorkloads": {"description": "AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]", "type": "boolean"}, "allowVXLANPacketsFromWorkloads": {"description": "AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]", "type": "boolean"}, "awsSrcDstCheck": {"description": "Set source-destination-check on AWS EC2 instances. Accepted value must be one of \"DoNothing\", \"Enable\" or \"Disable\". [Default: DoNothing]", "enum": ["DoNothing", "Enable", "Disable"], "type": "string"}, "bpfConnectTimeLoadBalancingEnabled": {"description": "BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]", "type": "boolean"}, "bpfDataIfacePattern": {"description": "BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).", "type": "string"}, "bpfDisableUnprivileged": {"description": "BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]", "type": "boolean"}, "bpfEnabled": {"description": "BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]", "type": "boolean"}, "bpfExtToServiceConnmark": {"description": "BPFExtToServiceConnmark in BPF mode, control a 32bit mark that is set on connections from an external client to a local service. This mark allows us to control how packets of that connection are routed within the host and how is routing intepreted by RPF check. [Default: 0]", "type": "integer"}, "bpfExternalServiceMode": {"description": "BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \"Tunnel\" then both request and response traffic is tunneled to the remote node.  If set to \"DSR\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \"DSR\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]", "type": "string"}, "bpfKubeProxyEndpointSlicesEnabled": {"description": "BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.", "type": "boolean"}, "bpfKubeProxyIptablesCleanupEnabled": {"description": "BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]", "type": "boolean"}, "bpfKubeProxyMinSyncPeriod": {"description": "BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]", "type": "string"}, "bpfLogLevel": {"description": "BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \"Off\", \"Info\", or \"Debug\".  The logs are emitted to the BPF trace pipe, accessible with the command `tc exec bpf debug`. [Default: Off].", "type": "string"}, "chainInsertMode": {"description": "ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]", "type": "string"}, "dataplaneDriver": {"type": "string"}, "debugDisableLogDropping": {"type": "boolean"}, "debugMemoryProfilePath": {"type": "string"}, "debugSimulateCalcGraphHangAfter": {"type": "string"}, "debugSimulateDataplaneHangAfter": {"type": "string"}, "defaultEndpointToHostAction": {"description": "DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables \"DROP\" action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables \"INPUT\" chain; Calico will insert its rules at the top of that chain, then \"RETURN\" packets to the \"INPUT\" chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]", "type": "string"}, "deviceRouteProtocol": {"description": "This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.", "type": "integer"}, "deviceRouteSourceAddress": {"description": "This is the source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.", "type": "string"}, "disableConntrackInvalidCheck": {"type": "boolean"}, "endpointReportingDelay": {"type": "string"}, "endpointReportingEnabled": {"type": "boolean"}, "externalNodesList": {"description": "ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.", "items": {"type": "string"}, "type": "array"}, "failsafeInboundHostPorts": {"description": "FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \"tcp\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]", "items": {"description": "ProtoPort is combination of protocol, port, and CIDR. Protocol and port must be specified.", "properties": {"net": {"type": "string"}, "port": {"type": "integer"}, "protocol": {"type": "string"}}, "required": ["port", "protocol"], "type": "object"}, "type": "array"}, "failsafeOutboundHostPorts": {"description": "FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \"tcp\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]", "items": {"description": "ProtoPort is combination of protocol, port, and CIDR. Protocol and port must be specified.", "properties": {"net": {"type": "string"}, "port": {"type": "integer"}, "protocol": {"type": "string"}}, "required": ["port", "protocol"], "type": "object"}, "type": "array"}, "featureDetectOverride": {"description": "FeatureDetectOverride is used to override the feature detection. Values are specified in a comma separated list with no spaces, example; \"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\". \"true\" or \"false\" will force the feature, empty or omitted values are auto-detected.", "type": "string"}, "genericXDPEnabled": {"description": "GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]", "type": "boolean"}, "healthEnabled": {"type": "boolean"}, "healthHost": {"type": "string"}, "healthPort": {"type": "integer"}, "interfaceExclude": {"description": "InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]", "type": "string"}, "interfacePrefix": {"description": "InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]", "type": "string"}, "interfaceRefreshInterval": {"description": "InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.", "type": "string"}, "ipipEnabled": {"type": "boolean"}, "ipipMTU": {"description": "IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]", "type": "integer"}, "ipsetsRefreshInterval": {"description": "IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]", "type": "string"}, "iptablesBackend": {"description": "IptablesBackend specifies which backend of iptables will be used. The default is legacy.", "type": "string"}, "iptablesFilterAllowAction": {"type": "string"}, "iptablesLockFilePath": {"description": "IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]", "type": "string"}, "iptablesLockProbeInterval": {"description": "IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]", "type": "string"}, "iptablesLockTimeout": {"description": "IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]", "type": "string"}, "iptablesMangleAllowAction": {"type": "string"}, "iptablesMarkMask": {"description": "IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]", "format": "int32", "type": "integer"}, "iptablesNATOutgoingInterfaceFilter": {"type": "string"}, "iptablesPostWriteCheckInterval": {"description": "IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]", "type": "string"}, "iptablesRefreshInterval": {"description": "IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]", "type": "string"}, "ipv6Support": {"type": "boolean"}, "kubeNodePortRanges": {"description": "KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "logFilePath": {"description": "LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]", "type": "string"}, "logPrefix": {"description": "LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]", "type": "string"}, "logSeverityFile": {"description": "LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]", "type": "string"}, "logSeverityScreen": {"description": "LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]", "type": "string"}, "logSeveritySys": {"description": "LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]", "type": "string"}, "maxIpsetSize": {"type": "integer"}, "metadataAddr": {"description": "MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]", "type": "string"}, "metadataPort": {"description": "MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].", "type": "integer"}, "mtuIfacePattern": {"description": "MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).", "type": "string"}, "natOutgoingAddress": {"description": "NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)", "type": "string"}, "natPortRange": {"anyOf": [{"type": "integer"}, {"type": "string"}], "description": "NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.", "pattern": "^.*", "x-kubernetes-int-or-string": true}, "netlinkTimeout": {"type": "string"}, "openstackRegion": {"description": "OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]", "type": "string"}, "policySyncPathPrefix": {"description": "PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]", "type": "string"}, "prometheusGoMetricsEnabled": {"description": "PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]", "type": "boolean"}, "prometheusMetricsEnabled": {"description": "PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]", "type": "boolean"}, "prometheusMetricsHost": {"description": "PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]", "type": "string"}, "prometheusMetricsPort": {"description": "PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]", "type": "integer"}, "prometheusProcessMetricsEnabled": {"description": "PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]", "type": "boolean"}, "prometheusWireGuardMetricsEnabled": {"description": "PrometheusWireGuardMetricsEnabled disables wireguard metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]", "type": "boolean"}, "removeExternalRoutes": {"description": "Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.", "type": "boolean"}, "reportingInterval": {"description": "ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]", "type": "string"}, "reportingTTL": {"description": "ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]", "type": "string"}, "routeRefreshInterval": {"description": "RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]", "type": "string"}, "routeSource": {"description": "RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.", "type": "string"}, "routeTableRange": {"description": "Calico programs additional Linux route tables for various purposes.  RouteTableRange specifies the indices of the route tables that Calico should use.", "properties": {"max": {"type": "integer"}, "min": {"type": "integer"}}, "required": ["max", "min"], "type": "object"}, "serviceLoopPrevention": {"description": "When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \"Disabled\", in which case such routing loops continue to be allowed. [Default: Drop]", "type": "string"}, "sidecarAccelerationEnabled": {"description": "SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]", "type": "boolean"}, "usageReportingEnabled": {"description": "UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]", "type": "boolean"}, "usageReportingInitialDelay": {"description": "UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]", "type": "string"}, "usageReportingInterval": {"description": "UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]", "type": "string"}, "useInternalDataplaneDriver": {"type": "boolean"}, "vxlanEnabled": {"type": "boolean"}, "vxlanMTU": {"description": "VXLANMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]", "type": "integer"}, "vxlanPort": {"type": "integer"}, "vxlanVNI": {"type": "integer"}, "wireguardEnabled": {"description": "WireguardEnabled controls whether Wireguard is enabled. [Default: false]", "type": "boolean"}, "wireguardHostEncryptionEnabled": {"description": "WireguardHostEncryptionEnabled controls whether Wireguard host-to-host encryption is enabled. [Default: false]", "type": "boolean"}, "wireguardInterfaceName": {"description": "WireguardInterfaceName specifies the name to use for the Wireguard interface. [Default: wg.calico]", "type": "string"}, "wireguardListeningPort": {"description": "WireguardListeningPort controls the listening port used by Wireguard. [Default: 51820]", "type": "integer"}, "wireguardMTU": {"description": "WireguardMTU controls the MTU on the Wireguard interface. See Configuring MTU [Default: 1420]", "type": "integer"}, "wireguardRoutingRulePriority": {"description": "WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]", "type": "integer"}, "xdpEnabled": {"description": "XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]", "type": "boolean"}, "xdpRefreshInterval": {"description": "XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]", "type": "string"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"globalnetworkpolicies.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"GlobalNetworkPolicy\",\"listKind\":\"GlobalNetworkPolicyList\",\"plural\":\"globalnetworkpolicies\",\"singular\":\"globalnetworkpolicy\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"properties\":{\"applyOnForward\":{\"description\":\"ApplyOnForward indicates to apply the rules in this policy on forward traffic.\",\"type\":\"boolean\"},\"doNotTrack\":{\"description\":\"DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.\",\"type\":\"boolean\"},\"egress\":{\"description\":\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\",\"items\":{\"description\":\"A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching. \\n Each positive match criteria has a negated version, prefixed with \\\"Not\\\". All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.\",\"properties\":{\"action\":{\"type\":\"string\"},\"destination\":{\"description\":\"Destination contains the match criteria that apply to destination entity.\",\"properties\":{\"namespaceSelector\":{\"description\":\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\",\"type\":\"string\"},\"nets\":{\"description\":\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notNets\":{\"description\":\"NotNets is the negated version of the Nets field.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notPorts\":{\"description\":\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"notSelector\":{\"description\":\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\",\"type\":\"string\"},\"ports\":{\"description\":\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\",\"type\":\"string\"},\"serviceAccounts\":{\"description\":\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\",\"properties\":{\"names\":{\"description\":\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\",\"type\":\"string\"}},\"type\":\"object\"},\"services\":{\"description\":\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\",\"properties\":{\"name\":{\"description\":\"Name specifies the name of a Kubernetes Service to match.\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"http\":{\"description\":\"HTTP contains match criteria that apply to HTTP requests.\",\"properties\":{\"methods\":{\"description\":\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"paths\":{\"description\":\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.\",\"items\":{\"description\":\"HTTPPath specifies an HTTP path to match. It may be either of the form: exact: <path>: which matches the path exactly or prefix: <path-prefix>: which matches the path prefix\",\"properties\":{\"exact\":{\"type\":\"string\"},\"prefix\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"icmp\":{\"description\":\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\",\"properties\":{\"code\":{\"description\":\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\",\"type\":\"integer\"},\"type\":{\"description\":\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\",\"type\":\"integer\"}},\"type\":\"object\"},\"ipVersion\":{\"description\":\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\",\"type\":\"integer\"},\"metadata\":{\"description\":\"Metadata contains additional information for this rule\",\"properties\":{\"annotations\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Annotations is a set of key value pairs that give extra information about the rule\",\"type\":\"object\"}},\"type\":\"object\"},\"notICMP\":{\"description\":\"NotICMP is the negated version of the ICMP field.\",\"properties\":{\"code\":{\"description\":\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\",\"type\":\"integer\"},\"type\":{\"description\":\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\",\"type\":\"integer\"}},\"type\":\"object\"},\"notProtocol\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"NotProtocol is the negated version of the Protocol field.\",\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"protocol\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\",\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"source\":{\"description\":\"Source contains the match criteria that apply to source entity.\",\"properties\":{\"namespaceSelector\":{\"description\":\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\",\"type\":\"string\"},\"nets\":{\"description\":\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notNets\":{\"description\":\"NotNets is the negated version of the Nets field.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notPorts\":{\"description\":\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"notSelector\":{\"description\":\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\",\"type\":\"string\"},\"ports\":{\"description\":\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\",\"type\":\"string\"},\"serviceAccounts\":{\"description\":\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\",\"properties\":{\"names\":{\"description\":\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\",\"type\":\"string\"}},\"type\":\"object\"},\"services\":{\"description\":\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\",\"properties\":{\"name\":{\"description\":\"Name specifies the name of a Kubernetes Service to match.\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"required\":[\"action\"],\"type\":\"object\"},\"type\":\"array\"},\"ingress\":{\"description\":\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\",\"items\":{\"description\":\"A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching. \\n Each positive match criteria has a negated version, prefixed with \\\"Not\\\". All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.\",\"properties\":{\"action\":{\"type\":\"string\"},\"destination\":{\"description\":\"Destination contains the match criteria that apply to destination entity.\",\"properties\":{\"namespaceSelector\":{\"description\":\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\",\"type\":\"string\"},\"nets\":{\"description\":\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notNets\":{\"description\":\"NotNets is the negated version of the Nets field.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notPorts\":{\"description\":\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"notSelector\":{\"description\":\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\",\"type\":\"string\"},\"ports\":{\"description\":\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\",\"type\":\"string\"},\"serviceAccounts\":{\"description\":\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\",\"properties\":{\"names\":{\"description\":\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\",\"type\":\"string\"}},\"type\":\"object\"},\"services\":{\"description\":\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\",\"properties\":{\"name\":{\"description\":\"Name specifies the name of a Kubernetes Service to match.\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"http\":{\"description\":\"HTTP contains match criteria that apply to HTTP requests.\",\"properties\":{\"methods\":{\"description\":\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"paths\":{\"description\":\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.\",\"items\":{\"description\":\"HTTPPath specifies an HTTP path to match. It may be either of the form: exact: <path>: which matches the path exactly or prefix: <path-prefix>: which matches the path prefix\",\"properties\":{\"exact\":{\"type\":\"string\"},\"prefix\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"icmp\":{\"description\":\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\",\"properties\":{\"code\":{\"description\":\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\",\"type\":\"integer\"},\"type\":{\"description\":\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\",\"type\":\"integer\"}},\"type\":\"object\"},\"ipVersion\":{\"description\":\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\",\"type\":\"integer\"},\"metadata\":{\"description\":\"Metadata contains additional information for this rule\",\"properties\":{\"annotations\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Annotations is a set of key value pairs that give extra information about the rule\",\"type\":\"object\"}},\"type\":\"object\"},\"notICMP\":{\"description\":\"NotICMP is the negated version of the ICMP field.\",\"properties\":{\"code\":{\"description\":\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\",\"type\":\"integer\"},\"type\":{\"description\":\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\",\"type\":\"integer\"}},\"type\":\"object\"},\"notProtocol\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"NotProtocol is the negated version of the Protocol field.\",\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"protocol\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\",\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"source\":{\"description\":\"Source contains the match criteria that apply to source entity.\",\"properties\":{\"namespaceSelector\":{\"description\":\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\",\"type\":\"string\"},\"nets\":{\"description\":\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notNets\":{\"description\":\"NotNets is the negated version of the Nets field.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notPorts\":{\"description\":\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"notSelector\":{\"description\":\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\",\"type\":\"string\"},\"ports\":{\"description\":\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\",\"type\":\"string\"},\"serviceAccounts\":{\"description\":\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\",\"properties\":{\"names\":{\"description\":\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\",\"type\":\"string\"}},\"type\":\"object\"},\"services\":{\"description\":\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\",\"properties\":{\"name\":{\"description\":\"Name specifies the name of a Kubernetes Service to match.\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"required\":[\"action\"],\"type\":\"object\"},\"type\":\"array\"},\"namespaceSelector\":{\"description\":\"NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.\",\"type\":\"string\"},\"order\":{\"description\":\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\",\"type\":\"number\"},\"preDNAT\":{\"description\":\"PreDNAT indicates to apply the rules in this policy before any DNAT.\",\"type\":\"boolean\"},\"selector\":{\"description\":\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  ->  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   ->  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  ->  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  ->  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -> True if that label is present \\t! expr -> negation of expr \\texpr && expr  -> Short-circuit and \\texpr || expr  -> Short-circuit or \\t( expr ) -> parens for grouping \\tall() or the empty selector -> matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" && deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\",\"type\":\"string\"},\"serviceAccountSelector\":{\"description\":\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\",\"type\":\"string\"},\"types\":{\"description\":\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\",\"items\":{\"description\":\"PolicyType enumerates the possible values of the PolicySpec Types field.\",\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:27Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:27Z"}], "name": "globalnetworkpolicies.crd.projectcalico.org", "resourceVersion": "2771", "uid": "6ec3497c-dc06-498c-a8dd-e440c182b223"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "GlobalNetworkPolicy", "listKind": "GlobalNetworkPolicyList", "plural": "globalnetworkpolicies", "singular": "globalnetworkpolicy"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"properties": {"applyOnForward": {"description": "ApplyOnForward indicates to apply the rules in this policy on forward traffic.", "type": "boolean"}, "doNotTrack": {"description": "DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.", "type": "boolean"}, "egress": {"description": "The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.", "items": {"description": "A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching. \n Each positive match criteria has a negated version, prefixed with \"Not\". All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.", "properties": {"action": {"type": "string"}, "destination": {"description": "Destination contains the match criteria that apply to destination entity.", "properties": {"namespaceSelector": {"description": "NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.", "type": "string"}, "nets": {"description": "Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.", "items": {"type": "string"}, "type": "array"}, "notNets": {"description": "NotNets is the negated version of the Nets field.", "items": {"type": "string"}, "type": "array"}, "notPorts": {"description": "NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "notSelector": {"description": "NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.", "type": "string"}, "ports": {"description": "Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "selector": {"description": "Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \n \tSelector = \"!has(my_label)\" matches packets that are from other Calico-controlled \tendpoints that do not have the label \"my_label\". \n \tNotSelector = \"has(my_label)\" matches packets that are not from Calico-controlled \tendpoints that do have the label \"my_label\". \n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.", "type": "string"}, "serviceAccounts": {"description": "ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.", "properties": {"names": {"description": "Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.", "items": {"type": "string"}, "type": "array"}, "selector": {"description": "Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.", "type": "string"}}, "type": "object"}, "services": {"description": "Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \n Ports and NotPorts can only be specified with Services on ingress rules.", "properties": {"name": {"description": "Name specifies the name of a Kubernetes Service to match.", "type": "string"}, "namespace": {"description": "Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.", "type": "string"}}, "type": "object"}}, "type": "object"}, "http": {"description": "HTTP contains match criteria that apply to HTTP requests.", "properties": {"methods": {"description": "Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.", "items": {"type": "string"}, "type": "array"}, "paths": {"description": "Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.", "items": {"description": "HTTPPath specifies an HTTP path to match. It may be either of the form: exact: <path>: which matches the path exactly or prefix: <path-prefix>: which matches the path prefix", "properties": {"exact": {"type": "string"}, "prefix": {"type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "icmp": {"description": "ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \"ICMP\" or \"ICMPv6\".", "properties": {"code": {"description": "Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.", "type": "integer"}, "type": {"description": "Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).", "type": "integer"}}, "type": "object"}, "ipVersion": {"description": "IPVersion is an optional field that restricts the rule to only match a specific IP version.", "type": "integer"}, "metadata": {"description": "Metadata contains additional information for this rule", "properties": {"annotations": {"additionalProperties": {"type": "string"}, "description": "Annotations is a set of key value pairs that give extra information about the rule", "type": "object"}}, "type": "object"}, "notICMP": {"description": "NotICMP is the negated version of the ICMP field.", "properties": {"code": {"description": "Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.", "type": "integer"}, "type": {"description": "Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).", "type": "integer"}}, "type": "object"}, "notProtocol": {"anyOf": [{"type": "integer"}, {"type": "string"}], "description": "NotProtocol is the negated version of the Protocol field.", "pattern": "^.*", "x-kubernetes-int-or-string": true}, "protocol": {"anyOf": [{"type": "integer"}, {"type": "string"}], "description": "Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \n Must be one of these string values: \"TCP\", \"UDP\", \"ICMP\", \"ICMPv6\", \"SCTP\", \"UDPLite\" or an integer in the range 1-255.", "pattern": "^.*", "x-kubernetes-int-or-string": true}, "source": {"description": "Source contains the match criteria that apply to source entity.", "properties": {"namespaceSelector": {"description": "NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.", "type": "string"}, "nets": {"description": "Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.", "items": {"type": "string"}, "type": "array"}, "notNets": {"description": "NotNets is the negated version of the Nets field.", "items": {"type": "string"}, "type": "array"}, "notPorts": {"description": "NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "notSelector": {"description": "NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.", "type": "string"}, "ports": {"description": "Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "selector": {"description": "Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \n \tSelector = \"!has(my_label)\" matches packets that are from other Calico-controlled \tendpoints that do not have the label \"my_label\". \n \tNotSelector = \"has(my_label)\" matches packets that are not from Calico-controlled \tendpoints that do have the label \"my_label\". \n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.", "type": "string"}, "serviceAccounts": {"description": "ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.", "properties": {"names": {"description": "Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.", "items": {"type": "string"}, "type": "array"}, "selector": {"description": "Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.", "type": "string"}}, "type": "object"}, "services": {"description": "Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \n Ports and NotPorts can only be specified with Services on ingress rules.", "properties": {"name": {"description": "Name specifies the name of a Kubernetes Service to match.", "type": "string"}, "namespace": {"description": "Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.", "type": "string"}}, "type": "object"}}, "type": "object"}}, "required": ["action"], "type": "object"}, "type": "array"}, "ingress": {"description": "The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.", "items": {"description": "A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching. \n Each positive match criteria has a negated version, prefixed with \"Not\". All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.", "properties": {"action": {"type": "string"}, "destination": {"description": "Destination contains the match criteria that apply to destination entity.", "properties": {"namespaceSelector": {"description": "NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.", "type": "string"}, "nets": {"description": "Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.", "items": {"type": "string"}, "type": "array"}, "notNets": {"description": "NotNets is the negated version of the Nets field.", "items": {"type": "string"}, "type": "array"}, "notPorts": {"description": "NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "notSelector": {"description": "NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.", "type": "string"}, "ports": {"description": "Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "selector": {"description": "Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \n \tSelector = \"!has(my_label)\" matches packets that are from other Calico-controlled \tendpoints that do not have the label \"my_label\". \n \tNotSelector = \"has(my_label)\" matches packets that are not from Calico-controlled \tendpoints that do have the label \"my_label\". \n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.", "type": "string"}, "serviceAccounts": {"description": "ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.", "properties": {"names": {"description": "Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.", "items": {"type": "string"}, "type": "array"}, "selector": {"description": "Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.", "type": "string"}}, "type": "object"}, "services": {"description": "Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \n Ports and NotPorts can only be specified with Services on ingress rules.", "properties": {"name": {"description": "Name specifies the name of a Kubernetes Service to match.", "type": "string"}, "namespace": {"description": "Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.", "type": "string"}}, "type": "object"}}, "type": "object"}, "http": {"description": "HTTP contains match criteria that apply to HTTP requests.", "properties": {"methods": {"description": "Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.", "items": {"type": "string"}, "type": "array"}, "paths": {"description": "Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.", "items": {"description": "HTTPPath specifies an HTTP path to match. It may be either of the form: exact: <path>: which matches the path exactly or prefix: <path-prefix>: which matches the path prefix", "properties": {"exact": {"type": "string"}, "prefix": {"type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "icmp": {"description": "ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \"ICMP\" or \"ICMPv6\".", "properties": {"code": {"description": "Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.", "type": "integer"}, "type": {"description": "Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).", "type": "integer"}}, "type": "object"}, "ipVersion": {"description": "IPVersion is an optional field that restricts the rule to only match a specific IP version.", "type": "integer"}, "metadata": {"description": "Metadata contains additional information for this rule", "properties": {"annotations": {"additionalProperties": {"type": "string"}, "description": "Annotations is a set of key value pairs that give extra information about the rule", "type": "object"}}, "type": "object"}, "notICMP": {"description": "NotICMP is the negated version of the ICMP field.", "properties": {"code": {"description": "Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.", "type": "integer"}, "type": {"description": "Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).", "type": "integer"}}, "type": "object"}, "notProtocol": {"anyOf": [{"type": "integer"}, {"type": "string"}], "description": "NotProtocol is the negated version of the Protocol field.", "pattern": "^.*", "x-kubernetes-int-or-string": true}, "protocol": {"anyOf": [{"type": "integer"}, {"type": "string"}], "description": "Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \n Must be one of these string values: \"TCP\", \"UDP\", \"ICMP\", \"ICMPv6\", \"SCTP\", \"UDPLite\" or an integer in the range 1-255.", "pattern": "^.*", "x-kubernetes-int-or-string": true}, "source": {"description": "Source contains the match criteria that apply to source entity.", "properties": {"namespaceSelector": {"description": "NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.", "type": "string"}, "nets": {"description": "Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.", "items": {"type": "string"}, "type": "array"}, "notNets": {"description": "NotNets is the negated version of the Nets field.", "items": {"type": "string"}, "type": "array"}, "notPorts": {"description": "NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "notSelector": {"description": "NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.", "type": "string"}, "ports": {"description": "Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "selector": {"description": "Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \n \tSelector = \"!has(my_label)\" matches packets that are from other Calico-controlled \tendpoints that do not have the label \"my_label\". \n \tNotSelector = \"has(my_label)\" matches packets that are not from Calico-controlled \tendpoints that do have the label \"my_label\". \n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.", "type": "string"}, "serviceAccounts": {"description": "ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.", "properties": {"names": {"description": "Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.", "items": {"type": "string"}, "type": "array"}, "selector": {"description": "Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.", "type": "string"}}, "type": "object"}, "services": {"description": "Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \n Ports and NotPorts can only be specified with Services on ingress rules.", "properties": {"name": {"description": "Name specifies the name of a Kubernetes Service to match.", "type": "string"}, "namespace": {"description": "Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.", "type": "string"}}, "type": "object"}}, "type": "object"}}, "required": ["action"], "type": "object"}, "type": "array"}, "namespaceSelector": {"description": "NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.", "type": "string"}, "order": {"description": "Order is an optional field that specifies the order in which the policy is applied. Policies with higher \"order\" are applied after those with lower order.  If the order is omitted, it may be considered to be \"infinite\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \"Name\".", "type": "number"}, "preDNAT": {"description": "PreDNAT indicates to apply the rules in this policy before any DNAT.", "type": "boolean"}, "selector": {"description": "The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \n Selector expressions follow this syntax: \n \tlabel == \"string_literal\"  ->  comparison, e.g. my_label == \"foo bar\" \tlabel != \"string_literal\"   ->  not equal; also matches if label is not present \tlabel in { \"a\", \"b\", \"c\", ... }  ->  true if the value of label X is one of \"a\", \"b\", \"c\" \tlabel not in { \"a\", \"b\", \"c\", ... }  ->  true if the value of label X is not one of \"a\", \"b\", \"c\" \thas(label_name)  -> True if that label is present \t! expr -> negation of expr \texpr && expr  -> Short-circuit and \texpr || expr  -> Short-circuit or \t( expr ) -> parens for grouping \tall() or the empty selector -> matches all endpoints. \n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \n Examples (with made-up labels): \n \ttype == \"webserver\" && deployment == \"prod\" \ttype in {\"frontend\", \"backend\"} \tdeployment != \"dev\" \t! has(label_name)", "type": "string"}, "serviceAccountSelector": {"description": "ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.", "type": "string"}, "types": {"description": "Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \n When the policy is read back again, Types will always be one of these values, never empty or nil.", "items": {"description": "PolicyType enumerates the possible values of the PolicySpec Types field.", "type": "string"}, "type": "array"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"globalnetworksets.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"GlobalNetworkSet\",\"listKind\":\"GlobalNetworkSetList\",\"plural\":\"globalnetworksets\",\"singular\":\"globalnetworkset\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs that share labels to allow rules to refer to them via selectors.  The labels of GlobalNetworkSet are not namespaced.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"GlobalNetworkSetSpec contains the specification for a NetworkSet resource.\",\"properties\":{\"nets\":{\"description\":\"The list of IP networks that belong to this set.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:27Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:27Z"}], "name": "globalnetworksets.crd.projectcalico.org", "resourceVersion": "2774", "uid": "4914a05b-a8f3-46ad-8603-aea2685c6c5f"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "GlobalNetworkSet", "listKind": "GlobalNetworkSetList", "plural": "globalnetworksets", "singular": "globalnetworkset"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"description": "GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs that share labels to allow rules to refer to them via selectors.  The labels of GlobalNetworkSet are not namespaced.", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "GlobalNetworkSetSpec contains the specification for a NetworkSet resource.", "properties": {"nets": {"description": "The list of IP networks that belong to this set.", "items": {"type": "string"}, "type": "array"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"hostendpoints.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"HostEndpoint\",\"listKind\":\"HostEndpointList\",\"plural\":\"hostendpoints\",\"singular\":\"hostendpoint\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"HostEndpointSpec contains the specification for a HostEndpoint resource.\",\"properties\":{\"expectedIPs\":{\"description\":\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"interfaceName\":{\"description\":\"Either \\\"*\\\", or the name of a specific Linux interface to apply policy to; or empty.  \\\"*\\\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \\\"Node\\\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads. \\n If InterfaceName is not \\\"*\\\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as \\\"eth0\\\") are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface. \\n Note: Only some kinds of policy are implemented for \\\"*\\\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.\",\"type\":\"string\"},\"node\":{\"description\":\"The node name identifying the Calico node instance.\",\"type\":\"string\"},\"ports\":{\"description\":\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\",\"items\":{\"properties\":{\"name\":{\"type\":\"string\"},\"port\":{\"type\":\"integer\"},\"protocol\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"name\",\"port\",\"protocol\"],\"type\":\"object\"},\"type\":\"array\"},\"profiles\":{\"description\":\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:27Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:27Z"}], "name": "hostendpoints.crd.projectcalico.org", "resourceVersion": "2777", "uid": "2be5247e-f3e6-4631-a2e2-5b9ac35331ee"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "HostEndpoint", "listKind": "HostEndpointList", "plural": "hostendpoints", "singular": "hostendpoint"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "HostEndpointSpec contains the specification for a HostEndpoint resource.", "properties": {"expectedIPs": {"description": "The expected IP addresses (IPv4 and IPv6) of the endpoint. If \"InterfaceName\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \tWhen using the selector match criteria in an ingress or egress security Policy \tor Profile, Calico converts the selector into a set of IP addresses. For host \tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \tname is specified, Calico does not learn the IPs of the interface for use in match \tcriteria.)", "items": {"type": "string"}, "type": "array"}, "interfaceName": {"description": "Either \"*\", or the name of a specific Linux interface to apply policy to; or empty.  \"*\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \"Node\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads. \n If InterfaceName is not \"*\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as \"eth0\") are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface. \n Note: Only some kinds of policy are implemented for \"*\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.", "type": "string"}, "node": {"description": "The node name identifying the Calico node instance.", "type": "string"}, "ports": {"description": "Ports contains the endpoint's named ports, which may be referenced in security policy rules.", "items": {"properties": {"name": {"type": "string"}, "port": {"type": "integer"}, "protocol": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}}, "required": ["name", "port", "protocol"], "type": "object"}, "type": "array"}, "profiles": {"description": "A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.", "items": {"type": "string"}, "type": "array"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"ipamblocks.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"IPAMBlock\",\"listKind\":\"IPAMBlockList\",\"plural\":\"ipamblocks\",\"singular\":\"ipamblock\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"IPAMBlockSpec contains the specification for an IPAMBlock resource.\",\"properties\":{\"affinity\":{\"type\":\"string\"},\"allocations\":{\"items\":{\"nullable\":true,\"type\":\"integer\"},\"type\":\"array\"},\"attributes\":{\"items\":{\"properties\":{\"handle_id\":{\"type\":\"string\"},\"secondary\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"}},\"type\":\"object\"},\"type\":\"array\"},\"cidr\":{\"type\":\"string\"},\"deleted\":{\"type\":\"boolean\"},\"strictAffinity\":{\"type\":\"boolean\"},\"unallocated\":{\"items\":{\"type\":\"integer\"},\"type\":\"array\"}},\"required\":[\"allocations\",\"attributes\",\"cidr\",\"strictAffinity\",\"unallocated\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:27Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:27Z"}], "name": "ipamblocks.crd.projectcalico.org", "resourceVersion": "2780", "uid": "e49cd71e-0827-4f0f-b9da-1d118eed2526"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "IPAMBlock", "listKind": "IPAMBlockList", "plural": "ipamblocks", "singular": "ipamblock"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "IPAMBlockSpec contains the specification for an IPAMBlock resource.", "properties": {"affinity": {"type": "string"}, "allocations": {"items": {"nullable": true, "type": "integer"}, "type": "array"}, "attributes": {"items": {"properties": {"handle_id": {"type": "string"}, "secondary": {"additionalProperties": {"type": "string"}, "type": "object"}}, "type": "object"}, "type": "array"}, "cidr": {"type": "string"}, "deleted": {"type": "boolean"}, "strictAffinity": {"type": "boolean"}, "unallocated": {"items": {"type": "integer"}, "type": "array"}}, "required": ["allocations", "attributes", "cidr", "strictAffinity", "unallocated"], "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"ipamconfigs.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"IPAMConfig\",\"listKind\":\"IPAMConfigList\",\"plural\":\"ipamconfigs\",\"singular\":\"ipamconfig\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"IPAMConfigSpec contains the specification for an IPAMConfig resource.\",\"properties\":{\"autoAllocateBlocks\":{\"type\":\"boolean\"},\"maxBlocksPerHost\":{\"description\":\"MaxBlocksPerHost, if non-zero, is the max number of blocks that can be affine to each host.\",\"type\":\"integer\"},\"strictAffinity\":{\"type\":\"boolean\"}},\"required\":[\"autoAllocateBlocks\",\"strictAffinity\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:27Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:27Z"}], "name": "ipamconfigs.crd.projectcalico.org", "resourceVersion": "2783", "uid": "5b5f2fe8-77fc-46c5-ae16-415d9883d96f"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "IPAMConfig", "listKind": "IPAMConfigList", "plural": "ipamconfigs", "singular": "ipamconfig"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "IPAMConfigSpec contains the specification for an IPAMConfig resource.", "properties": {"autoAllocateBlocks": {"type": "boolean"}, "maxBlocksPerHost": {"description": "MaxBlocksPerHost, if non-zero, is the max number of blocks that can be affine to each host.", "type": "integer"}, "strictAffinity": {"type": "boolean"}}, "required": ["autoAllocateBlocks", "strictAffinity"], "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"ipamhandles.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"IPAMHandle\",\"listKind\":\"IPAMHandleList\",\"plural\":\"ipamhandles\",\"singular\":\"ipamhandle\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"IPAMHandleSpec contains the specification for an IPAMHandle resource.\",\"properties\":{\"block\":{\"additionalProperties\":{\"type\":\"integer\"},\"type\":\"object\"},\"deleted\":{\"type\":\"boolean\"},\"handleID\":{\"type\":\"string\"}},\"required\":[\"block\",\"handleID\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:27Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:27Z"}], "name": "ipamhandles.crd.projectcalico.org", "resourceVersion": "2786", "uid": "3a47484a-d750-4155-ada8-dcee6ddee93a"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "IPAMHandle", "listKind": "IPAMHandleList", "plural": "ipamhandles", "singular": "ipamhandle"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "IPAMHandleSpec contains the specification for an IPAMHandle resource.", "properties": {"block": {"additionalProperties": {"type": "integer"}, "type": "object"}, "deleted": {"type": "boolean"}, "handleID": {"type": "string"}}, "required": ["block", "handleID"], "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"ippools.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"IPPool\",\"listKind\":\"IPPoolList\",\"plural\":\"ippools\",\"singular\":\"ippool\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"IPPoolSpec contains the specification for an IPPool resource.\",\"properties\":{\"allowedUses\":{\"description\":\"AllowedUse controls what the IP pool will be used for.  If not specified or empty, defaults to [\\\"Tunnel\\\", \\\"Workload\\\"] for back-compatibility\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"blockSize\":{\"description\":\"The block size to use for IP address assignments from this pool. Defaults to 26 for IPv4 and 112 for IPv6.\",\"type\":\"integer\"},\"cidr\":{\"description\":\"The pool CIDR.\",\"type\":\"string\"},\"disableBGPExport\":{\"description\":\"Disable exporting routes from this IP Pool\\u2019s CIDR over BGP. [Default: false]\",\"type\":\"boolean\"},\"disabled\":{\"description\":\"When disabled is true, Calico IPAM will not assign addresses from this pool.\",\"type\":\"boolean\"},\"ipip\":{\"description\":\"Deprecated: this field is only used for APIv1 backwards compatibility. Setting this field is not allowed, this field is for internal use only.\",\"properties\":{\"enabled\":{\"description\":\"When enabled is true, ipip tunneling will be used to deliver packets to destinations within this pool.\",\"type\":\"boolean\"},\"mode\":{\"description\":\"The IPIP mode.  This can be one of \\\"always\\\" or \\\"cross-subnet\\\".  A mode of \\\"always\\\" will also use IPIP tunneling for routing to destination IP addresses within this pool.  A mode of \\\"cross-subnet\\\" will only use IPIP tunneling when the destination node is on a different subnet to the originating node.  The default value (if not specified) is \\\"always\\\".\",\"type\":\"string\"}},\"type\":\"object\"},\"ipipMode\":{\"description\":\"Contains configuration for IPIP tunneling for this pool. If not specified, then this is defaulted to \\\"Never\\\" (i.e. IPIP tunneling is disabled).\",\"type\":\"string\"},\"nat-outgoing\":{\"description\":\"Deprecated: this field is only used for APIv1 backwards compatibility. Setting this field is not allowed, this field is for internal use only.\",\"type\":\"boolean\"},\"natOutgoing\":{\"description\":\"When nat-outgoing is true, packets sent from Calico networked containers in this pool to destinations outside of this pool will be masqueraded.\",\"type\":\"boolean\"},\"nodeSelector\":{\"description\":\"Allows IPPool to allocate for a specific node by label selector.\",\"type\":\"string\"},\"vxlanMode\":{\"description\":\"Contains configuration for VXLAN tunneling for this pool. If not specified, then this is defaulted to \\\"Never\\\" (i.e. VXLAN tunneling is disabled).\",\"type\":\"string\"}},\"required\":[\"cidr\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:27Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:27Z"}], "name": "ippools.crd.projectcalico.org", "resourceVersion": "2789", "uid": "b33450c8-a3e9-44fd-8f64-bb23238d4492"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "IPPool", "listKind": "IPPoolList", "plural": "ippools", "singular": "ippool"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "IPPoolSpec contains the specification for an IPPool resource.", "properties": {"allowedUses": {"description": "AllowedUse controls what the IP pool will be used for.  If not specified or empty, defaults to [\"Tunnel\", \"Workload\"] for back-compatibility", "items": {"type": "string"}, "type": "array"}, "blockSize": {"description": "The block size to use for IP address assignments from this pool. Defaults to 26 for IPv4 and 112 for IPv6.", "type": "integer"}, "cidr": {"description": "The pool CIDR.", "type": "string"}, "disableBGPExport": {"description": "Disable exporting routes from this IP Pool’s CIDR over BGP. [Default: false]", "type": "boolean"}, "disabled": {"description": "When disabled is true, Calico IPAM will not assign addresses from this pool.", "type": "boolean"}, "ipip": {"description": "Deprecated: this field is only used for APIv1 backwards compatibility. Setting this field is not allowed, this field is for internal use only.", "properties": {"enabled": {"description": "When enabled is true, ipip tunneling will be used to deliver packets to destinations within this pool.", "type": "boolean"}, "mode": {"description": "The IPIP mode.  This can be one of \"always\" or \"cross-subnet\".  A mode of \"always\" will also use IPIP tunneling for routing to destination IP addresses within this pool.  A mode of \"cross-subnet\" will only use IPIP tunneling when the destination node is on a different subnet to the originating node.  The default value (if not specified) is \"always\".", "type": "string"}}, "type": "object"}, "ipipMode": {"description": "Contains configuration for IPIP tunneling for this pool. If not specified, then this is defaulted to \"Never\" (i.e. IPIP tunneling is disabled).", "type": "string"}, "nat-outgoing": {"description": "Deprecated: this field is only used for APIv1 backwards compatibility. Setting this field is not allowed, this field is for internal use only.", "type": "boolean"}, "natOutgoing": {"description": "When nat-outgoing is true, packets sent from Calico networked containers in this pool to destinations outside of this pool will be masqueraded.", "type": "boolean"}, "nodeSelector": {"description": "Allows IPPool to allocate for a specific node by label selector.", "type": "string"}, "vxlanMode": {"description": "Contains configuration for VXLAN tunneling for this pool. If not specified, then this is defaulted to \"Never\" (i.e. VXLAN tunneling is disabled).", "type": "string"}}, "required": ["cidr"], "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"ipreservations.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"IPReservation\",\"listKind\":\"IPReservationList\",\"plural\":\"ipreservations\",\"singular\":\"ipreservation\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"IPReservationSpec contains the specification for an IPReservation resource.\",\"properties\":{\"reservedCIDRs\":{\"description\":\"ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "ipreservations.crd.projectcalico.org", "resourceVersion": "2792", "uid": "33b2bcc6-3e87-468c-82c9-e0d7e771d3c2"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "IPReservation", "listKind": "IPReservationList", "plural": "ipreservations", "singular": "ipreservation"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "IPReservationSpec contains the specification for an IPReservation resource.", "properties": {"reservedCIDRs": {"description": "ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.", "items": {"type": "string"}, "type": "array"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"kubecontrollersconfigurations.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"KubeControllersConfiguration\",\"listKind\":\"KubeControllersConfigurationList\",\"plural\":\"kubecontrollersconfigurations\",\"singular\":\"kubecontrollersconfiguration\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.\",\"properties\":{\"controllers\":{\"description\":\"Controllers enables and configures individual Kubernetes controllers\",\"properties\":{\"namespace\":{\"description\":\"Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.\",\"properties\":{\"reconcilerPeriod\":{\"description\":\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\",\"type\":\"string\"}},\"type\":\"object\"},\"node\":{\"description\":\"Node enables and configures the node controller. Enabled by default, set to nil to disable.\",\"properties\":{\"hostEndpoint\":{\"description\":\"HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.\",\"properties\":{\"autoCreate\":{\"description\":\"AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]\",\"type\":\"string\"}},\"type\":\"object\"},\"leakGracePeriod\":{\"description\":\"LeakGracePeriod is the period used by the controller to determine if an IP address has been leaked. Set to 0 to disable IP garbage collection. [Default: 15m]\",\"type\":\"string\"},\"reconcilerPeriod\":{\"description\":\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\",\"type\":\"string\"},\"syncLabels\":{\"description\":\"SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]\",\"type\":\"string\"}},\"type\":\"object\"},\"policy\":{\"description\":\"Policy enables and configures the policy controller. Enabled by default, set to nil to disable.\",\"properties\":{\"reconcilerPeriod\":{\"description\":\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\",\"type\":\"string\"}},\"type\":\"object\"},\"serviceAccount\":{\"description\":\"ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.\",\"properties\":{\"reconcilerPeriod\":{\"description\":\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\",\"type\":\"string\"}},\"type\":\"object\"},\"workloadEndpoint\":{\"description\":\"WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.\",\"properties\":{\"reconcilerPeriod\":{\"description\":\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"etcdV3CompactionPeriod\":{\"description\":\"EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]\",\"type\":\"string\"},\"healthChecks\":{\"description\":\"HealthChecks enables or disables support for health checks [Default: Enabled]\",\"type\":\"string\"},\"logSeverityScreen\":{\"description\":\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\",\"type\":\"string\"},\"prometheusMetricsPort\":{\"description\":\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]\",\"type\":\"integer\"}},\"required\":[\"controllers\"],\"type\":\"object\"},\"status\":{\"description\":\"KubeControllersConfigurationStatus represents the status of the configuration. It's useful for admins to be able to see the actual config that was applied, which can be modified by environment variables on the kube-controllers process.\",\"properties\":{\"environmentVars\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"EnvironmentVars contains the environment variables on the kube-controllers that influenced the RunningConfig.\",\"type\":\"object\"},\"runningConfig\":{\"description\":\"RunningConfig contains the effective config that is running in the kube-controllers pod, after merging the API resource with any environment variables.\",\"properties\":{\"controllers\":{\"description\":\"Controllers enables and configures individual Kubernetes controllers\",\"properties\":{\"namespace\":{\"description\":\"Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.\",\"properties\":{\"reconcilerPeriod\":{\"description\":\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\",\"type\":\"string\"}},\"type\":\"object\"},\"node\":{\"description\":\"Node enables and configures the node controller. Enabled by default, set to nil to disable.\",\"properties\":{\"hostEndpoint\":{\"description\":\"HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.\",\"properties\":{\"autoCreate\":{\"description\":\"AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]\",\"type\":\"string\"}},\"type\":\"object\"},\"leakGracePeriod\":{\"description\":\"LeakGracePeriod is the period used by the controller to determine if an IP address has been leaked. Set to 0 to disable IP garbage collection. [Default: 15m]\",\"type\":\"string\"},\"reconcilerPeriod\":{\"description\":\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\",\"type\":\"string\"},\"syncLabels\":{\"description\":\"SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]\",\"type\":\"string\"}},\"type\":\"object\"},\"policy\":{\"description\":\"Policy enables and configures the policy controller. Enabled by default, set to nil to disable.\",\"properties\":{\"reconcilerPeriod\":{\"description\":\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\",\"type\":\"string\"}},\"type\":\"object\"},\"serviceAccount\":{\"description\":\"ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.\",\"properties\":{\"reconcilerPeriod\":{\"description\":\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\",\"type\":\"string\"}},\"type\":\"object\"},\"workloadEndpoint\":{\"description\":\"WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.\",\"properties\":{\"reconcilerPeriod\":{\"description\":\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"etcdV3CompactionPeriod\":{\"description\":\"EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]\",\"type\":\"string\"},\"healthChecks\":{\"description\":\"HealthChecks enables or disables support for health checks [Default: Enabled]\",\"type\":\"string\"},\"logSeverityScreen\":{\"description\":\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\",\"type\":\"string\"},\"prometheusMetricsPort\":{\"description\":\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]\",\"type\":\"integer\"}},\"required\":[\"controllers\"],\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "kubecontrollersconfigurations.crd.projectcalico.org", "resourceVersion": "2795", "uid": "54cfed0f-fc65-4a56-a484-d1a0dbc1f2d5"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "KubeControllersConfiguration", "listKind": "KubeControllersConfigurationList", "plural": "kubecontrollersconfigurations", "singular": "kubecontrollersconfiguration"}, "scope": "Cluster", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.", "properties": {"controllers": {"description": "Controllers enables and configures individual Kubernetes controllers", "properties": {"namespace": {"description": "Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.", "properties": {"reconcilerPeriod": {"description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]", "type": "string"}}, "type": "object"}, "node": {"description": "Node enables and configures the node controller. Enabled by default, set to nil to disable.", "properties": {"hostEndpoint": {"description": "HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.", "properties": {"autoCreate": {"description": "AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]", "type": "string"}}, "type": "object"}, "leakGracePeriod": {"description": "LeakGracePeriod is the period used by the controller to determine if an IP address has been leaked. Set to 0 to disable IP garbage collection. [Default: 15m]", "type": "string"}, "reconcilerPeriod": {"description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]", "type": "string"}, "syncLabels": {"description": "SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]", "type": "string"}}, "type": "object"}, "policy": {"description": "Policy enables and configures the policy controller. Enabled by default, set to nil to disable.", "properties": {"reconcilerPeriod": {"description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]", "type": "string"}}, "type": "object"}, "serviceAccount": {"description": "ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.", "properties": {"reconcilerPeriod": {"description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]", "type": "string"}}, "type": "object"}, "workloadEndpoint": {"description": "WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.", "properties": {"reconcilerPeriod": {"description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]", "type": "string"}}, "type": "object"}}, "type": "object"}, "etcdV3CompactionPeriod": {"description": "EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]", "type": "string"}, "healthChecks": {"description": "HealthChecks enables or disables support for health checks [Default: Enabled]", "type": "string"}, "logSeverityScreen": {"description": "LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]", "type": "string"}, "prometheusMetricsPort": {"description": "PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]", "type": "integer"}}, "required": ["controllers"], "type": "object"}, "status": {"description": "KubeControllersConfigurationStatus represents the status of the configuration. It's useful for admins to be able to see the actual config that was applied, which can be modified by environment variables on the kube-controllers process.", "properties": {"environmentVars": {"additionalProperties": {"type": "string"}, "description": "EnvironmentVars contains the environment variables on the kube-controllers that influenced the RunningConfig.", "type": "object"}, "runningConfig": {"description": "RunningConfig contains the effective config that is running in the kube-controllers pod, after merging the API resource with any environment variables.", "properties": {"controllers": {"description": "Controllers enables and configures individual Kubernetes controllers", "properties": {"namespace": {"description": "Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.", "properties": {"reconcilerPeriod": {"description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]", "type": "string"}}, "type": "object"}, "node": {"description": "Node enables and configures the node controller. Enabled by default, set to nil to disable.", "properties": {"hostEndpoint": {"description": "HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.", "properties": {"autoCreate": {"description": "AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]", "type": "string"}}, "type": "object"}, "leakGracePeriod": {"description": "LeakGracePeriod is the period used by the controller to determine if an IP address has been leaked. Set to 0 to disable IP garbage collection. [Default: 15m]", "type": "string"}, "reconcilerPeriod": {"description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]", "type": "string"}, "syncLabels": {"description": "SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]", "type": "string"}}, "type": "object"}, "policy": {"description": "Policy enables and configures the policy controller. Enabled by default, set to nil to disable.", "properties": {"reconcilerPeriod": {"description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]", "type": "string"}}, "type": "object"}, "serviceAccount": {"description": "ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.", "properties": {"reconcilerPeriod": {"description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]", "type": "string"}}, "type": "object"}, "workloadEndpoint": {"description": "WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.", "properties": {"reconcilerPeriod": {"description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]", "type": "string"}}, "type": "object"}}, "type": "object"}, "etcdV3CompactionPeriod": {"description": "EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]", "type": "string"}, "healthChecks": {"description": "HealthChecks enables or disables support for health checks [Default: Enabled]", "type": "string"}, "logSeverityScreen": {"description": "LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]", "type": "string"}, "prometheusMetricsPort": {"description": "PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]", "type": "integer"}}, "required": ["controllers"], "type": "object"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"networkpolicies.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"NetworkPolicy\",\"listKind\":\"NetworkPolicyList\",\"plural\":\"networkpolicies\",\"singular\":\"networkpolicy\"},\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"properties\":{\"egress\":{\"description\":\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\",\"items\":{\"description\":\"A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching. \\n Each positive match criteria has a negated version, prefixed with \\\"Not\\\". All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.\",\"properties\":{\"action\":{\"type\":\"string\"},\"destination\":{\"description\":\"Destination contains the match criteria that apply to destination entity.\",\"properties\":{\"namespaceSelector\":{\"description\":\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\",\"type\":\"string\"},\"nets\":{\"description\":\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notNets\":{\"description\":\"NotNets is the negated version of the Nets field.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notPorts\":{\"description\":\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"notSelector\":{\"description\":\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\",\"type\":\"string\"},\"ports\":{\"description\":\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\",\"type\":\"string\"},\"serviceAccounts\":{\"description\":\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\",\"properties\":{\"names\":{\"description\":\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\",\"type\":\"string\"}},\"type\":\"object\"},\"services\":{\"description\":\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\",\"properties\":{\"name\":{\"description\":\"Name specifies the name of a Kubernetes Service to match.\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"http\":{\"description\":\"HTTP contains match criteria that apply to HTTP requests.\",\"properties\":{\"methods\":{\"description\":\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"paths\":{\"description\":\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.\",\"items\":{\"description\":\"HTTPPath specifies an HTTP path to match. It may be either of the form: exact: <path>: which matches the path exactly or prefix: <path-prefix>: which matches the path prefix\",\"properties\":{\"exact\":{\"type\":\"string\"},\"prefix\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"icmp\":{\"description\":\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\",\"properties\":{\"code\":{\"description\":\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\",\"type\":\"integer\"},\"type\":{\"description\":\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\",\"type\":\"integer\"}},\"type\":\"object\"},\"ipVersion\":{\"description\":\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\",\"type\":\"integer\"},\"metadata\":{\"description\":\"Metadata contains additional information for this rule\",\"properties\":{\"annotations\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Annotations is a set of key value pairs that give extra information about the rule\",\"type\":\"object\"}},\"type\":\"object\"},\"notICMP\":{\"description\":\"NotICMP is the negated version of the ICMP field.\",\"properties\":{\"code\":{\"description\":\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\",\"type\":\"integer\"},\"type\":{\"description\":\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\",\"type\":\"integer\"}},\"type\":\"object\"},\"notProtocol\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"NotProtocol is the negated version of the Protocol field.\",\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"protocol\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\",\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"source\":{\"description\":\"Source contains the match criteria that apply to source entity.\",\"properties\":{\"namespaceSelector\":{\"description\":\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\",\"type\":\"string\"},\"nets\":{\"description\":\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notNets\":{\"description\":\"NotNets is the negated version of the Nets field.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notPorts\":{\"description\":\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"notSelector\":{\"description\":\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\",\"type\":\"string\"},\"ports\":{\"description\":\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\",\"type\":\"string\"},\"serviceAccounts\":{\"description\":\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\",\"properties\":{\"names\":{\"description\":\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\",\"type\":\"string\"}},\"type\":\"object\"},\"services\":{\"description\":\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\",\"properties\":{\"name\":{\"description\":\"Name specifies the name of a Kubernetes Service to match.\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"required\":[\"action\"],\"type\":\"object\"},\"type\":\"array\"},\"ingress\":{\"description\":\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\",\"items\":{\"description\":\"A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching. \\n Each positive match criteria has a negated version, prefixed with \\\"Not\\\". All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.\",\"properties\":{\"action\":{\"type\":\"string\"},\"destination\":{\"description\":\"Destination contains the match criteria that apply to destination entity.\",\"properties\":{\"namespaceSelector\":{\"description\":\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\",\"type\":\"string\"},\"nets\":{\"description\":\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notNets\":{\"description\":\"NotNets is the negated version of the Nets field.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notPorts\":{\"description\":\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"notSelector\":{\"description\":\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\",\"type\":\"string\"},\"ports\":{\"description\":\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\",\"type\":\"string\"},\"serviceAccounts\":{\"description\":\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\",\"properties\":{\"names\":{\"description\":\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\",\"type\":\"string\"}},\"type\":\"object\"},\"services\":{\"description\":\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\",\"properties\":{\"name\":{\"description\":\"Name specifies the name of a Kubernetes Service to match.\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"http\":{\"description\":\"HTTP contains match criteria that apply to HTTP requests.\",\"properties\":{\"methods\":{\"description\":\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"paths\":{\"description\":\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.\",\"items\":{\"description\":\"HTTPPath specifies an HTTP path to match. It may be either of the form: exact: <path>: which matches the path exactly or prefix: <path-prefix>: which matches the path prefix\",\"properties\":{\"exact\":{\"type\":\"string\"},\"prefix\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"icmp\":{\"description\":\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\",\"properties\":{\"code\":{\"description\":\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\",\"type\":\"integer\"},\"type\":{\"description\":\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\",\"type\":\"integer\"}},\"type\":\"object\"},\"ipVersion\":{\"description\":\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\",\"type\":\"integer\"},\"metadata\":{\"description\":\"Metadata contains additional information for this rule\",\"properties\":{\"annotations\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Annotations is a set of key value pairs that give extra information about the rule\",\"type\":\"object\"}},\"type\":\"object\"},\"notICMP\":{\"description\":\"NotICMP is the negated version of the ICMP field.\",\"properties\":{\"code\":{\"description\":\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\",\"type\":\"integer\"},\"type\":{\"description\":\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\",\"type\":\"integer\"}},\"type\":\"object\"},\"notProtocol\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"NotProtocol is the negated version of the Protocol field.\",\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"protocol\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\",\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"source\":{\"description\":\"Source contains the match criteria that apply to source entity.\",\"properties\":{\"namespaceSelector\":{\"description\":\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\",\"type\":\"string\"},\"nets\":{\"description\":\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notNets\":{\"description\":\"NotNets is the negated version of the Nets field.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"notPorts\":{\"description\":\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"notSelector\":{\"description\":\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\",\"type\":\"string\"},\"ports\":{\"description\":\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\",\"items\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^.*\",\"x-kubernetes-int-or-string\":true},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\",\"type\":\"string\"},\"serviceAccounts\":{\"description\":\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\",\"properties\":{\"names\":{\"description\":\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"selector\":{\"description\":\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\",\"type\":\"string\"}},\"type\":\"object\"},\"services\":{\"description\":\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\",\"properties\":{\"name\":{\"description\":\"Name specifies the name of a Kubernetes Service to match.\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"required\":[\"action\"],\"type\":\"object\"},\"type\":\"array\"},\"order\":{\"description\":\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\",\"type\":\"number\"},\"selector\":{\"description\":\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  ->  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   ->  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  ->  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  ->  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -> True if that label is present \\t! expr -> negation of expr \\texpr && expr  -> Short-circuit and \\texpr || expr  -> Short-circuit or \\t( expr ) -> parens for grouping \\tall() or the empty selector -> matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" && deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\",\"type\":\"string\"},\"serviceAccountSelector\":{\"description\":\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\",\"type\":\"string\"},\"types\":{\"description\":\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\",\"items\":{\"description\":\"PolicyType enumerates the possible values of the PolicySpec Types field.\",\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "networkpolicies.crd.projectcalico.org", "resourceVersion": "2800", "uid": "c349243b-cd72-449f-897e-1b940f01cba6"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "NetworkPolicy", "listKind": "NetworkPolicyList", "plural": "networkpolicies", "singular": "networkpolicy"}, "scope": "Namespaced", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"properties": {"egress": {"description": "The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.", "items": {"description": "A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching. \n Each positive match criteria has a negated version, prefixed with \"Not\". All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.", "properties": {"action": {"type": "string"}, "destination": {"description": "Destination contains the match criteria that apply to destination entity.", "properties": {"namespaceSelector": {"description": "NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.", "type": "string"}, "nets": {"description": "Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.", "items": {"type": "string"}, "type": "array"}, "notNets": {"description": "NotNets is the negated version of the Nets field.", "items": {"type": "string"}, "type": "array"}, "notPorts": {"description": "NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "notSelector": {"description": "NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.", "type": "string"}, "ports": {"description": "Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "selector": {"description": "Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \n \tSelector = \"!has(my_label)\" matches packets that are from other Calico-controlled \tendpoints that do not have the label \"my_label\". \n \tNotSelector = \"has(my_label)\" matches packets that are not from Calico-controlled \tendpoints that do have the label \"my_label\". \n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.", "type": "string"}, "serviceAccounts": {"description": "ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.", "properties": {"names": {"description": "Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.", "items": {"type": "string"}, "type": "array"}, "selector": {"description": "Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.", "type": "string"}}, "type": "object"}, "services": {"description": "Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \n Ports and NotPorts can only be specified with Services on ingress rules.", "properties": {"name": {"description": "Name specifies the name of a Kubernetes Service to match.", "type": "string"}, "namespace": {"description": "Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.", "type": "string"}}, "type": "object"}}, "type": "object"}, "http": {"description": "HTTP contains match criteria that apply to HTTP requests.", "properties": {"methods": {"description": "Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.", "items": {"type": "string"}, "type": "array"}, "paths": {"description": "Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.", "items": {"description": "HTTPPath specifies an HTTP path to match. It may be either of the form: exact: <path>: which matches the path exactly or prefix: <path-prefix>: which matches the path prefix", "properties": {"exact": {"type": "string"}, "prefix": {"type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "icmp": {"description": "ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \"ICMP\" or \"ICMPv6\".", "properties": {"code": {"description": "Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.", "type": "integer"}, "type": {"description": "Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).", "type": "integer"}}, "type": "object"}, "ipVersion": {"description": "IPVersion is an optional field that restricts the rule to only match a specific IP version.", "type": "integer"}, "metadata": {"description": "Metadata contains additional information for this rule", "properties": {"annotations": {"additionalProperties": {"type": "string"}, "description": "Annotations is a set of key value pairs that give extra information about the rule", "type": "object"}}, "type": "object"}, "notICMP": {"description": "NotICMP is the negated version of the ICMP field.", "properties": {"code": {"description": "Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.", "type": "integer"}, "type": {"description": "Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).", "type": "integer"}}, "type": "object"}, "notProtocol": {"anyOf": [{"type": "integer"}, {"type": "string"}], "description": "NotProtocol is the negated version of the Protocol field.", "pattern": "^.*", "x-kubernetes-int-or-string": true}, "protocol": {"anyOf": [{"type": "integer"}, {"type": "string"}], "description": "Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \n Must be one of these string values: \"TCP\", \"UDP\", \"ICMP\", \"ICMPv6\", \"SCTP\", \"UDPLite\" or an integer in the range 1-255.", "pattern": "^.*", "x-kubernetes-int-or-string": true}, "source": {"description": "Source contains the match criteria that apply to source entity.", "properties": {"namespaceSelector": {"description": "NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.", "type": "string"}, "nets": {"description": "Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.", "items": {"type": "string"}, "type": "array"}, "notNets": {"description": "NotNets is the negated version of the Nets field.", "items": {"type": "string"}, "type": "array"}, "notPorts": {"description": "NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "notSelector": {"description": "NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.", "type": "string"}, "ports": {"description": "Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "selector": {"description": "Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \n \tSelector = \"!has(my_label)\" matches packets that are from other Calico-controlled \tendpoints that do not have the label \"my_label\". \n \tNotSelector = \"has(my_label)\" matches packets that are not from Calico-controlled \tendpoints that do have the label \"my_label\". \n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.", "type": "string"}, "serviceAccounts": {"description": "ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.", "properties": {"names": {"description": "Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.", "items": {"type": "string"}, "type": "array"}, "selector": {"description": "Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.", "type": "string"}}, "type": "object"}, "services": {"description": "Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \n Ports and NotPorts can only be specified with Services on ingress rules.", "properties": {"name": {"description": "Name specifies the name of a Kubernetes Service to match.", "type": "string"}, "namespace": {"description": "Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.", "type": "string"}}, "type": "object"}}, "type": "object"}}, "required": ["action"], "type": "object"}, "type": "array"}, "ingress": {"description": "The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.", "items": {"description": "A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching. \n Each positive match criteria has a negated version, prefixed with \"Not\". All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.", "properties": {"action": {"type": "string"}, "destination": {"description": "Destination contains the match criteria that apply to destination entity.", "properties": {"namespaceSelector": {"description": "NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.", "type": "string"}, "nets": {"description": "Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.", "items": {"type": "string"}, "type": "array"}, "notNets": {"description": "NotNets is the negated version of the Nets field.", "items": {"type": "string"}, "type": "array"}, "notPorts": {"description": "NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "notSelector": {"description": "NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.", "type": "string"}, "ports": {"description": "Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "selector": {"description": "Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \n \tSelector = \"!has(my_label)\" matches packets that are from other Calico-controlled \tendpoints that do not have the label \"my_label\". \n \tNotSelector = \"has(my_label)\" matches packets that are not from Calico-controlled \tendpoints that do have the label \"my_label\". \n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.", "type": "string"}, "serviceAccounts": {"description": "ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.", "properties": {"names": {"description": "Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.", "items": {"type": "string"}, "type": "array"}, "selector": {"description": "Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.", "type": "string"}}, "type": "object"}, "services": {"description": "Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \n Ports and NotPorts can only be specified with Services on ingress rules.", "properties": {"name": {"description": "Name specifies the name of a Kubernetes Service to match.", "type": "string"}, "namespace": {"description": "Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.", "type": "string"}}, "type": "object"}}, "type": "object"}, "http": {"description": "HTTP contains match criteria that apply to HTTP requests.", "properties": {"methods": {"description": "Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.", "items": {"type": "string"}, "type": "array"}, "paths": {"description": "Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.", "items": {"description": "HTTPPath specifies an HTTP path to match. It may be either of the form: exact: <path>: which matches the path exactly or prefix: <path-prefix>: which matches the path prefix", "properties": {"exact": {"type": "string"}, "prefix": {"type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "icmp": {"description": "ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \"ICMP\" or \"ICMPv6\".", "properties": {"code": {"description": "Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.", "type": "integer"}, "type": {"description": "Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).", "type": "integer"}}, "type": "object"}, "ipVersion": {"description": "IPVersion is an optional field that restricts the rule to only match a specific IP version.", "type": "integer"}, "metadata": {"description": "Metadata contains additional information for this rule", "properties": {"annotations": {"additionalProperties": {"type": "string"}, "description": "Annotations is a set of key value pairs that give extra information about the rule", "type": "object"}}, "type": "object"}, "notICMP": {"description": "NotICMP is the negated version of the ICMP field.", "properties": {"code": {"description": "Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.", "type": "integer"}, "type": {"description": "Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).", "type": "integer"}}, "type": "object"}, "notProtocol": {"anyOf": [{"type": "integer"}, {"type": "string"}], "description": "NotProtocol is the negated version of the Protocol field.", "pattern": "^.*", "x-kubernetes-int-or-string": true}, "protocol": {"anyOf": [{"type": "integer"}, {"type": "string"}], "description": "Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \n Must be one of these string values: \"TCP\", \"UDP\", \"ICMP\", \"ICMPv6\", \"SCTP\", \"UDPLite\" or an integer in the range 1-255.", "pattern": "^.*", "x-kubernetes-int-or-string": true}, "source": {"description": "Source contains the match criteria that apply to source entity.", "properties": {"namespaceSelector": {"description": "NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \n For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.", "type": "string"}, "nets": {"description": "Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.", "items": {"type": "string"}, "type": "array"}, "notNets": {"description": "NotNets is the negated version of the Nets field.", "items": {"type": "string"}, "type": "array"}, "notPorts": {"description": "NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "notSelector": {"description": "NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.", "type": "string"}, "ports": {"description": "Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".", "items": {"anyOf": [{"type": "integer"}, {"type": "string"}], "pattern": "^.*", "x-kubernetes-int-or-string": true}, "type": "array"}, "selector": {"description": "Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \n \tSelector = \"!has(my_label)\" matches packets that are from other Calico-controlled \tendpoints that do not have the label \"my_label\". \n \tNotSelector = \"has(my_label)\" matches packets that are not from Calico-controlled \tendpoints that do have the label \"my_label\". \n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.", "type": "string"}, "serviceAccounts": {"description": "ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.", "properties": {"names": {"description": "Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.", "items": {"type": "string"}, "type": "array"}, "selector": {"description": "Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.", "type": "string"}}, "type": "object"}, "services": {"description": "Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \n Ports and NotPorts can only be specified with Services on ingress rules.", "properties": {"name": {"description": "Name specifies the name of a Kubernetes Service to match.", "type": "string"}, "namespace": {"description": "Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.", "type": "string"}}, "type": "object"}}, "type": "object"}}, "required": ["action"], "type": "object"}, "type": "array"}, "order": {"description": "Order is an optional field that specifies the order in which the policy is applied. Policies with higher \"order\" are applied after those with lower order.  If the order is omitted, it may be considered to be \"infinite\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \"Name\".", "type": "number"}, "selector": {"description": "The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \n Selector expressions follow this syntax: \n \tlabel == \"string_literal\"  ->  comparison, e.g. my_label == \"foo bar\" \tlabel != \"string_literal\"   ->  not equal; also matches if label is not present \tlabel in { \"a\", \"b\", \"c\", ... }  ->  true if the value of label X is one of \"a\", \"b\", \"c\" \tlabel not in { \"a\", \"b\", \"c\", ... }  ->  true if the value of label X is not one of \"a\", \"b\", \"c\" \thas(label_name)  -> True if that label is present \t! expr -> negation of expr \texpr && expr  -> Short-circuit and \texpr || expr  -> Short-circuit or \t( expr ) -> parens for grouping \tall() or the empty selector -> matches all endpoints. \n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \n Examples (with made-up labels): \n \ttype == \"webserver\" && deployment == \"prod\" \ttype in {\"frontend\", \"backend\"} \tdeployment != \"dev\" \t! has(label_name)", "type": "string"}, "serviceAccountSelector": {"description": "ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.", "type": "string"}, "types": {"description": "Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \n When the policy is read back again, Types will always be one of these values, never empty or nil.", "items": {"description": "PolicyType enumerates the possible values of the PolicySpec Types field.", "type": "string"}, "type": "array"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apiextensions.k8s.io/v1", "kind": "CustomResourceDefinition", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"networksets.crd.projectcalico.org\"},\"spec\":{\"group\":\"crd.projectcalico.org\",\"names\":{\"kind\":\"NetworkSet\",\"listKind\":\"NetworkSetList\",\"plural\":\"networksets\",\"singular\":\"networkset\"},\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"NetworkSetSpec contains the specification for a NetworkSet resource.\",\"properties\":{\"nets\":{\"description\":\"The list of IP networks that belong to this set.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "generation": 1, "managedFields": [{"apiVersion": "apiextensions.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:conversion": {".": {}, "f:strategy": {}}, "f:group": {}, "f:names": {"f:kind": {}, "f:listKind": {}, "f:plural": {}, "f:singular": {}}, "f:scope": {}, "f:versions": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "networksets.crd.projectcalico.org", "resourceVersion": "2803", "uid": "9e2a3005-ce30-49d6-a149-6f4982e008a3"}, "spec": {"conversion": {"strategy": "None"}, "group": "crd.projectcalico.org", "names": {"kind": "NetworkSet", "listKind": "NetworkSetList", "plural": "networksets", "singular": "networkset"}, "scope": "Namespaced", "versions": [{"name": "v1", "schema": {"openAPIV3Schema": {"description": "NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object"}, "spec": {"description": "NetworkSetSpec contains the specification for a NetworkSet resource.", "properties": {"nets": {"description": "The list of IP networks that belong to this set.", "items": {"type": "string"}, "type": "array"}}, "type": "object"}}, "type": "object"}}, "served": true, "storage": true}]}, "status": {"acceptedNames": {"kind": "", "plural": ""}, "conditions": null, "storedVersions": ["v1"]}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "rbac.authorization.k8s.io/v1", "kind": "ClusterRole", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"name\":\"calico-kube-controllers\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"watch\",\"list\",\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"ippools\",\"ipreservations\"],\"verbs\":[\"list\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"blockaffinities\",\"ipamblocks\",\"ipamhandles\"],\"verbs\":[\"get\",\"list\",\"create\",\"update\",\"delete\",\"watch\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"hostendpoints\"],\"verbs\":[\"get\",\"list\",\"create\",\"update\",\"delete\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"clusterinformations\"],\"verbs\":[\"get\",\"create\",\"update\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"kubecontrollersconfigurations\"],\"verbs\":[\"get\",\"create\",\"update\",\"watch\"]}]}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "managedFields": [{"apiVersion": "rbac.authorization.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:rules": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "calico-kube-controllers", "resourceVersion": "2806", "uid": "3dc5679c-70d4-4b9c-9f4a-7daf0f97aac3"}, "rules": [{"apiGroups": [""], "resources": ["nodes"], "verbs": ["watch", "list", "get"]}, {"apiGroups": [""], "resources": ["pods"], "verbs": ["get", "list", "watch"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["ippools", "ipreservations"], "verbs": ["list"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["blockaffinities", "ipamblocks", "ipamhandles"], "verbs": ["get", "list", "create", "update", "delete", "watch"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["hostendpoints"], "verbs": ["get", "list", "create", "update", "delete"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["clusterinformations"], "verbs": ["get", "create", "update"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["kubecontrollersconfigurations"], "verbs": ["get", "create", "update", "watch"]}]}}, {"changed": true, "method": "apply", "result": {"apiVersion": "rbac.authorization.k8s.io/v1", "kind": "ClusterRoleBinding", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"name\":\"calico-kube-controllers\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"calico-kube-controllers\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"calico-kube-controllers\",\"namespace\":\"kube-system\"}]}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "managedFields": [{"apiVersion": "rbac.authorization.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:roleRef": {"f:apiGroup": {}, "f:kind": {}, "f:name": {}}, "f:subjects": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "calico-kube-controllers", "resourceVersion": "2807", "uid": "91a55ded-7b94-4a63-95d7-2a3936767388"}, "roleRef": {"apiGroup": "rbac.authorization.k8s.io", "kind": "ClusterRole", "name": "calico-kube-controllers"}, "subjects": [{"kind": "ServiceAccount", "name": "calico-kube-controllers", "namespace": "kube-system"}]}}, {"changed": true, "method": "apply", "result": {"apiVersion": "rbac.authorization.k8s.io/v1", "kind": "ClusterRole", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"name\":\"calico-node\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"nodes\",\"namespaces\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"discovery.k8s.io\"],\"resources\":[\"endpointslices\"],\"verbs\":[\"watch\",\"list\"]},{\"apiGroups\":[\"\"],\"resources\":[\"endpoints\",\"services\"],\"verbs\":[\"watch\",\"list\",\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes/status\"],\"verbs\":[\"patch\",\"update\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"networkpolicies\"],\"verbs\":[\"watch\",\"list\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"namespaces\",\"serviceaccounts\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods/status\"],\"verbs\":[\"patch\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"globalfelixconfigs\",\"felixconfigurations\",\"bgppeers\",\"globalbgpconfigs\",\"bgpconfigurations\",\"ippools\",\"ipreservations\",\"ipamblocks\",\"globalnetworkpolicies\",\"globalnetworksets\",\"networkpolicies\",\"networksets\",\"clusterinformations\",\"hostendpoints\",\"blockaffinities\",\"caliconodestatuses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"ippools\",\"felixconfigurations\",\"clusterinformations\"],\"verbs\":[\"create\",\"update\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"caliconodestatuses\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"bgpconfigurations\",\"bgppeers\"],\"verbs\":[\"create\",\"update\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"blockaffinities\",\"ipamblocks\",\"ipamhandles\"],\"verbs\":[\"get\",\"list\",\"create\",\"update\",\"delete\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"ipamconfigs\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"crd.projectcalico.org\"],\"resources\":[\"blockaffinities\"],\"verbs\":[\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"daemonsets\"],\"verbs\":[\"get\"]}]}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "managedFields": [{"apiVersion": "rbac.authorization.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:rules": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "calico-node", "resourceVersion": "2808", "uid": "856cdbe5-100c-485c-b535-5e77f13c8eb7"}, "rules": [{"apiGroups": [""], "resources": ["pods", "nodes", "namespaces"], "verbs": ["get"]}, {"apiGroups": ["discovery.k8s.io"], "resources": ["endpointslices"], "verbs": ["watch", "list"]}, {"apiGroups": [""], "resources": ["endpoints", "services"], "verbs": ["watch", "list", "get"]}, {"apiGroups": [""], "resources": ["configmaps"], "verbs": ["get"]}, {"apiGroups": [""], "resources": ["nodes/status"], "verbs": ["patch", "update"]}, {"apiGroups": ["networking.k8s.io"], "resources": ["networkpolicies"], "verbs": ["watch", "list"]}, {"apiGroups": [""], "resources": ["pods", "namespaces", "serviceaccounts"], "verbs": ["list", "watch"]}, {"apiGroups": [""], "resources": ["pods/status"], "verbs": ["patch"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["globalfelixconfigs", "felixconfigurations", "bgppeers", "globalbgpconfigs", "bgpconfigurations", "ippools", "ipreservations", "ipamblocks", "globalnetworkpolicies", "globalnetworksets", "networkpolicies", "networksets", "clusterinformations", "hostendpoints", "blockaffinities", "caliconodestatuses"], "verbs": ["get", "list", "watch"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["ippools", "felixconfigurations", "clusterinformations"], "verbs": ["create", "update"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["caliconodestatuses"], "verbs": ["update"]}, {"apiGroups": [""], "resources": ["nodes"], "verbs": ["get", "list", "watch"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["bgpconfigurations", "bgppeers"], "verbs": ["create", "update"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["blockaffinities", "ipamblocks", "ipamhandles"], "verbs": ["get", "list", "create", "update", "delete"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["ipamconfigs"], "verbs": ["get"]}, {"apiGroups": ["crd.projectcalico.org"], "resources": ["blockaffinities"], "verbs": ["watch"]}, {"apiGroups": ["apps"], "resources": ["daemonsets"], "verbs": ["get"]}]}}, {"changed": true, "method": "apply", "result": {"apiVersion": "rbac.authorization.k8s.io/v1", "kind": "ClusterRoleBinding", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"name\":\"calico-node\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"calico-node\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"calico-node\",\"namespace\":\"kube-system\"}]}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "managedFields": [{"apiVersion": "rbac.authorization.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:roleRef": {"f:apiGroup": {}, "f:kind": {}, "f:name": {}}, "f:subjects": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "calico-node", "resourceVersion": "2809", "uid": "c747a8c7-e913-4e2c-90b4-afbbed55ff51"}, "roleRef": {"apiGroup": "rbac.authorization.k8s.io", "kind": "ClusterRole", "name": "calico-node"}, "subjects": [{"kind": "ServiceAccount", "name": "calico-node", "namespace": "kube-system"}]}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apps/v1", "kind": "DaemonSet", "metadata": {"annotations": {"deprecated.daemonset.template.generation": "1", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"labels\":{\"k8s-app\":\"calico-node\"},\"name\":\"calico-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"calico-node\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"calico-node\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"DATASTORE_TYPE\",\"value\":\"kubernetes\"},{\"name\":\"WAIT_FOR_DATASTORE\",\"value\":\"true\"},{\"name\":\"NODENAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CALICO_NETWORKING_BACKEND\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"calico_backend\",\"name\":\"calico-config\"}}},{\"name\":\"CLUSTER_TYPE\",\"value\":\"k8s,bgp\"},{\"name\":\"IP\",\"value\":\"autodetect\"},{\"name\":\"CALICO_IPV4POOL_IPIP\",\"value\":\"Always\"},{\"name\":\"CALICO_IPV4POOL_VXLAN\",\"value\":\"Never\"},{\"name\":\"FELIX_IPINIPMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"FELIX_VXLANMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"FELIX_WIREGUARDMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"IP_AUTODETECTION_METHOD\",\"value\":\"cidr=192.168.111.1/24\"},{\"name\":\"CALICO_DISABLE_FILE_LOGGING\",\"value\":\"true\"},{\"name\":\"FELIX_DEFAULTENDPOINTTOHOSTACTION\",\"value\":\"ACCEPT\"},{\"name\":\"FELIX_IPV6SUPPORT\",\"value\":\"false\"},{\"name\":\"FELIX_HEALTHENABLED\",\"value\":\"true\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/node:v3.21.0\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-shutdown\"]}}},\"livenessProbe\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-felix-live\",\"-bird-live\"]},\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":10},\"name\":\"calico-node\",\"readinessProbe\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-felix-ready\",\"-bird-ready\"]},\"periodSeconds\":10,\"timeoutSeconds\":10},\"resources\":{\"requests\":{\"cpu\":\"250m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\",\"readOnly\":false},{\"mountPath\":\"/lib/modules\",\"name\":\"lib-modules\",\"readOnly\":true},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\",\"readOnly\":false},{\"mountPath\":\"/var/run/calico\",\"name\":\"var-run-calico\",\"readOnly\":false},{\"mountPath\":\"/var/lib/calico\",\"name\":\"var-lib-calico\",\"readOnly\":false},{\"mountPath\":\"/var/run/nodeagent\",\"name\":\"policysync\"},{\"mountPath\":\"/sys/fs/\",\"mountPropagation\":\"Bidirectional\",\"name\":\"sysfs\"},{\"mountPath\":\"/var/log/calico/cni\",\"name\":\"cni-log-dir\",\"readOnly\":true}]}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"/opt/cni/bin/calico-ipam\",\"-upgrade\"],\"env\":[{\"name\":\"KUBERNETES_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CALICO_NETWORKING_BACKEND\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"calico_backend\",\"name\":\"calico-config\"}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/cni:v3.21.0\",\"name\":\"upgrade-ipam\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/lib/cni/networks\",\"name\":\"host-local-net-dir\"},{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"}]},{\"command\":[\"/opt/cni/bin/install\"],\"env\":[{\"name\":\"CNI_CONF_NAME\",\"value\":\"10-calico.conflist\"},{\"name\":\"CNI_NETWORK_CONFIG\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"cni_network_config\",\"name\":\"calico-config\"}}},{\"name\":\"KUBERNETES_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CNI_MTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"SLEEP\",\"value\":\"false\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/cni:v3.21.0\",\"name\":\"install-cni\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"},{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\"}]},{\"image\":\"docker.io/calico/pod2daemon-flexvol:v3.21.0\",\"name\":\"flexvol-driver\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/driver\",\"name\":\"flexvol-driver-host\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"calico-node\",\"terminationGracePeriodSeconds\":0,\"tolerations\":[{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/lib/modules\"},\"name\":\"lib-modules\"},{\"hostPath\":{\"path\":\"/var/run/calico\"},\"name\":\"var-run-calico\"},{\"hostPath\":{\"path\":\"/var/lib/calico\"},\"name\":\"var-lib-calico\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/sys/fs/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"sysfs\"},{\"hostPath\":{\"path\":\"/opt/cni/bin\"},\"name\":\"cni-bin-dir\"},{\"hostPath\":{\"path\":\"/etc/cni/net.d\"},\"name\":\"cni-net-dir\"},{\"hostPath\":{\"path\":\"/var/log/calico/cni\"},\"name\":\"cni-log-dir\"},{\"hostPath\":{\"path\":\"/var/lib/cni/networks\"},\"name\":\"host-local-net-dir\"},{\"hostPath\":{\"path\":\"/var/run/nodeagent\",\"type\":\"DirectoryOrCreate\"},\"name\":\"policysync\"},{\"hostPath\":{\"path\":\"/usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds\",\"type\":\"DirectoryOrCreate\"},\"name\":\"flexvol-driver-host\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "generation": 1, "labels": {"k8s-app": "calico-node"}, "managedFields": [{"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:deprecated.daemonset.template.generation": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:k8s-app": {}}}, "f:spec": {"f:revisionHistoryLimit": {}, "f:selector": {}, "f:template": {"f:metadata": {"f:labels": {".": {}, "f:k8s-app": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"calico-node\"}": {".": {}, "f:env": {".": {}, "k:{\"name\":\"CALICO_DISABLE_FILE_LOGGING\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"CALICO_IPV4POOL_IPIP\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"CALICO_IPV4POOL_VXLAN\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"CALICO_NETWORKING_BACKEND\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:configMapKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"CLUSTER_TYPE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"DATASTORE_TYPE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FELIX_DEFAULTENDPOINTTOHOSTACTION\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FELIX_HEALTHENABLED\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FELIX_IPINIPMTU\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:configMapKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"FELIX_IPV6SUPPORT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FELIX_VXLANMTU\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:configMapKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"FELIX_WIREGUARDMTU\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:configMapKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"IP\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"IP_AUTODETECTION_METHOD\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NODENAME\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {".": {}, "f:apiVersion": {}, "f:fieldPath": {}}}}, "k:{\"name\":\"WAIT_FOR_DATASTORE\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:lifecycle": {".": {}, "f:preStop": {".": {}, "f:exec": {".": {}, "f:command": {}}}}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {".": {}, "f:requests": {".": {}, "f:cpu": {}}}, "f:securityContext": {".": {}, "f:privileged": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/lib/modules\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/run/xtables.lock\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/sys/fs/\"}": {".": {}, "f:mountPath": {}, "f:mountPropagation": {}, "f:name": {}}, "k:{\"mountPath\":\"/var/lib/calico\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/var/log/calico/cni\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/run/calico\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/var/run/nodeagent\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:hostNetwork": {}, "f:initContainers": {".": {}, "k:{\"name\":\"flexvol-driver\"}": {".": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:securityContext": {".": {}, "f:privileged": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/host/driver\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"install-cni\"}": {".": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"CNI_CONF_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"CNI_MTU\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:configMapKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"CNI_NETWORK_CONFIG\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:configMapKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"KUBERNETES_NODE_NAME\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {".": {}, "f:apiVersion": {}, "f:fieldPath": {}}}}, "k:{\"name\":\"SLEEP\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:securityContext": {".": {}, "f:privileged": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"upgrade-ipam\"}": {".": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"CALICO_NETWORKING_BACKEND\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:configMapKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"KUBERNETES_NODE_NAME\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {".": {}, "f:apiVersion": {}, "f:fieldPath": {}}}}}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:securityContext": {".": {}, "f:privileged": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/var/lib/cni/networks\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:nodeSelector": {".": {}, "f:kubernetes.io/os": {}}, "f:priorityClassName": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"cni-bin-dir\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"cni-log-dir\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"cni-net-dir\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"flexvol-driver-host\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"host-local-net-dir\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"lib-modules\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"policysync\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"sysfs\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"var-lib-calico\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"var-run-calico\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"xtables-lock\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}}}}, "f:updateStrategy": {"f:rollingUpdate": {".": {}, "f:maxSurge": {}, "f:maxUnavailable": {}}, "f:type": {}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "calico-node", "namespace": "kube-system", "resourceVersion": "2810", "uid": "b0261366-be03-41a7-92aa-9139824d0fb5"}, "spec": {"revisionHistoryLimit": 10, "selector": {"matchLabels": {"k8s-app": "calico-node"}}, "template": {"metadata": {"creationTimestamp": null, "labels": {"k8s-app": "calico-node"}}, "spec": {"containers": [{"env": [{"name": "DATASTORE_TYPE", "value": "kubernetes"}, {"name": "WAIT_FOR_DATASTORE", "value": "true"}, {"name": "NODENAME", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "spec.nodeName"}}}, {"name": "CALICO_NETWORKING_BACKEND", "valueFrom": {"configMapKeyRef": {"key": "calico_backend", "name": "calico-config"}}}, {"name": "CLUSTER_TYPE", "value": "k8s,bgp"}, {"name": "IP", "value": "autodetect"}, {"name": "CALICO_IPV4POOL_IPIP", "value": "Always"}, {"name": "CALICO_IPV4POOL_VXLAN", "value": "Never"}, {"name": "FELIX_IPINIPMTU", "valueFrom": {"configMapKeyRef": {"key": "veth_mtu", "name": "calico-config"}}}, {"name": "FELIX_VXLANMTU", "valueFrom": {"configMapKeyRef": {"key": "veth_mtu", "name": "calico-config"}}}, {"name": "FELIX_WIREGUARDMTU", "valueFrom": {"configMapKeyRef": {"key": "veth_mtu", "name": "calico-config"}}}, {"name": "IP_AUTODETECTION_METHOD", "value": "cidr=192.168.111.1/24"}, {"name": "CALICO_DISABLE_FILE_LOGGING", "value": "true"}, {"name": "FELIX_DEFAULTENDPOINTTOHOSTACTION", "value": "ACCEPT"}, {"name": "FELIX_IPV6SUPPORT", "value": "false"}, {"name": "FELIX_HEALTHENABLED", "value": "true"}], "envFrom": [{"configMapRef": {"name": "kubernetes-services-endpoint", "optional": true}}], "image": "docker.io/calico/node:v3.21.0", "imagePullPolicy": "IfNotPresent", "lifecycle": {"preStop": {"exec": {"command": ["/bin/calico-node", "-shutdown"]}}}, "livenessProbe": {"exec": {"command": ["/bin/calico-node", "-felix-live", "-bird-live"]}, "failureThreshold": 6, "initialDelaySeconds": 10, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 10}, "name": "calico-node", "readinessProbe": {"exec": {"command": ["/bin/calico-node", "-felix-ready", "-bird-ready"]}, "failureThreshold": 3, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 10}, "resources": {"requests": {"cpu": "250m"}}, "securityContext": {"privileged": true}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/host/etc/cni/net.d", "name": "cni-net-dir"}, {"mountPath": "/lib/modules", "name": "lib-modules", "readOnly": true}, {"mountPath": "/run/xtables.lock", "name": "xtables-lock"}, {"mountPath": "/var/run/calico", "name": "var-run-calico"}, {"mountPath": "/var/lib/calico", "name": "var-lib-calico"}, {"mountPath": "/var/run/nodeagent", "name": "policysync"}, {"mountPath": "/sys/fs/", "mountPropagation": "Bidirectional", "name": "sysfs"}, {"mountPath": "/var/log/calico/cni", "name": "cni-log-dir", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "hostNetwork": true, "initContainers": [{"command": ["/opt/cni/bin/calico-ipam", "-upgrade"], "env": [{"name": "KUBERNETES_NODE_NAME", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "spec.nodeName"}}}, {"name": "CALICO_NETWORKING_BACKEND", "valueFrom": {"configMapKeyRef": {"key": "calico_backend", "name": "calico-config"}}}], "envFrom": [{"configMapRef": {"name": "kubernetes-services-endpoint", "optional": true}}], "image": "docker.io/calico/cni:v3.21.0", "imagePullPolicy": "IfNotPresent", "name": "upgrade-ipam", "resources": {}, "securityContext": {"privileged": true}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/lib/cni/networks", "name": "host-local-net-dir"}, {"mountPath": "/host/opt/cni/bin", "name": "cni-bin-dir"}]}, {"command": ["/opt/cni/bin/install"], "env": [{"name": "CNI_CONF_NAME", "value": "10-calico.conflist"}, {"name": "CNI_NETWORK_CONFIG", "valueFrom": {"configMapKeyRef": {"key": "cni_network_config", "name": "calico-config"}}}, {"name": "KUBERNETES_NODE_NAME", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "spec.nodeName"}}}, {"name": "CNI_MTU", "valueFrom": {"configMapKeyRef": {"key": "veth_mtu", "name": "calico-config"}}}, {"name": "SLEEP", "value": "false"}], "envFrom": [{"configMapRef": {"name": "kubernetes-services-endpoint", "optional": true}}], "image": "docker.io/calico/cni:v3.21.0", "imagePullPolicy": "IfNotPresent", "name": "install-cni", "resources": {}, "securityContext": {"privileged": true}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/host/opt/cni/bin", "name": "cni-bin-dir"}, {"mountPath": "/host/etc/cni/net.d", "name": "cni-net-dir"}]}, {"image": "docker.io/calico/pod2daemon-flexvol:v3.21.0", "imagePullPolicy": "IfNotPresent", "name": "flexvol-driver", "resources": {}, "securityContext": {"privileged": true}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/host/driver", "name": "flexvol-driver-host"}]}], "nodeSelector": {"kubernetes.io/os": "linux"}, "priorityClassName": "system-node-critical", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "calico-node", "serviceAccountName": "calico-node", "terminationGracePeriodSeconds": 0, "tolerations": [{"effect": "NoSchedule", "operator": "Exists"}, {"key": "CriticalAddonsOnly", "operator": "Exists"}, {"effect": "NoExecute", "operator": "Exists"}], "volumes": [{"hostPath": {"path": "/lib/modules", "type": ""}, "name": "lib-modules"}, {"hostPath": {"path": "/var/run/calico", "type": ""}, "name": "var-run-calico"}, {"hostPath": {"path": "/var/lib/calico", "type": ""}, "name": "var-lib-calico"}, {"hostPath": {"path": "/run/xtables.lock", "type": "FileOrCreate"}, "name": "xtables-lock"}, {"hostPath": {"path": "/sys/fs/", "type": "DirectoryOrCreate"}, "name": "sysfs"}, {"hostPath": {"path": "/opt/cni/bin", "type": ""}, "name": "cni-bin-dir"}, {"hostPath": {"path": "/etc/cni/net.d", "type": ""}, "name": "cni-net-dir"}, {"hostPath": {"path": "/var/log/calico/cni", "type": ""}, "name": "cni-log-dir"}, {"hostPath": {"path": "/var/lib/cni/networks", "type": ""}, "name": "host-local-net-dir"}, {"hostPath": {"path": "/var/run/nodeagent", "type": "DirectoryOrCreate"}, "name": "policysync"}, {"hostPath": {"path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds", "type": "DirectoryOrCreate"}, "name": "flexvol-driver-host"}]}}, "updateStrategy": {"rollingUpdate": {"maxSurge": 0, "maxUnavailable": 1}, "type": "RollingUpdate"}}, "status": {"currentNumberScheduled": 0, "desiredNumberScheduled": 0, "numberMisscheduled": 0, "numberReady": 0}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"calico-node\",\"namespace\":\"kube-system\"}}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "calico-node", "namespace": "kube-system", "resourceVersion": "2811", "uid": "6db962c5-5a48-4695-b632-58507757841f"}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"k8s-app\":\"calico-kube-controllers\"},\"name\":\"calico-kube-controllers\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"k8s-app\":\"calico-kube-controllers\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"calico-kube-controllers\"},\"name\":\"calico-kube-controllers\",\"namespace\":\"kube-system\"},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"ENABLED_CONTROLLERS\",\"value\":\"node\"},{\"name\":\"DATASTORE_TYPE\",\"value\":\"kubernetes\"}],\"image\":\"docker.io/calico/kube-controllers:v3.21.0\",\"livenessProbe\":{\"exec\":{\"command\":[\"/usr/bin/check-status\",\"-l\"]},\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":10},\"name\":\"calico-kube-controllers\",\"readinessProbe\":{\"exec\":{\"command\":[\"/usr/bin/check-status\",\"-r\"]},\"periodSeconds\":10}}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"calico-kube-controllers\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"}]}}}}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "generation": 1, "labels": {"k8s-app": "calico-kube-controllers"}, "managedFields": [{"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:k8s-app": {}}}, "f:spec": {"f:progressDeadlineSeconds": {}, "f:replicas": {}, "f:revisionHistoryLimit": {}, "f:selector": {}, "f:strategy": {"f:type": {}}, "f:template": {"f:metadata": {"f:labels": {".": {}, "f:k8s-app": {}}, "f:name": {}, "f:namespace": {}}, "f:spec": {"f:containers": {"k:{\"name\":\"calico-kube-controllers\"}": {".": {}, "f:env": {".": {}, "k:{\"name\":\"DATASTORE_TYPE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"ENABLED_CONTROLLERS\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}}, "f:dnsPolicy": {}, "f:nodeSelector": {".": {}, "f:kubernetes.io/os": {}}, "f:priorityClassName": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "calico-kube-controllers", "namespace": "kube-system", "resourceVersion": "2814", "uid": "a6624a6e-72db-4d98-a59e-d55a2d6695d1"}, "spec": {"progressDeadlineSeconds": 600, "replicas": 1, "revisionHistoryLimit": 10, "selector": {"matchLabels": {"k8s-app": "calico-kube-controllers"}}, "strategy": {"type": "Recreate"}, "template": {"metadata": {"creationTimestamp": null, "labels": {"k8s-app": "calico-kube-controllers"}, "name": "calico-kube-controllers", "namespace": "kube-system"}, "spec": {"containers": [{"env": [{"name": "ENABLED_CONTROLLERS", "value": "node"}, {"name": "DATASTORE_TYPE", "value": "kubernetes"}], "image": "docker.io/calico/kube-controllers:v3.21.0", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"exec": {"command": ["/usr/bin/check-status", "-l"]}, "failureThreshold": 6, "initialDelaySeconds": 10, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 10}, "name": "calico-kube-controllers", "readinessProbe": {"exec": {"command": ["/usr/bin/check-status", "-r"]}, "failureThreshold": 3, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File"}], "dnsPolicy": "ClusterFirst", "nodeSelector": {"kubernetes.io/os": "linux"}, "priorityClassName": "system-cluster-critical", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "calico-kube-controllers", "serviceAccountName": "calico-kube-controllers", "terminationGracePeriodSeconds": 30, "tolerations": [{"key": "CriticalAddonsOnly", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node-role.kubernetes.io/master"}]}}}, "status": {}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"calico-kube-controllers\",\"namespace\":\"kube-system\"}}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "calico-kube-controllers", "namespace": "kube-system", "resourceVersion": "2825", "uid": "7660a14f-59fd-4c01-89e8-ff24469c0603"}}}, {"changed": true, "method": "apply", "result": {"apiVersion": "policy/v1beta1", "kind": "PodDisruptionBudget", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"policy/v1beta1\",\"kind\":\"PodDisruptionBudget\",\"metadata\":{\"labels\":{\"k8s-app\":\"calico-kube-controllers\"},\"name\":\"calico-kube-controllers\",\"namespace\":\"kube-system\"},\"spec\":{\"maxUnavailable\":1,\"selector\":{\"matchLabels\":{\"k8s-app\":\"calico-kube-controllers\"}}}}"}, "creationTimestamp": "2021-11-19T15:07:28Z", "generation": 1, "labels": {"k8s-app": "calico-kube-controllers"}, "managedFields": [{"apiVersion": "policy/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:k8s-app": {}}}, "f:spec": {"f:maxUnavailable": {}, "f:selector": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:07:28Z"}], "name": "calico-kube-controllers", "namespace": "kube-system", "resourceVersion": "2834", "uid": "81f146d6-73a6-42d0-a9f8-c29fb324fa23"}, "spec": {"maxUnavailable": 1, "selector": {"matchLabels": {"k8s-app": "calico-kube-controllers"}}}, "status": {"currentHealthy": 0, "desiredHealthy": 0, "disruptionsAllowed": 0, "expectedPods": 0}}}]}}
Friday 19 November 2021  15:07:29 +0000 (0:00:04.442)       0:30:50.453 ******* 

TASK [v1aX_integration_test : Wait for all pods to be in running state] ********
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": []}
Friday 19 November 2021  15:07:30 +0000 (0:00:00.956)       0:30:51.409 ******* 

TASK [v1aX_integration_test : Wait for nodes to be in ready state] *************
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Node", "metadata": {"annotations": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/cluster-namespace": "metal3", "cluster.x-k8s.io/machine": "test1-76bd89c664-4jx4f", "cluster.x-k8s.io/owner-kind": "MachineSet", "cluster.x-k8s.io/owner-name": "test1-76bd89c664", "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/crio/crio.sock", "node.alpha.kubernetes.io/ttl": "0", "volumes.kubernetes.io/controller-managed-attach-detach": "true"}, "creationTimestamp": "2021-11-19T14:51:24Z", "labels": {"beta.kubernetes.io/arch": "amd64", "beta.kubernetes.io/os": "linux", "kubernetes.io/arch": "amd64", "kubernetes.io/hostname": "test1-76bd89c664-4jx4f", "kubernetes.io/os": "linux", "metal3.io/uuid": "1f1f0f2f-1031-45d9-8192-f3645deeba0d"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:node.alpha.kubernetes.io/ttl": {}}}, "f:spec": {"f:podCIDR": {}, "f:podCIDRs": {".": {}, "v:\"192.168.1.0/24\"": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:51:24Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:kubeadm.alpha.kubernetes.io/cri-socket": {}}}}, "manager": "kubeadm", "operation": "Update", "time": "2021-11-19T14:51:24Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/cluster-namespace": {}, "f:cluster.x-k8s.io/machine": {}, "f:cluster.x-k8s.io/owner-kind": {}, "f:cluster.x-k8s.io/owner-name": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:51:50Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:volumes.kubernetes.io/controller-managed-attach-detach": {}}, "f:labels": {".": {}, "f:beta.kubernetes.io/arch": {}, "f:beta.kubernetes.io/os": {}, "f:kubernetes.io/arch": {}, "f:kubernetes.io/hostname": {}, "f:kubernetes.io/os": {}, "f:metal3.io/uuid": {}}}, "f:spec": {"f:providerID": {}}, "f:status": {"f:allocatable": {"f:ephemeral-storage": {}}, "f:capacity": {"f:ephemeral-storage": {}}, "f:conditions": {"k:{\"type\":\"DiskPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"MemoryPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"PIDPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"Ready\"}": {"f:lastHeartbeatTime": {}, "f:message": {}}}, "f:images": {}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T14:51:54Z"}], "name": "test1-76bd89c664-4jx4f", "resourceVersion": "2675", "uid": "c06b477c-08aa-4548-96aa-e18e7349e236"}, "spec": {"podCIDR": "192.168.1.0/24", "podCIDRs": ["192.168.1.0/24"], "providerID": "metal3://1f1f0f2f-1031-45d9-8192-f3645deeba0d", "taints": [{"effect": "NoSchedule", "key": "node.kubernetes.io/not-ready"}]}, "status": {"addresses": [{"address": "192.168.111.102", "type": "InternalIP"}, {"address": "test1-76bd89c664-4jx4f", "type": "Hostname"}], "allocatable": {"cpu": "2", "ephemeral-storage": "46605923866", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "3928196Ki", "pods": "110"}, "capacity": {"cpu": "2", "ephemeral-storage": "50570664Ki", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "4030596Ki", "pods": "110"}, "conditions": [{"lastHeartbeatTime": "2021-11-19T15:07:02Z", "lastTransitionTime": "2021-11-19T14:51:24Z", "message": "kubelet has sufficient memory available", "reason": "KubeletHasSufficientMemory", "status": "False", "type": "MemoryPressure"}, {"lastHeartbeatTime": "2021-11-19T15:07:02Z", "lastTransitionTime": "2021-11-19T14:51:24Z", "message": "kubelet has no disk pressure", "reason": "KubeletHasNoDiskPressure", "status": "False", "type": "DiskPressure"}, {"lastHeartbeatTime": "2021-11-19T15:07:02Z", "lastTransitionTime": "2021-11-19T14:51:24Z", "message": "kubelet has sufficient PID available", "reason": "KubeletHasSufficientPID", "status": "False", "type": "PIDPressure"}, {"lastHeartbeatTime": "2021-11-19T15:07:02Z", "lastTransitionTime": "2021-11-19T14:51:24Z", "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: No CNI configuration file in /etc/cni/net.d/. Has your network provider started?", "reason": "KubeletNotReady", "status": "False", "type": "Ready"}], "daemonEndpoints": {"kubeletEndpoint": {"Port": 10250}}, "images": [{"names": ["docker.io/calico/node@sha256:7f9aa7e31fbcea7be64b153f8bcfd494de023679ec10d851a05667f0adb42650", "docker.io/calico/node@sha256:913955a36179a53d36a0df7f26319a5278991eea2514eab339cce15df24c220c", "docker.io/calico/node:v3.20.0"], "sizeBytes": 172565966}, {"names": ["docker.io/calico/cni@sha256:7c43c152cdf589ed789528c4055503d2f2b0ee943d7815c820fd8e99793f36b3", "docker.io/calico/cni@sha256:9906e2cca8006e1fe9fc3f358a3a06da6253afdd6fad05d594e884e8298ffe1d", "docker.io/calico/cni:v3.20.0"], "sizeBytes": 146031600}, {"names": ["k8s.gcr.io/kube-proxy@sha256:3aeeb5b760b096b0a8ae71fa4bc28dfbfe77b11a06bf40360b5caf17d5b4c5b8", "k8s.gcr.io/kube-proxy@sha256:53af05c2a6cddd32cebf5856f71994f5d41ef2a62824b87f140f2087f91e4a38", "k8s.gcr.io/kube-proxy:v1.21.1"], "sizeBytes": 132731403}, {"names": ["docker.io/calico/kube-controllers@sha256:a850ce8daa84433a5641900693b0f8bc8e5177a4aa4cac8cf4b6cd8c24fd9886", "docker.io/calico/kube-controllers@sha256:b206ed8a5dd2384d11172c0244a94bea2d0d191208926fd6970484c3692641df", "docker.io/calico/kube-controllers:v3.20.0"], "sizeBytes": 63174961}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:1cf3c28a3d384bb89d3fb3a73f6c8242eb4a40bd0a7c6c828692ded8aa3ea072", "docker.io/calico/pod2daemon-flexvol@sha256:c17e3e9871682bed00bfd33f8d6f00db1d1a126034a25bf5380355978e0c548d", "docker.io/calico/pod2daemon-flexvol:v3.20.0"], "sizeBytes": 21765440}, {"names": ["k8s.gcr.io/pause@sha256:1ff6c18fbef2045af6b9c16bf034cc421a29027b800e4f9b68ae9b1cb3e9ae07", "k8s.gcr.io/pause@sha256:369201a612f7b2b585a8e6ca99f77a36bcdbd032463d815388a96800b63ef2c8", "k8s.gcr.io/pause:3.5"], "sizeBytes": 689969}], "nodeInfo": {"architecture": "amd64", "bootID": "16872f11-f259-4973-9eaf-7be7b603dbcd", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "580c73b0-bb65-4b2a-9761-d79d7b4d7002"}}}, {"apiVersion": "v1", "kind": "Node", "metadata": {"annotations": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/cluster-namespace": "metal3", "cluster.x-k8s.io/machine": "test1-76bd89c664-z8zr9", "cluster.x-k8s.io/owner-kind": "MachineSet", "cluster.x-k8s.io/owner-name": "test1-76bd89c664", "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/crio/crio.sock", "node.alpha.kubernetes.io/ttl": "0", "volumes.kubernetes.io/controller-managed-attach-detach": "true"}, "creationTimestamp": "2021-11-19T15:07:09Z", "labels": {"beta.kubernetes.io/arch": "amd64", "beta.kubernetes.io/os": "linux", "kubernetes.io/arch": "amd64", "kubernetes.io/hostname": "test1-76bd89c664-z8zr9", "kubernetes.io/os": "linux", "metal3.io/uuid": "a3b5897b-6923-406c-9314-a89e423a1a80"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:node.alpha.kubernetes.io/ttl": {}}}, "f:spec": {"f:podCIDR": {}, "f:podCIDRs": {".": {}, "v:\"192.168.4.0/24\"": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T15:07:09Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:kubeadm.alpha.kubernetes.io/cri-socket": {}}}}, "manager": "kubeadm", "operation": "Update", "time": "2021-11-19T15:07:09Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/cluster-namespace": {}, "f:cluster.x-k8s.io/machine": {}, "f:cluster.x-k8s.io/owner-kind": {}, "f:cluster.x-k8s.io/owner-name": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:07:12Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:volumes.kubernetes.io/controller-managed-attach-detach": {}}, "f:labels": {".": {}, "f:beta.kubernetes.io/arch": {}, "f:beta.kubernetes.io/os": {}, "f:kubernetes.io/arch": {}, "f:kubernetes.io/hostname": {}, "f:kubernetes.io/os": {}, "f:metal3.io/uuid": {}}}, "f:spec": {"f:providerID": {}}, "f:status": {"f:allocatable": {"f:ephemeral-storage": {}}, "f:capacity": {"f:ephemeral-storage": {}}, "f:conditions": {"k:{\"type\":\"DiskPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"MemoryPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"PIDPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"Ready\"}": {"f:lastHeartbeatTime": {}, "f:message": {}}}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T15:07:19Z"}], "name": "test1-76bd89c664-z8zr9", "resourceVersion": "2733", "uid": "afff5e28-26b8-451e-9614-6acc2381d84b"}, "spec": {"podCIDR": "192.168.4.0/24", "podCIDRs": ["192.168.4.0/24"], "providerID": "metal3://a3b5897b-6923-406c-9314-a89e423a1a80", "taints": [{"effect": "NoSchedule", "key": "node.kubernetes.io/not-ready"}]}, "status": {"addresses": [{"address": "192.168.111.103", "type": "InternalIP"}, {"address": "test1-76bd89c664-z8zr9", "type": "Hostname"}], "allocatable": {"cpu": "2", "ephemeral-storage": "46605923866", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "3928188Ki", "pods": "110"}, "capacity": {"cpu": "2", "ephemeral-storage": "50570664Ki", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "4030588Ki", "pods": "110"}, "conditions": [{"lastHeartbeatTime": "2021-11-19T15:07:19Z", "lastTransitionTime": "2021-11-19T15:07:09Z", "message": "kubelet has sufficient memory available", "reason": "KubeletHasSufficientMemory", "status": "False", "type": "MemoryPressure"}, {"lastHeartbeatTime": "2021-11-19T15:07:19Z", "lastTransitionTime": "2021-11-19T15:07:09Z", "message": "kubelet has no disk pressure", "reason": "KubeletHasNoDiskPressure", "status": "False", "type": "DiskPressure"}, {"lastHeartbeatTime": "2021-11-19T15:07:19Z", "lastTransitionTime": "2021-11-19T15:07:09Z", "message": "kubelet has sufficient PID available", "reason": "KubeletHasSufficientPID", "status": "False", "type": "PIDPressure"}, {"lastHeartbeatTime": "2021-11-19T15:07:19Z", "lastTransitionTime": "2021-11-19T15:07:09Z", "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: No CNI configuration file in /etc/cni/net.d/. Has your network provider started?", "reason": "KubeletNotReady", "status": "False", "type": "Ready"}], "daemonEndpoints": {"kubeletEndpoint": {"Port": 10250}}, "images": [{"names": ["docker.io/calico/node@sha256:7f9aa7e31fbcea7be64b153f8bcfd494de023679ec10d851a05667f0adb42650", "docker.io/calico/node@sha256:913955a36179a53d36a0df7f26319a5278991eea2514eab339cce15df24c220c", "docker.io/calico/node:v3.20.0"], "sizeBytes": 172565966}, {"names": ["docker.io/calico/cni@sha256:7c43c152cdf589ed789528c4055503d2f2b0ee943d7815c820fd8e99793f36b3", "docker.io/calico/cni@sha256:9906e2cca8006e1fe9fc3f358a3a06da6253afdd6fad05d594e884e8298ffe1d", "docker.io/calico/cni:v3.20.0"], "sizeBytes": 146031600}, {"names": ["docker.io/calico/kube-controllers@sha256:a850ce8daa84433a5641900693b0f8bc8e5177a4aa4cac8cf4b6cd8c24fd9886", "docker.io/calico/kube-controllers@sha256:b206ed8a5dd2384d11172c0244a94bea2d0d191208926fd6970484c3692641df", "docker.io/calico/kube-controllers:v3.20.0"], "sizeBytes": 63174961}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:1cf3c28a3d384bb89d3fb3a73f6c8242eb4a40bd0a7c6c828692ded8aa3ea072", "docker.io/calico/pod2daemon-flexvol@sha256:c17e3e9871682bed00bfd33f8d6f00db1d1a126034a25bf5380355978e0c548d", "docker.io/calico/pod2daemon-flexvol:v3.20.0"], "sizeBytes": 21765440}], "nodeInfo": {"architecture": "amd64", "bootID": "7049e95b-c4f9-4403-ab9d-0537d931d4b6", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "7bb4e9f8-745d-4d09-983a-6815b41fd8cb"}}}, {"apiVersion": "v1", "kind": "Node", "metadata": {"annotations": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/cluster-namespace": "metal3", "cluster.x-k8s.io/machine": "test1-9d5zj", "cluster.x-k8s.io/owner-kind": "KubeadmControlPlane", "cluster.x-k8s.io/owner-name": "test1", "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/crio/crio.sock", "node.alpha.kubernetes.io/ttl": "0", "volumes.kubernetes.io/controller-managed-attach-detach": "true"}, "creationTimestamp": "2021-11-19T14:52:34Z", "labels": {"beta.kubernetes.io/arch": "amd64", "beta.kubernetes.io/os": "linux", "kubernetes.io/arch": "amd64", "kubernetes.io/hostname": "test1-9d5zj", "kubernetes.io/os": "linux", "metal3.io/uuid": "a0d2af16-8f4c-4ff3-bb36-a6b7046796f0", "node-role.kubernetes.io/control-plane": "", "node-role.kubernetes.io/master": "", "node.kubernetes.io/exclude-from-external-load-balancers": ""}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:node.alpha.kubernetes.io/ttl": {}}}, "f:spec": {"f:podCIDR": {}, "f:podCIDRs": {".": {}, "v:\"192.168.2.0/24\"": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:52:34Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:kubeadm.alpha.kubernetes.io/cri-socket": {}}, "f:labels": {"f:node-role.kubernetes.io/control-plane": {}, "f:node-role.kubernetes.io/master": {}, "f:node.kubernetes.io/exclude-from-external-load-balancers": {}}}, "f:spec": {"f:taints": {}}}, "manager": "kubeadm", "operation": "Update", "time": "2021-11-19T14:52:50Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:volumes.kubernetes.io/controller-managed-attach-detach": {}}, "f:labels": {".": {}, "f:beta.kubernetes.io/arch": {}, "f:beta.kubernetes.io/os": {}, "f:kubernetes.io/arch": {}, "f:kubernetes.io/hostname": {}, "f:kubernetes.io/os": {}, "f:metal3.io/uuid": {}}}, "f:spec": {"f:providerID": {}}, "f:status": {"f:allocatable": {"f:ephemeral-storage": {}}, "f:capacity": {"f:ephemeral-storage": {}}, "f:conditions": {"k:{\"type\":\"DiskPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"MemoryPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"PIDPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"Ready\"}": {"f:lastHeartbeatTime": {}, "f:message": {}}}, "f:images": {}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T14:53:09Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/cluster-namespace": {}, "f:cluster.x-k8s.io/machine": {}, "f:cluster.x-k8s.io/owner-kind": {}, "f:cluster.x-k8s.io/owner-name": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:55:25Z"}], "name": "test1-9d5zj", "resourceVersion": "2282", "uid": "dbf2f4d1-81ec-4b1c-84a3-4e577cb3c75a"}, "spec": {"podCIDR": "192.168.2.0/24", "podCIDRs": ["192.168.2.0/24"], "providerID": "metal3://a0d2af16-8f4c-4ff3-bb36-a6b7046796f0", "taints": [{"effect": "NoSchedule", "key": "node-role.kubernetes.io/master"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/not-ready"}]}, "status": {"addresses": [{"address": "192.168.111.101", "type": "InternalIP"}, {"address": "test1-9d5zj", "type": "Hostname"}], "allocatable": {"cpu": "2", "ephemeral-storage": "46605923866", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "3928196Ki", "pods": "110"}, "capacity": {"cpu": "2", "ephemeral-storage": "50570664Ki", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "4030596Ki", "pods": "110"}, "conditions": [{"lastHeartbeatTime": "2021-11-19T15:03:11Z", "lastTransitionTime": "2021-11-19T14:52:34Z", "message": "kubelet has sufficient memory available", "reason": "KubeletHasSufficientMemory", "status": "False", "type": "MemoryPressure"}, {"lastHeartbeatTime": "2021-11-19T15:03:11Z", "lastTransitionTime": "2021-11-19T14:52:34Z", "message": "kubelet has no disk pressure", "reason": "KubeletHasNoDiskPressure", "status": "False", "type": "DiskPressure"}, {"lastHeartbeatTime": "2021-11-19T15:03:11Z", "lastTransitionTime": "2021-11-19T14:52:34Z", "message": "kubelet has sufficient PID available", "reason": "KubeletHasSufficientPID", "status": "False", "type": "PIDPressure"}, {"lastHeartbeatTime": "2021-11-19T15:03:11Z", "lastTransitionTime": "2021-11-19T14:52:34Z", "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: No CNI configuration file in /etc/cni/net.d/. Has your network provider started?", "reason": "KubeletNotReady", "status": "False", "type": "Ready"}], "daemonEndpoints": {"kubeletEndpoint": {"Port": 10250}}, "images": [{"names": ["k8s.gcr.io/etcd@sha256:4ad90a11b55313b182afc186b9876c8e891531b8db4c9bf1541953021618d0e2", "k8s.gcr.io/etcd@sha256:bd4d2c9a19be8a492bc79df53eee199fd04b415e9993eb69f7718052602a147a", "k8s.gcr.io/etcd:3.4.13-0"], "sizeBytes": 254662613}, {"names": ["docker.io/calico/node@sha256:7f9aa7e31fbcea7be64b153f8bcfd494de023679ec10d851a05667f0adb42650", "docker.io/calico/node@sha256:913955a36179a53d36a0df7f26319a5278991eea2514eab339cce15df24c220c", "docker.io/calico/node:v3.20.0"], "sizeBytes": 172565966}, {"names": ["docker.io/calico/cni@sha256:7c43c152cdf589ed789528c4055503d2f2b0ee943d7815c820fd8e99793f36b3", "docker.io/calico/cni@sha256:9906e2cca8006e1fe9fc3f358a3a06da6253afdd6fad05d594e884e8298ffe1d", "docker.io/calico/cni:v3.20.0"], "sizeBytes": 146031600}, {"names": ["k8s.gcr.io/kube-proxy@sha256:3aeeb5b760b096b0a8ae71fa4bc28dfbfe77b11a06bf40360b5caf17d5b4c5b8", "k8s.gcr.io/kube-proxy@sha256:53af05c2a6cddd32cebf5856f71994f5d41ef2a62824b87f140f2087f91e4a38", "k8s.gcr.io/kube-proxy:v1.21.1"], "sizeBytes": 132731403}, {"names": ["k8s.gcr.io/kube-apiserver@sha256:53a13cd1588391888c5a8ac4cef13d3ee6d229cd904038936731af7131d193a9", "k8s.gcr.io/kube-apiserver@sha256:c81aabdc567a1858c62fb939e4d54abe3854087c9c683ac9bf1a60137b272258", "k8s.gcr.io/kube-apiserver:v1.21.1"], "sizeBytes": 126866676}, {"names": ["k8s.gcr.io/kube-controller-manager@sha256:3daf9c9f9fe24c3a7b92ce864ef2d8d610c84124cc7d98e68fdbe94038337228", "k8s.gcr.io/kube-controller-manager@sha256:e0d7e62864b91b05f02e51ce0ecf8c986270eedb2d1512edff0d43b8660a442e", "k8s.gcr.io/kube-controller-manager:v1.21.1"], "sizeBytes": 121079386}, {"names": ["docker.io/calico/kube-controllers@sha256:a850ce8daa84433a5641900693b0f8bc8e5177a4aa4cac8cf4b6cd8c24fd9886", "docker.io/calico/kube-controllers@sha256:b206ed8a5dd2384d11172c0244a94bea2d0d191208926fd6970484c3692641df", "docker.io/calico/kube-controllers:v3.20.0"], "sizeBytes": 63174961}, {"names": ["k8s.gcr.io/kube-scheduler@sha256:a8c4084db3b381f0806ea563c7ec842cc3604c57722a916c91fb59b00ff67d63", "k8s.gcr.io/kube-scheduler@sha256:b959d178004ea7aa2b2f118710f55b0b4ad2b9e7710bb8427c7351ef67b943cb", "k8s.gcr.io/kube-scheduler:v1.21.1"], "sizeBytes": 51889242}, {"names": ["k8s.gcr.io/coredns/coredns@sha256:10ecc12177735e5a6fd6fa0127202776128d860ed7ab0341780ddaeb1f6dfe61", "k8s.gcr.io/coredns/coredns@sha256:cc8fb77bc2a0541949d1d9320a641b82fd392b0d3d8145469ca4709ae769980e", "k8s.gcr.io/coredns/coredns:v1.8.0"], "sizeBytes": 42585056}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:1cf3c28a3d384bb89d3fb3a73f6c8242eb4a40bd0a7c6c828692ded8aa3ea072", "docker.io/calico/pod2daemon-flexvol@sha256:c17e3e9871682bed00bfd33f8d6f00db1d1a126034a25bf5380355978e0c548d", "docker.io/calico/pod2daemon-flexvol:v3.20.0"], "sizeBytes": 21765440}, {"names": ["k8s.gcr.io/pause@sha256:1ff6c18fbef2045af6b9c16bf034cc421a29027b800e4f9b68ae9b1cb3e9ae07", "k8s.gcr.io/pause@sha256:369201a612f7b2b585a8e6ca99f77a36bcdbd032463d815388a96800b63ef2c8", "k8s.gcr.io/pause:3.5"], "sizeBytes": 689969}, {"names": ["k8s.gcr.io/pause@sha256:6c3835cab3980f11b83277305d0d736051c32b17606f5ec59f1dda67c9ba3810", "k8s.gcr.io/pause@sha256:914e745e524aa94315a25b49a7fafc0aa395e332126930593225d7a513f5a6b2", "k8s.gcr.io/pause:3.4.1"], "sizeBytes": 689817}], "nodeInfo": {"architecture": "amd64", "bootID": "458a34b4-13d0-4dd4-afb2-6d2ed1cc610d", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "3f2d9cd0-48da-41d2-978e-ead5d5ca837a"}}}, {"apiVersion": "v1", "kind": "Node", "metadata": {"annotations": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/cluster-namespace": "metal3", "cluster.x-k8s.io/machine": "test1-j9gl2", "cluster.x-k8s.io/owner-kind": "KubeadmControlPlane", "cluster.x-k8s.io/owner-name": "test1", "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/crio/crio.sock", "node.alpha.kubernetes.io/ttl": "0", "volumes.kubernetes.io/controller-managed-attach-detach": "true"}, "creationTimestamp": "2021-11-19T15:00:27Z", "labels": {"beta.kubernetes.io/arch": "amd64", "beta.kubernetes.io/os": "linux", "kubernetes.io/arch": "amd64", "kubernetes.io/hostname": "test1-j9gl2", "kubernetes.io/os": "linux", "metal3.io/uuid": "cdbb73f8-8247-495f-97dd-ee54daaa1098", "node-role.kubernetes.io/control-plane": "", "node-role.kubernetes.io/master": "", "node.kubernetes.io/exclude-from-external-load-balancers": ""}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:node.alpha.kubernetes.io/ttl": {}}}, "f:spec": {"f:podCIDR": {}, "f:podCIDRs": {".": {}, "v:\"192.168.3.0/24\"": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T15:00:27Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:kubeadm.alpha.kubernetes.io/cri-socket": {}}, "f:labels": {"f:node-role.kubernetes.io/control-plane": {}, "f:node-role.kubernetes.io/master": {}, "f:node.kubernetes.io/exclude-from-external-load-balancers": {}}}, "f:spec": {"f:taints": {}}}, "manager": "kubeadm", "operation": "Update", "time": "2021-11-19T15:00:32Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:volumes.kubernetes.io/controller-managed-attach-detach": {}}, "f:labels": {".": {}, "f:beta.kubernetes.io/arch": {}, "f:beta.kubernetes.io/os": {}, "f:kubernetes.io/arch": {}, "f:kubernetes.io/hostname": {}, "f:kubernetes.io/os": {}, "f:metal3.io/uuid": {}}}, "f:spec": {"f:providerID": {}}, "f:status": {"f:allocatable": {"f:ephemeral-storage": {}}, "f:capacity": {"f:ephemeral-storage": {}}, "f:conditions": {"k:{\"type\":\"DiskPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"MemoryPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"PIDPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"Ready\"}": {"f:lastHeartbeatTime": {}, "f:message": {}}}, "f:images": {}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T15:00:58Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/cluster-namespace": {}, "f:cluster.x-k8s.io/machine": {}, "f:cluster.x-k8s.io/owner-kind": {}, "f:cluster.x-k8s.io/owner-name": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:01:51Z"}], "name": "test1-j9gl2", "resourceVersion": "2569", "uid": "3c80660d-215b-41d6-831c-6308f2837e20"}, "spec": {"podCIDR": "192.168.3.0/24", "podCIDRs": ["192.168.3.0/24"], "providerID": "metal3://cdbb73f8-8247-495f-97dd-ee54daaa1098", "taints": [{"effect": "NoSchedule", "key": "node-role.kubernetes.io/master"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/not-ready"}]}, "status": {"addresses": [{"address": "192.168.111.104", "type": "InternalIP"}, {"address": "test1-j9gl2", "type": "Hostname"}], "allocatable": {"cpu": "2", "ephemeral-storage": "46605923866", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "3928188Ki", "pods": "110"}, "capacity": {"cpu": "2", "ephemeral-storage": "50570664Ki", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "4030588Ki", "pods": "110"}, "conditions": [{"lastHeartbeatTime": "2021-11-19T15:05:59Z", "lastTransitionTime": "2021-11-19T15:00:27Z", "message": "kubelet has sufficient memory available", "reason": "KubeletHasSufficientMemory", "status": "False", "type": "MemoryPressure"}, {"lastHeartbeatTime": "2021-11-19T15:05:59Z", "lastTransitionTime": "2021-11-19T15:00:27Z", "message": "kubelet has no disk pressure", "reason": "KubeletHasNoDiskPressure", "status": "False", "type": "DiskPressure"}, {"lastHeartbeatTime": "2021-11-19T15:05:59Z", "lastTransitionTime": "2021-11-19T15:00:27Z", "message": "kubelet has sufficient PID available", "reason": "KubeletHasSufficientPID", "status": "False", "type": "PIDPressure"}, {"lastHeartbeatTime": "2021-11-19T15:05:59Z", "lastTransitionTime": "2021-11-19T15:00:27Z", "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: No CNI configuration file in /etc/cni/net.d/. Has your network provider started?", "reason": "KubeletNotReady", "status": "False", "type": "Ready"}], "daemonEndpoints": {"kubeletEndpoint": {"Port": 10250}}, "images": [{"names": ["k8s.gcr.io/etcd@sha256:4ad90a11b55313b182afc186b9876c8e891531b8db4c9bf1541953021618d0e2", "k8s.gcr.io/etcd@sha256:bd4d2c9a19be8a492bc79df53eee199fd04b415e9993eb69f7718052602a147a", "k8s.gcr.io/etcd:3.4.13-0"], "sizeBytes": 254662613}, {"names": ["docker.io/calico/node@sha256:7f9aa7e31fbcea7be64b153f8bcfd494de023679ec10d851a05667f0adb42650", "docker.io/calico/node@sha256:913955a36179a53d36a0df7f26319a5278991eea2514eab339cce15df24c220c", "docker.io/calico/node:v3.20.0"], "sizeBytes": 172565966}, {"names": ["docker.io/calico/cni@sha256:7c43c152cdf589ed789528c4055503d2f2b0ee943d7815c820fd8e99793f36b3", "docker.io/calico/cni@sha256:9906e2cca8006e1fe9fc3f358a3a06da6253afdd6fad05d594e884e8298ffe1d", "docker.io/calico/cni:v3.20.0"], "sizeBytes": 146031600}, {"names": ["k8s.gcr.io/kube-proxy@sha256:3aeeb5b760b096b0a8ae71fa4bc28dfbfe77b11a06bf40360b5caf17d5b4c5b8", "k8s.gcr.io/kube-proxy@sha256:53af05c2a6cddd32cebf5856f71994f5d41ef2a62824b87f140f2087f91e4a38", "k8s.gcr.io/kube-proxy:v1.21.1"], "sizeBytes": 132731403}, {"names": ["k8s.gcr.io/kube-apiserver@sha256:53a13cd1588391888c5a8ac4cef13d3ee6d229cd904038936731af7131d193a9", "k8s.gcr.io/kube-apiserver@sha256:c81aabdc567a1858c62fb939e4d54abe3854087c9c683ac9bf1a60137b272258", "k8s.gcr.io/kube-apiserver:v1.21.1"], "sizeBytes": 126866676}, {"names": ["k8s.gcr.io/kube-controller-manager@sha256:3daf9c9f9fe24c3a7b92ce864ef2d8d610c84124cc7d98e68fdbe94038337228", "k8s.gcr.io/kube-controller-manager@sha256:e0d7e62864b91b05f02e51ce0ecf8c986270eedb2d1512edff0d43b8660a442e", "k8s.gcr.io/kube-controller-manager:v1.21.1"], "sizeBytes": 121079386}, {"names": ["docker.io/calico/kube-controllers@sha256:a850ce8daa84433a5641900693b0f8bc8e5177a4aa4cac8cf4b6cd8c24fd9886", "docker.io/calico/kube-controllers@sha256:b206ed8a5dd2384d11172c0244a94bea2d0d191208926fd6970484c3692641df", "docker.io/calico/kube-controllers:v3.20.0"], "sizeBytes": 63174961}, {"names": ["k8s.gcr.io/kube-scheduler@sha256:a8c4084db3b381f0806ea563c7ec842cc3604c57722a916c91fb59b00ff67d63", "k8s.gcr.io/kube-scheduler@sha256:b959d178004ea7aa2b2f118710f55b0b4ad2b9e7710bb8427c7351ef67b943cb", "k8s.gcr.io/kube-scheduler:v1.21.1"], "sizeBytes": 51889242}, {"names": ["k8s.gcr.io/coredns/coredns@sha256:10ecc12177735e5a6fd6fa0127202776128d860ed7ab0341780ddaeb1f6dfe61", "k8s.gcr.io/coredns/coredns@sha256:cc8fb77bc2a0541949d1d9320a641b82fd392b0d3d8145469ca4709ae769980e", "k8s.gcr.io/coredns/coredns:v1.8.0"], "sizeBytes": 42585056}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:1cf3c28a3d384bb89d3fb3a73f6c8242eb4a40bd0a7c6c828692ded8aa3ea072", "docker.io/calico/pod2daemon-flexvol@sha256:c17e3e9871682bed00bfd33f8d6f00db1d1a126034a25bf5380355978e0c548d", "docker.io/calico/pod2daemon-flexvol:v3.20.0"], "sizeBytes": 21765440}, {"names": ["k8s.gcr.io/pause@sha256:1ff6c18fbef2045af6b9c16bf034cc421a29027b800e4f9b68ae9b1cb3e9ae07", "k8s.gcr.io/pause@sha256:369201a612f7b2b585a8e6ca99f77a36bcdbd032463d815388a96800b63ef2c8", "k8s.gcr.io/pause:3.5"], "sizeBytes": 689969}, {"names": ["k8s.gcr.io/pause@sha256:6c3835cab3980f11b83277305d0d736051c32b17606f5ec59f1dda67c9ba3810", "k8s.gcr.io/pause@sha256:914e745e524aa94315a25b49a7fafc0aa395e332126930593225d7a513f5a6b2", "k8s.gcr.io/pause:3.4.1"], "sizeBytes": 689817}], "nodeInfo": {"architecture": "amd64", "bootID": "e551ab4f-4dfb-4b6d-9441-42d8f0960ab7", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "d244c2e6-fb91-4804-a12f-0aff629d7019"}}}, {"apiVersion": "v1", "kind": "Node", "metadata": {"annotations": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/cluster-namespace": "metal3", "cluster.x-k8s.io/machine": "test1-nxssx", "cluster.x-k8s.io/owner-kind": "KubeadmControlPlane", "cluster.x-k8s.io/owner-name": "test1", "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/crio/crio.sock", "node.alpha.kubernetes.io/ttl": "0", "volumes.kubernetes.io/controller-managed-attach-detach": "true"}, "creationTimestamp": "2021-11-19T14:44:13Z", "labels": {"beta.kubernetes.io/arch": "amd64", "beta.kubernetes.io/os": "linux", "kubernetes.io/arch": "amd64", "kubernetes.io/hostname": "test1-nxssx", "kubernetes.io/os": "linux", "metal3.io/uuid": "5f526f39-9270-4941-8328-f783b718f46d", "node-role.kubernetes.io/control-plane": "", "node-role.kubernetes.io/master": "", "node.kubernetes.io/exclude-from-external-load-balancers": ""}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:kubeadm.alpha.kubernetes.io/cri-socket": {}}, "f:labels": {"f:node-role.kubernetes.io/control-plane": {}, "f:node-role.kubernetes.io/master": {}, "f:node.kubernetes.io/exclude-from-external-load-balancers": {}}}, "f:spec": {"f:taints": {}}}, "manager": "kubeadm", "operation": "Update", "time": "2021-11-19T14:44:15Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:volumes.kubernetes.io/controller-managed-attach-detach": {}}, "f:labels": {".": {}, "f:beta.kubernetes.io/arch": {}, "f:beta.kubernetes.io/os": {}, "f:kubernetes.io/arch": {}, "f:kubernetes.io/hostname": {}, "f:kubernetes.io/os": {}, "f:metal3.io/uuid": {}}}, "f:spec": {"f:providerID": {}}, "f:status": {"f:allocatable": {"f:ephemeral-storage": {}}, "f:conditions": {"k:{\"type\":\"DiskPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"MemoryPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"PIDPressure\"}": {"f:lastHeartbeatTime": {}}, "k:{\"type\":\"Ready\"}": {"f:lastHeartbeatTime": {}, "f:message": {}}}, "f:images": {}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T14:44:21Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:node.alpha.kubernetes.io/ttl": {}}}, "f:spec": {"f:podCIDR": {}, "f:podCIDRs": {".": {}, "v:\"192.168.0.0/24\"": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:44:26Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/cluster-namespace": {}, "f:cluster.x-k8s.io/machine": {}, "f:cluster.x-k8s.io/owner-kind": {}, "f:cluster.x-k8s.io/owner-name": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:44:29Z"}], "name": "test1-nxssx", "resourceVersion": "2438", "uid": "97487870-7114-438e-a3b6-953b91ed95c8"}, "spec": {"podCIDR": "192.168.0.0/24", "podCIDRs": ["192.168.0.0/24"], "providerID": "metal3://5f526f39-9270-4941-8328-f783b718f46d", "taints": [{"effect": "NoSchedule", "key": "node-role.kubernetes.io/master"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/not-ready"}]}, "status": {"addresses": [{"address": "192.168.111.100", "type": "InternalIP"}, {"address": "test1-nxssx", "type": "Hostname"}], "allocatable": {"cpu": "2", "ephemeral-storage": "46605923866", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "3928196Ki", "pods": "110"}, "capacity": {"cpu": "2", "ephemeral-storage": "50570664Ki", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "4030596Ki", "pods": "110"}, "conditions": [{"lastHeartbeatTime": "2021-11-19T15:04:42Z", "lastTransitionTime": "2021-11-19T14:44:12Z", "message": "kubelet has sufficient memory available", "reason": "KubeletHasSufficientMemory", "status": "False", "type": "MemoryPressure"}, {"lastHeartbeatTime": "2021-11-19T15:04:42Z", "lastTransitionTime": "2021-11-19T14:44:12Z", "message": "kubelet has no disk pressure", "reason": "KubeletHasNoDiskPressure", "status": "False", "type": "DiskPressure"}, {"lastHeartbeatTime": "2021-11-19T15:04:42Z", "lastTransitionTime": "2021-11-19T14:44:12Z", "message": "kubelet has sufficient PID available", "reason": "KubeletHasSufficientPID", "status": "False", "type": "PIDPressure"}, {"lastHeartbeatTime": "2021-11-19T15:04:42Z", "lastTransitionTime": "2021-11-19T14:44:12Z", "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: No CNI configuration file in /etc/cni/net.d/. Has your network provider started?", "reason": "KubeletNotReady", "status": "False", "type": "Ready"}], "daemonEndpoints": {"kubeletEndpoint": {"Port": 10250}}, "images": [{"names": ["k8s.gcr.io/etcd@sha256:4ad90a11b55313b182afc186b9876c8e891531b8db4c9bf1541953021618d0e2", "k8s.gcr.io/etcd@sha256:bd4d2c9a19be8a492bc79df53eee199fd04b415e9993eb69f7718052602a147a", "k8s.gcr.io/etcd:3.4.13-0"], "sizeBytes": 254662613}, {"names": ["docker.io/calico/node@sha256:7f9aa7e31fbcea7be64b153f8bcfd494de023679ec10d851a05667f0adb42650", "docker.io/calico/node@sha256:913955a36179a53d36a0df7f26319a5278991eea2514eab339cce15df24c220c", "docker.io/calico/node:v3.20.0"], "sizeBytes": 172565966}, {"names": ["docker.io/calico/cni@sha256:7c43c152cdf589ed789528c4055503d2f2b0ee943d7815c820fd8e99793f36b3", "docker.io/calico/cni@sha256:9906e2cca8006e1fe9fc3f358a3a06da6253afdd6fad05d594e884e8298ffe1d", "docker.io/calico/cni:v3.20.0"], "sizeBytes": 146031600}, {"names": ["k8s.gcr.io/kube-proxy@sha256:3aeeb5b760b096b0a8ae71fa4bc28dfbfe77b11a06bf40360b5caf17d5b4c5b8", "k8s.gcr.io/kube-proxy@sha256:53af05c2a6cddd32cebf5856f71994f5d41ef2a62824b87f140f2087f91e4a38", "k8s.gcr.io/kube-proxy:v1.21.1"], "sizeBytes": 132731403}, {"names": ["k8s.gcr.io/kube-apiserver@sha256:53a13cd1588391888c5a8ac4cef13d3ee6d229cd904038936731af7131d193a9", "k8s.gcr.io/kube-apiserver@sha256:c81aabdc567a1858c62fb939e4d54abe3854087c9c683ac9bf1a60137b272258", "k8s.gcr.io/kube-apiserver:v1.21.1"], "sizeBytes": 126866676}, {"names": ["k8s.gcr.io/kube-controller-manager@sha256:3daf9c9f9fe24c3a7b92ce864ef2d8d610c84124cc7d98e68fdbe94038337228", "k8s.gcr.io/kube-controller-manager@sha256:e0d7e62864b91b05f02e51ce0ecf8c986270eedb2d1512edff0d43b8660a442e", "k8s.gcr.io/kube-controller-manager:v1.21.1"], "sizeBytes": 121079386}, {"names": ["docker.io/calico/kube-controllers@sha256:a850ce8daa84433a5641900693b0f8bc8e5177a4aa4cac8cf4b6cd8c24fd9886", "docker.io/calico/kube-controllers@sha256:b206ed8a5dd2384d11172c0244a94bea2d0d191208926fd6970484c3692641df", "docker.io/calico/kube-controllers:v3.20.0"], "sizeBytes": 63174961}, {"names": ["k8s.gcr.io/kube-scheduler@sha256:a8c4084db3b381f0806ea563c7ec842cc3604c57722a916c91fb59b00ff67d63", "k8s.gcr.io/kube-scheduler@sha256:b959d178004ea7aa2b2f118710f55b0b4ad2b9e7710bb8427c7351ef67b943cb", "k8s.gcr.io/kube-scheduler:v1.21.1"], "sizeBytes": 51889242}, {"names": ["k8s.gcr.io/coredns/coredns@sha256:10ecc12177735e5a6fd6fa0127202776128d860ed7ab0341780ddaeb1f6dfe61", "k8s.gcr.io/coredns/coredns@sha256:cc8fb77bc2a0541949d1d9320a641b82fd392b0d3d8145469ca4709ae769980e", "k8s.gcr.io/coredns/coredns:v1.8.0"], "sizeBytes": 42585056}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:1cf3c28a3d384bb89d3fb3a73f6c8242eb4a40bd0a7c6c828692ded8aa3ea072", "docker.io/calico/pod2daemon-flexvol@sha256:c17e3e9871682bed00bfd33f8d6f00db1d1a126034a25bf5380355978e0c548d", "docker.io/calico/pod2daemon-flexvol:v3.20.0"], "sizeBytes": 21765440}, {"names": ["k8s.gcr.io/pause@sha256:1ff6c18fbef2045af6b9c16bf034cc421a29027b800e4f9b68ae9b1cb3e9ae07", "k8s.gcr.io/pause@sha256:369201a612f7b2b585a8e6ca99f77a36bcdbd032463d815388a96800b63ef2c8", "k8s.gcr.io/pause:3.5"], "sizeBytes": 689969}, {"names": ["k8s.gcr.io/pause@sha256:6c3835cab3980f11b83277305d0d736051c32b17606f5ec59f1dda67c9ba3810", "k8s.gcr.io/pause@sha256:914e745e524aa94315a25b49a7fafc0aa395e332126930593225d7a513f5a6b2", "k8s.gcr.io/pause:3.4.1"], "sizeBytes": 689817}], "nodeInfo": {"architecture": "amd64", "bootID": "576f91ef-d1fd-40e5-b86d-d61ed5f7700f", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "f6cc7069-cb9d-4246-8239-3ea36c87f9bd"}}}]}
Friday 19 November 2021  15:07:31 +0000 (0:00:00.926)       0:30:52.336 ******* 

TASK [v1aX_integration_test : pivot] *******************************************
included: /home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/tasks/move.yml for localhost
Friday 19 November 2021  15:07:31 +0000 (0:00:00.142)       0:30:52.479 ******* 

TASK [v1aX_integration_test : Define number of BMH's] **************************
ok: [localhost] => {"ansible_facts": {"NUMBER_OF_BMH": "5"}, "changed": false}
Friday 19 November 2021  15:07:31 +0000 (0:00:00.075)       0:30:52.554 ******* 

TASK [v1aX_integration_test : Create directories for storing container logs] ***
changed: [localhost] => (item=ironic-api) => {"ansible_loop_var": "item", "changed": true, "gid": 1000, "group": "capm3", "item": "ironic-api", "mode": "0775", "owner": "capm3", "path": "/tmp/docker/ironic-api", "size": 4096, "state": "directory", "uid": 1000}
changed: [localhost] => (item=ironic-conductor) => {"ansible_loop_var": "item", "changed": true, "gid": 1000, "group": "capm3", "item": "ironic-conductor", "mode": "0775", "owner": "capm3", "path": "/tmp/docker/ironic-conductor", "size": 4096, "state": "directory", "uid": 1000}
changed: [localhost] => (item=ironic-inspector) => {"ansible_loop_var": "item", "changed": true, "gid": 1000, "group": "capm3", "item": "ironic-inspector", "mode": "0775", "owner": "capm3", "path": "/tmp/docker/ironic-inspector", "size": 4096, "state": "directory", "uid": 1000}
changed: [localhost] => (item=dnsmasq) => {"ansible_loop_var": "item", "changed": true, "gid": 1000, "group": "capm3", "item": "dnsmasq", "mode": "0775", "owner": "capm3", "path": "/tmp/docker/dnsmasq", "size": 4096, "state": "directory", "uid": 1000}
changed: [localhost] => (item=httpd-infra) => {"ansible_loop_var": "item", "changed": true, "gid": 1000, "group": "capm3", "item": "httpd-infra", "mode": "0775", "owner": "capm3", "path": "/tmp/docker/httpd-infra", "size": 4096, "state": "directory", "uid": 1000}
changed: [localhost] => (item=mariadb) => {"ansible_loop_var": "item", "changed": true, "gid": 1000, "group": "capm3", "item": "mariadb", "mode": "0775", "owner": "capm3", "path": "/tmp/docker/mariadb", "size": 4096, "state": "directory", "uid": 1000}
changed: [localhost] => (item=ironic-endpoint-keepalived) => {"ansible_loop_var": "item", "changed": true, "gid": 1000, "group": "capm3", "item": "ironic-endpoint-keepalived", "mode": "0775", "owner": "capm3", "path": "/tmp/docker/ironic-endpoint-keepalived", "size": 4096, "state": "directory", "uid": 1000}
changed: [localhost] => (item=ironic-log-watch) => {"ansible_loop_var": "item", "changed": true, "gid": 1000, "group": "capm3", "item": "ironic-log-watch", "mode": "0775", "owner": "capm3", "path": "/tmp/docker/ironic-log-watch", "size": 4096, "state": "directory", "uid": 1000}
Friday 19 November 2021  15:07:33 +0000 (0:00:02.023)       0:30:54.578 ******* 

TASK [v1aX_integration_test : Fetch container logs before pivoting] ************
changed: [localhost] => (item=ironic-api) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo docker logs ironic-api > /tmp/docker/ironic-api/stdout.log 2> /tmp/docker/ironic-api/stderr.log", "delta": "0:00:00.241121", "end": "2021-11-19 15:07:33.941847", "item": "ironic-api", "msg": "", "rc": 0, "start": "2021-11-19 15:07:33.700726", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
changed: [localhost] => (item=ironic-conductor) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo docker logs ironic-conductor > /tmp/docker/ironic-conductor/stdout.log 2> /tmp/docker/ironic-conductor/stderr.log", "delta": "0:00:00.154050", "end": "2021-11-19 15:07:34.351084", "item": "ironic-conductor", "msg": "", "rc": 0, "start": "2021-11-19 15:07:34.197034", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
changed: [localhost] => (item=ironic-inspector) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo docker logs ironic-inspector > /tmp/docker/ironic-inspector/stdout.log 2> /tmp/docker/ironic-inspector/stderr.log", "delta": "0:00:00.073688", "end": "2021-11-19 15:07:34.670795", "item": "ironic-inspector", "msg": "", "rc": 0, "start": "2021-11-19 15:07:34.597107", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
changed: [localhost] => (item=dnsmasq) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo docker logs dnsmasq > /tmp/docker/dnsmasq/stdout.log 2> /tmp/docker/dnsmasq/stderr.log", "delta": "0:00:00.069561", "end": "2021-11-19 15:07:35.018827", "item": "dnsmasq", "msg": "", "rc": 0, "start": "2021-11-19 15:07:34.949266", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
changed: [localhost] => (item=httpd-infra) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo docker logs httpd-infra > /tmp/docker/httpd-infra/stdout.log 2> /tmp/docker/httpd-infra/stderr.log", "delta": "0:00:00.057218", "end": "2021-11-19 15:07:35.345837", "item": "httpd-infra", "msg": "", "rc": 0, "start": "2021-11-19 15:07:35.288619", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
changed: [localhost] => (item=mariadb) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo docker logs mariadb > /tmp/docker/mariadb/stdout.log 2> /tmp/docker/mariadb/stderr.log", "delta": "0:00:00.061018", "end": "2021-11-19 15:07:35.644163", "item": "mariadb", "msg": "", "rc": 0, "start": "2021-11-19 15:07:35.583145", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
changed: [localhost] => (item=ironic-endpoint-keepalived) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo docker logs ironic-endpoint-keepalived > /tmp/docker/ironic-endpoint-keepalived/stdout.log 2> /tmp/docker/ironic-endpoint-keepalived/stderr.log", "delta": "0:00:00.055346", "end": "2021-11-19 15:07:35.931374", "item": "ironic-endpoint-keepalived", "msg": "", "rc": 0, "start": "2021-11-19 15:07:35.876028", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
changed: [localhost] => (item=ironic-log-watch) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo docker logs ironic-log-watch > /tmp/docker/ironic-log-watch/stdout.log 2> /tmp/docker/ironic-log-watch/stderr.log", "delta": "0:00:00.439680", "end": "2021-11-19 15:07:36.600765", "item": "ironic-log-watch", "msg": "", "rc": 0, "start": "2021-11-19 15:07:36.161085", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
Friday 19 November 2021  15:07:36 +0000 (0:00:03.275)       0:30:57.853 ******* 

TASK [v1aX_integration_test : Remove ironic container from source cluster (Ephemeral Cluster is kind)] ***
changed: [localhost] => (item=ironic-api) => {"ansible_loop_var": "item", "changed": true, "deprecations": [{"collection_name": "community.docker", "msg": "The container_default_behavior option will change its default value from \"compatibility\" to \"no_defaults\" in community.docker 2.0.0. To remove this warning, please specify an explicit value for it now", "version": "2.0.0"}], "item": "ironic-api"}
changed: [localhost] => (item=ironic-conductor) => {"ansible_loop_var": "item", "changed": true, "deprecations": [{"collection_name": "community.docker", "msg": "The container_default_behavior option will change its default value from \"compatibility\" to \"no_defaults\" in community.docker 2.0.0. To remove this warning, please specify an explicit value for it now", "version": "2.0.0"}], "item": "ironic-conductor"}
changed: [localhost] => (item=ironic-inspector) => {"ansible_loop_var": "item", "changed": true, "deprecations": [{"collection_name": "community.docker", "msg": "The container_default_behavior option will change its default value from \"compatibility\" to \"no_defaults\" in community.docker 2.0.0. To remove this warning, please specify an explicit value for it now", "version": "2.0.0"}], "item": "ironic-inspector"}
changed: [localhost] => (item=dnsmasq) => {"ansible_loop_var": "item", "changed": true, "deprecations": [{"collection_name": "community.docker", "msg": "The container_default_behavior option will change its default value from \"compatibility\" to \"no_defaults\" in community.docker 2.0.0. To remove this warning, please specify an explicit value for it now", "version": "2.0.0"}], "item": "dnsmasq"}
changed: [localhost] => (item=mariadb) => {"ansible_loop_var": "item", "changed": true, "deprecations": [{"collection_name": "community.docker", "msg": "The container_default_behavior option will change its default value from \"compatibility\" to \"no_defaults\" in community.docker 2.0.0. To remove this warning, please specify an explicit value for it now", "version": "2.0.0"}], "item": "mariadb"}
changed: [localhost] => (item=ironic-endpoint-keepalived) => {"ansible_loop_var": "item", "changed": true, "deprecations": [{"collection_name": "community.docker", "msg": "The container_default_behavior option will change its default value from \"compatibility\" to \"no_defaults\" in community.docker 2.0.0. To remove this warning, please specify an explicit value for it now", "version": "2.0.0"}], "item": "ironic-endpoint-keepalived"}
changed: [localhost] => (item=ironic-log-watch) => {"ansible_loop_var": "item", "changed": true, "deprecations": [{"collection_name": "community.docker", "msg": "The container_default_behavior option will change its default value from \"compatibility\" to \"no_defaults\" in community.docker 2.0.0. To remove this warning, please specify an explicit value for it now", "version": "2.0.0"}], "item": "ironic-log-watch"}
[DEPRECATION WARNING]: The container_default_behavior option will change its 
default value from "compatibility" to "no_defaults" in community.docker 2.0.0. 
To remove this warning, please specify an explicit value for it now. This 
feature will be removed from community.docker in version 2.0.0. Deprecation 
warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
Friday 19 November 2021  15:08:47 +0000 (0:01:10.730)       0:32:08.584 ******* 
Friday 19 November 2021  15:08:47 +0000 (0:00:00.063)       0:32:08.647 ******* 

TASK [v1aX_integration_test : Label BMO CRDs.] *********************************
changed: [localhost] => (item=clusterctl.cluster.x-k8s.io="") => {"ansible_loop_var": "item", "changed": true, "cmd": "kubectl label --overwrite crds baremetalhosts.metal3.io clusterctl.cluster.x-k8s.io=\"\"", "delta": "0:00:00.121886", "end": "2021-11-19 15:08:47.830707", "item": "clusterctl.cluster.x-k8s.io=\"\"", "msg": "", "rc": 0, "start": "2021-11-19 15:08:47.708821", "stderr": "", "stderr_lines": [], "stdout": "customresourcedefinition.apiextensions.k8s.io/baremetalhosts.metal3.io labeled", "stdout_lines": ["customresourcedefinition.apiextensions.k8s.io/baremetalhosts.metal3.io labeled"]}
changed: [localhost] => (item=cluster.x-k8s.io/provider="metal3") => {"ansible_loop_var": "item", "changed": true, "cmd": "kubectl label --overwrite crds baremetalhosts.metal3.io cluster.x-k8s.io/provider=\"metal3\"", "delta": "0:00:00.126838", "end": "2021-11-19 15:08:48.184365", "item": "cluster.x-k8s.io/provider=\"metal3\"", "msg": "", "rc": 0, "start": "2021-11-19 15:08:48.057527", "stderr": "", "stderr_lines": [], "stdout": "customresourcedefinition.apiextensions.k8s.io/baremetalhosts.metal3.io labeled", "stdout_lines": ["customresourcedefinition.apiextensions.k8s.io/baremetalhosts.metal3.io labeled"]}
Friday 19 November 2021  15:08:48 +0000 (0:00:00.780)       0:32:09.428 ******* 

TASK [v1aX_integration_test : Obtain target cluster kubeconfig] ****************
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {"value": "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNMmFrTkRRV1JMWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkplRTFVUlhoUFZFVXdUWHBKZUU5V2IxaEVWRTE0VFZSRmVFNTZSVEJOZW1ONFQxWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVFVGQkNucE1ZVVZLVkd4UGFsSlBXbWhyV2t4VFlWQkxZVTFSVW5WUFNqUjVOVE5HVjBsVVFXd3ZOV1E1U0hCbWVGUnFTV280YzB4aGJUbHVPR1JoTUVaQ01Ua0tia2x0WVdsaFkyWmFjbk12UVZKdlJISTRLMFJVUlU1Nk9VODVWR1pMVW1VeGFFMVBVVkV4U1haS2R6SkZTM000Y1cxWksyOHhSWGh3ZDI4MFkzcENRZ3BXTm1Wck1tMVFWbmszYjBSSFFXRkNjSHAyYjI1blMxVmFWa3A2ZUZOSVdUUXpPVEZFUkZoTlZ5czFibEJ2Ym1WbkswZERZVlZyY1hkUE5qWlJlRFZxQ2tjMmFXbDVWRk5JVlRaQlZrOXpZMmR5ZW5sa1RrWXdOSEZQWnpCaGRqSTVkWEY1UVZaMVZWSnFXVVpqYjJwUFN6Y3dka2RoYkRBdk1GSTFSMDFaWVRVS05GUnNUak1yTVRsMVNGQlhSak5GVlVZek1qSXhTMlZVU3pFeVoxQnpXVk5VVG1kVVNXeEZkVFFyWjFWeVpHMUNiV2x0Y1VNMksyNUtXVVJzYWs5bVFncDFhazFKV21OSE1EVnhTaTlVUjFSS1NsVmpRMEYzUlVGQllVNUdUVVZOZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVSkpSMEV4VldSRmQwVkNDaTkzVVVsTlFWbENRV1k0UTBGUlFYZElVVmxFVmxJd1QwSkNXVVZHU0RsTU16VkVURzkzU2pSa1RGbFFSRzh2TkV0dkwycGtjRTlOVFVFd1IwTlRjVWNLVTBsaU0wUlJSVUpEZDFWQlFUUkpRa0ZSUW5sQ2FVODFPSEJQZUZGRU5taDVlWGxPSzFScmNubGlkMDlYTm5CdlVWVlBMekl3Vm1kaFYzTmtMM1ZSZGdwMlJHbEpTWEZKZVhsd1V6TjVaMWxhV2toaVdWSTBhVEEzYzFsek5GWlhLMVZuZHpSNFRVRnVlaXRxT1dSdEszQlNWMWxYWkdsM1dIRnhOVVZYYkc5aUNrbDFiVGRLY2tnemFVczJjMnRqWW1WNlRVbHJhMHB1YldwbE1rUnFObXBXTWsxa1UyZDZiMU40V0VVMmFsSlVkQ3RzVVdwVksyNUZNV0ZhSzA5Rk9UVUtkMkZGUm1OalVsUm5XWGxWWWxJckwyNU5lRU5XVjJKcFYxSTJRbVU1YVVsWkwwOXdXa1l6VFdvMVMzVTNUbWxXYTBOaFdVTkJVRE5JTVZSdU9UQlllUXBXTDNWUVRrSjZiV3RLYUdkWWRXTndNa2h1ZFM4NFZFazNOSEZQT1RCMlZrVkRORXBCVjNaMFltWmlaa3cwV21nME1rZExlRlozTjI5VlFWZ3pVMWw0Q2pCR09VMXNZM1p1YW0xMk5UQk5kVTFtVEhKaU9IQlZNRUZDVm10b2RYQlBRblJwVEU5elRWUUtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjExMS4yNDk6NjQ0MwogIG5hbWU6IHRlc3QxCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiB0ZXN0MQogICAgdXNlcjogdGVzdDEtYWRtaW4KICBuYW1lOiB0ZXN0MS1hZG1pbkB0ZXN0MQpjdXJyZW50LWNvbnRleHQ6IHRlc3QxLWFkbWluQHRlc3QxCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogdGVzdDEtYWRtaW4KICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJGZWtORFFXWjFaMEYzU1VKQlowbEpVSEZ1Vm5OaWMwWnlSR3QzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkR1ZFVlVUVUpGUjBFeFZVVUtRWGhOUzJFelZtbGFXRXAxV2xoU2JHTjZRV1ZHZHpCNVRWUkZlRTFVYTNoT1JFMTVUVlJzWVVaM01IbE5ha1Y0VFZScmVFNUVUVE5OYWtKaFRVUlJlQXBHZWtGV1FtZE9Wa0pCYjFSRWJrNDFZek5TYkdKVWNIUlpXRTR3V2xoS2VrMVNhM2RHZDFsRVZsRlJSRVY0UW5Ka1YwcHNZMjAxYkdSSFZucE1WMFpyQ21KWGJIVk5TVWxDU1dwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFURlFNRWRxVDBGWlYzSnVUbWNyWjNFS09HOUliV1FyY21scVZXRmhOVVJOTkVGWUwxbDRaRlJWUkhkeE0xWkRiMUZ4TlhGMFprcHBNbGRHYmtSeWVuUjVMMHBhVVhKSVUyRXlMM1paT1VkVlN3cDVaQzh5YlRCWGRsZHFWRkpNWm1JMFpucEJia0pzYlRaTFFUVjZlRE0wVlZKSGVVTXdiV05FVW5sUUsybDVURnAxWTJsMFJIaENUV3hLUkVOMFdrUTJDa1JHTkUxc1kzaFRNRGQzU21sSlEzZERVbXB5ZG5wUFNIQkxWV3hqTlhvMk1WZ3ZPV0ZsYTJ0SVlrbDJiVlZTVVc1S09WQnBjVVp5ZEZaMFEwZ3lSSE1LYjFJNWJWZEdVbFF5TkhSMlJVbE9NVm93UVhsR1RHSlNVRFZYUzB3Mk5YbHVURWRVUVVaQ1ZFZzJRbXRTU0cxV01VbG1MMk52TjNkak1sbDVibmswTUFwaU5VNXhhVEJzTWtzNFFVMVFjbHByV2tNMU5HcDVTMEZhWTA1T05EUm9ZMmswU25CWFZqTTJTa2QyVjJreU9HbFRjMnBFUVZwRFRrWktSM0ZWWTBGM0NpdE1UV2h1ZDBsRVFWRkJRbTh3WjNkU2FrRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwSmhRWGRGZDFsRVZsSXdiRUpCZDNkRFoxbEpTM2RaUWtKUlZVZ0tRWGRKZDBoM1dVUldVakJxUWtKbmQwWnZRVlZtTUhabWEwMTFha0Z1YURCMFp6aFBhaTluY1dvclRqSnJOSGQzUkZGWlNrdHZXa2xvZG1OT1FWRkZUQXBDVVVGRVoyZEZRa0ZMVnpFNWRqWmpTRTE2YjBOR1V6QkpabmxyUmsxbk1YTXhlVFJ6ZWpCbk1UQkdkMkpHU0hCMEwyVlBUblJVYlZSQlRGSmtNbUkwQ2pjM1ZXczBlRm8yUzJ0SVozUXlVa2hHV2s4eWFGbzVhVGxtWnpWemJUZERlR0ZuVXpCdEswdzNabXRZYTIwNVdWWTBRbE5JVlN0V2JuRldNbkV6ZEdRS1JYZ3ZVR2h0U2xSclpVUlFiSEl5VlRKSGVHTTRlamhqT0VWek9VWnNkbkY1WkVaSlJsWkVXazVoY0ZwdFNUUXhkblk1V2pGU2VuSnhNM1p6TDFsUFRBcHZOVGx4VWlzMGFrNVlTR3hsSzFWeE0zVkxOMUo0ZWt4dVlXZGFWbFZuV1U5WmNXVnJXV1pNYWxWNGQyTXJaRWRPZEVGR1lXWnNOMUpvUm1oVVFtbDNDbWhRV2xoQ05rMUJOMjVNVFN0bU5TOVBXbFZWYTA5SmVtb3pTSGREVkZBMlJuZDJZMlZWTVVoTFJraDRlazlCUkZCekwyMW5iMlZ6VERKVFZuVkhZMUlLYkdSaVdYSXpSbmRDVmxNck16aE1ZbmRvVVZJdk5HVmFkRFpSVnpkS1dUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0ZGSlFrRkJTME5CVVVWQk1WQXdSMnBQUVZsWGNtNU9aeXRuY1RodlNHMWtLM0pwYWxWaFlUVkVUVFJCV0M5WmVHUlVWVVIzY1ROV1EyOVJDbkUxY1hSbVNta3lWMFp1UkhKNmRIa3ZTbHBSY2toVFlUSXZkbGs1UjFWTGVXUXZNbTB3VjNaWGFsUlNUR1ppTkdaNlFXNUNiRzAyUzBFMWVuZ3pORlVLVWtkNVF6QnRZMFJTZVZBcmFYbE1XblZqYVhSRWVFSk5iRXBFUTNSYVJEWkVSalJOYkdONFV6QTNkMHBwU1VOM1ExSnFjblo2VDBod1MxVnNZelY2TmdveFdDODVZV1ZyYTBoaVNYWnRWVkpSYmtvNVVHbHhSbkowVm5SRFNESkVjMjlTT1cxWFJsSlVNalIwZGtWSlRqRmFNRUY1Umt4aVVsQTFWMHRNTmpWNUNtNU1SMVJCUmtKVVNEWkNhMUpJYlZZeFNXWXZZMjgzZDJNeVdYbHVlVFF3WWpWT2NXa3diREpMT0VGTlVISmFhMXBETlRScWVVdEJXbU5PVGpRMGFHTUthVFJLY0ZkV016WktSM1pYYVRJNGFWTnpha1JCV2tOT1JrcEhjVlZqUVhjclRFMW9ibmRKUkVGUlFVSkJiMGxDUVZGRGQxQTFSMnRGWlRCV1duQjJRd3BuSzFSSFQwOW9WMWt6UTBkS09UaFZOVFl4TkRCRGNUVjVjSGxSZEdaV2RrZEZRV3BSVTFFck4zTkJNVGRHU1dGT055c3paRlYyWXpaalJXTlBVbEZZQ21GWFZ6aEhSRVZvTTBaQ01pOVRNemhOTVhJdlNsRkhiVW8yYmpoaE4ydDZXa0Z0ZUdSWWJuTlZiMHBNTlVkV1NFUmtaazR2Vm00MFJsTjZTalFyUXpnS1JIWlNZMDQxWlVObWEyOXpTRWhhYmtaMFlWWk5TMGxyTTNGa2IyWm9NMUZIZUUwMGIwbERhRGhpUW01cWQxZE1hWFptWjJ4eGNYQnRlVFJxVEhBclpBcHFabWxYZVVWSVlrUnNObTV5ZVc1RWNWbHlORGxPVlVaalRHbEhZMmhCV2xOdlRqSXpTekZrZUV3eGFHRnRTVWxLTUhFd01WbHhjbE5ZY0hoTWVFeFVDbU5FY3pGa2VITlJMMDlsUTBwVFVYY3dXRUoxVVZwSlprcFZVVFZNZWt4alZscDJSMVJXVVZSSlZWZFFaVkYzVVZGNGNqZExjelYzWmtSNE1HWTVZV3NLYUVFeVdTc3lNRUpCYjBkQ1FVNDJUMlZNUzJ4YWNtWTBTVFZYVkV0WVZITTFVREZpVW5KWVNXbFdSMjE0VG1ocE0yOUNhelpMZDAxUFpGVlhVVzQxWmdwWVRHa3JXSEZRY2pOb2VWUlBRaXRoVVhkc1QxaDJaVEJ2VW5oalZ6bG9ZbTR5V2sxNE1uRkVXSFpFY1ZOWFRrVXdjSFJHTm5Oek5GRldSV3hRVUdSdUNuUnBURkp6YUZCQmFFNDVibFZ6ZG1oek1VaHRPRUptVDJOelMzSnRLM1Y2VlRaWE5sQkdhMHhwVGtWd2JHNVNRalF3UlVKc1IybDJRVzlIUWtGUVZDc0taV2h3Ylc1TFZYQTNlV3hMWXpaMU1EaFVjR0ZMWldwTU1rOTVhV28xYnpCcFMyMWtNVVJOUkVkMlF6Sm1aWEI1YlZaemRVTlhabEpzWkZnNFNFRXpiQXBWVEVOcGEzRktSazQwWVd0Uk9VRlFiMUo0TmxkR1IxQllTV2hFTjBJd1dYUmpha3hMWW5abWFsQlZTVkU1V0VsMlRUTnVVM2tyV1ZCVGIyWkJNakZtQ2tkNlV6ZElTSGRRSzFGcWVHcEtjMVYzYjBGRFdWQkROVmh1TTJWWmNqWlBiak40YVdWcVNWSkJiMGRDUVVzM2JVTm5XbWx2Tmtkd0swNVZRVXhLUlRrS05XZHpVa2w2VjFOdVp5dDZNMjVuY1RSeE4wZEliU3QxZGk5bmMyOVNOMDA1U1VsbE5GTk5la3B1T0ZGV2QyWkhOVU15TlVWRWNtTkZZM3BITjBWeVVRcFlhV3N6TlROT1YxRkdUbFl5TUhsUE9XMHJaRGsxUjNrMlQyNU1UMDlyTkRoT1RGZE9ibkk1VkdFMUwyUlljbE5MVjJ0Uk9IUm1VMjU1T1V4VE5rcHJDbU5FVlV0aldXbE5NM1l4TlVWRmNsZDVTeTgyWms1WWVrRnZSMEpCVEVSS1RFNTZLMHhKZWpKUVNrVnJSekpJVGtkTlJVNXlUelZEYjI4M2JrbDNObGtLVjBGR2JGWlhiRmRHVlhWaWRFUk1TV0pUWTJocGEwaDZUamxqU1hKRmJrOXlja2t6VEdVMlVWZGxaamRuY2l0U1pEWlhkMFo1YTB4a1V6aFVURVE0TWdwNFNEVllUa0U1VVRKcmN6WnZjRU5UTkUxTlNEUjJXU3RQWlhrMlNXMVFOak5CZG5BNVZEQkZNMkZTTldkUlpYSk1SWEp2TjBsRWIydHRibkpZYmlzMUNrNVNZWGhxVWtkNFFXOUhRVVpwZEV0VmJDczVPVTlYTURoTmJXeHVXVzlKTkVsMlQwMUpURFl3T0ZnNE9VNWlkbVpMZG5OMU1rOVJTMGxvYVRkMk5qVUtPU3RxYkU1bGNFdFZORkZYY1RKM1UzZDZOMGRJV1dkVUwyVlpTWFV2YmpOWlRWZFpNa1psVERSNmFWbGhTV2d4T0U1VFVGaFVaakExTWtsbU5qUkdZUXBhVFZWWlEybEVkR2R0VG1wUVZHUnNNeTl1VW1WVWNGaG1RVFZzY2s1SmMzTlJkRXRKYXpoM2IwWmFNbmxxVjIxRFdrWkJaRWN3UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K"}, "kind": "Secret", "metadata": {"creationTimestamp": "2021-11-19T14:37:20Z", "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:value": {}}, "f:metadata": {"f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"01b31967-9470-4585-b0ed-36c0e299b987\"}": {}}}, "f:type": {}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:37:20Z"}], "name": "test1-kubeconfig", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "KubeadmControlPlane", "name": "test1", "uid": "01b31967-9470-4585-b0ed-36c0e299b987"}], "resourceVersion": "7729", "uid": "1dc8401b-2626-44c8-a4e3-6fb57e1a3236"}, "type": "cluster.x-k8s.io/secret"}]}
Friday 19 November 2021  15:08:49 +0000 (0:00:00.957)       0:32:10.386 ******* 

TASK [v1aX_integration_test : Decode and save cluster kubeconfig] **************
changed: [localhost] => {"changed": true, "checksum": "2c1f9d7e55c84e9a6627f7bbbdc6afe7110d1bf7", "dest": "/tmp/kubeconfig-test1.yaml", "gid": 1000, "group": "capm3", "md5sum": "5629dc7e803e3b49f86d4e2eb24d0d65", "mode": "0664", "owner": "capm3", "size": 5535, "src": "/home/capm3/.ansible/tmp/ansible-tmp-1637334529.2722933-138958-194999281808137/source", "state": "file", "uid": 1000}
Friday 19 November 2021  15:08:49 +0000 (0:00:00.484)       0:32:10.871 ******* 

TASK [v1aX_integration_test : Create namespace] ********************************
changed: [localhost] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "kind": "Namespace", "metadata": {"creationTimestamp": "2021-11-19T15:08:50Z", "labels": {"kubernetes.io/metadata.name": "metal3"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:08:50Z"}], "name": "metal3", "resourceVersion": "3252", "uid": "5f1ae101-ea43-41b2-ac69-481a77da44d7"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}}
Friday 19 November 2021  15:08:50 +0000 (0:00:00.934)       0:32:11.805 ******* 

TASK [v1aX_integration_test : Configure Ironic Configmap] **********************
changed: [localhost] => {"changed": true, "cmd": "cp /home/capm3/go/src/github.com/metal3-io/baremetal-operator/ironic-deployment/keepalived/ironic_bmo_configmap.env /home/capm3/go/src/github.com/metal3-io/baremetal-operator/ironic-deployment/keepalived/ironic_bmo_configmap.env.orig\ncp /opt/metal3-dev-env/ironic/ironic_bmo_configmap.env  /home/capm3/go/src/github.com/metal3-io/baremetal-operator/ironic-deployment/keepalived/ironic_bmo_configmap.env\n", "delta": "0:00:00.008109", "end": "2021-11-19 15:08:50.866797", "msg": "", "rc": 0, "start": "2021-11-19 15:08:50.858688", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
Friday 19 November 2021  15:08:50 +0000 (0:00:00.277)       0:32:12.083 ******* 

TASK [v1aX_integration_test : Initialize Provider component in target cluster] ***
changed: [localhost] => {"changed": true, "cmd": "clusterctl init --kubeconfig /tmp/kubeconfig-test1.yaml --core cluster-api:v1.0.1 --bootstrap kubeadm:v1.0.1 --control-plane kubeadm:v1.0.1 --infrastructure metal3:v1.0.0 -v 5", "delta": "0:00:49.172041", "end": "2021-11-19 15:09:40.315861", "msg": "", "rc": 0, "start": "2021-11-19 15:08:51.143820", "stderr": "Using configuration File=\"/home/capm3/.cluster-api/clusterctl.yaml\"\nInstalling the clusterctl inventory CRD\nCreating CustomResourceDefinition=\"providers.clusterctl.cluster.x-k8s.io\"\nFetching providers\nFetching File=\"core-components.yaml\" Provider=\"cluster-api\" Type=\"CoreProvider\" Version=\"v1.0.1\"\nFetching File=\"bootstrap-components.yaml\" Provider=\"kubeadm\" Type=\"BootstrapProvider\" Version=\"v1.0.1\"\nFetching File=\"control-plane-components.yaml\" Provider=\"kubeadm\" Type=\"ControlPlaneProvider\" Version=\"v1.0.1\"\nUsing Override=\"infrastructure-components.yaml\" Provider=\"infrastructure-metal3\" Version=\"v1.0.0\"\nFetching File=\"metadata.yaml\" Provider=\"cluster-api\" Type=\"CoreProvider\" Version=\"v1.0.1\"\nFetching File=\"metadata.yaml\" Provider=\"kubeadm\" Type=\"BootstrapProvider\" Version=\"v1.0.1\"\nFetching File=\"metadata.yaml\" Provider=\"kubeadm\" Type=\"ControlPlaneProvider\" Version=\"v1.0.1\"\nUsing Override=\"metadata.yaml\" Provider=\"infrastructure-metal3\" Version=\"v1.0.0\"\nCreating Namespace=\"cert-manager-test\"\nInstalling cert-manager Version=\"v1.5.3\"\nFetching File=\"cert-manager.yaml\" Provider=\"cert-manager\" Type=\"\" Version=\"v1.5.3\"\nCreating Namespace=\"cert-manager\"\nCreating CustomResourceDefinition=\"certificaterequests.cert-manager.io\"\nCreating CustomResourceDefinition=\"certificates.cert-manager.io\"\nCreating CustomResourceDefinition=\"challenges.acme.cert-manager.io\"\nCreating CustomResourceDefinition=\"clusterissuers.cert-manager.io\"\nCreating CustomResourceDefinition=\"issuers.cert-manager.io\"\nCreating CustomResourceDefinition=\"orders.acme.cert-manager.io\"\nCreating ServiceAccount=\"cert-manager-cainjector\" Namespace=\"cert-manager\"\nCreating ServiceAccount=\"cert-manager\" Namespace=\"cert-manager\"\nCreating ServiceAccount=\"cert-manager-webhook\" Namespace=\"cert-manager\"\nCreating ClusterRole=\"cert-manager-cainjector\"\nCreating ClusterRole=\"cert-manager-controller-issuers\"\nCreating ClusterRole=\"cert-manager-controller-clusterissuers\"\nCreating ClusterRole=\"cert-manager-controller-certificates\"\nCreating ClusterRole=\"cert-manager-controller-orders\"\nCreating ClusterRole=\"cert-manager-controller-challenges\"\nCreating ClusterRole=\"cert-manager-controller-ingress-shim\"\nCreating ClusterRole=\"cert-manager-view\"\nCreating ClusterRole=\"cert-manager-edit\"\nCreating ClusterRole=\"cert-manager-controller-approve:cert-manager-io\"\nCreating ClusterRole=\"cert-manager-controller-certificatesigningrequests\"\nCreating ClusterRole=\"cert-manager-webhook:subjectaccessreviews\"\nCreating ClusterRoleBinding=\"cert-manager-cainjector\"\nCreating ClusterRoleBinding=\"cert-manager-controller-issuers\"\nCreating ClusterRoleBinding=\"cert-manager-controller-clusterissuers\"\nCreating ClusterRoleBinding=\"cert-manager-controller-certificates\"\nCreating ClusterRoleBinding=\"cert-manager-controller-orders\"\nCreating ClusterRoleBinding=\"cert-manager-controller-challenges\"\nCreating ClusterRoleBinding=\"cert-manager-controller-ingress-shim\"\nCreating ClusterRoleBinding=\"cert-manager-controller-approve:cert-manager-io\"\nCreating ClusterRoleBinding=\"cert-manager-controller-certificatesigningrequests\"\nCreating ClusterRoleBinding=\"cert-manager-webhook:subjectaccessreviews\"\nCreating Role=\"cert-manager-cainjector:leaderelection\" Namespace=\"kube-system\"\nCreating Role=\"cert-manager:leaderelection\" Namespace=\"kube-system\"\nCreating Role=\"cert-manager-webhook:dynamic-serving\" Namespace=\"cert-manager\"\nCreating RoleBinding=\"cert-manager-cainjector:leaderelection\" Namespace=\"kube-system\"\nCreating RoleBinding=\"cert-manager:leaderelection\" Namespace=\"kube-system\"\nCreating RoleBinding=\"cert-manager-webhook:dynamic-serving\" Namespace=\"cert-manager\"\nCreating Service=\"cert-manager\" Namespace=\"cert-manager\"\nCreating Service=\"cert-manager-webhook\" Namespace=\"cert-manager\"\nCreating Deployment=\"cert-manager-cainjector\" Namespace=\"cert-manager\"\nCreating Deployment=\"cert-manager\" Namespace=\"cert-manager\"\nCreating Deployment=\"cert-manager-webhook\" Namespace=\"cert-manager\"\nCreating MutatingWebhookConfiguration=\"cert-manager-webhook\"\nCreating ValidatingWebhookConfiguration=\"cert-manager-webhook\"\nWaiting for cert-manager to be available...\nUpdating Namespace=\"cert-manager-test\"\nCreating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"\nCreating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"\nCreating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"\nCreating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"\nCreating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"\nCreating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"\nCreating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"\nCreating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"\nCreating Certificate=\"selfsigned-cert\" Namespace=\"cert-manager-test\"\nDeleting Namespace=\"cert-manager-test\"\nDeleting Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"\nDeleting Certificate=\"selfsigned-cert\" Namespace=\"cert-manager-test\"\nInstalling Provider=\"cluster-api\" Version=\"v1.0.1\" TargetNamespace=\"capi-system\"\nCreating objects Provider=\"cluster-api\" Version=\"v1.0.1\" TargetNamespace=\"capi-system\"\nCreating Namespace=\"capi-system\"\nCreating CustomResourceDefinition=\"clusterclasses.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"clusterresourcesetbindings.addons.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"clusterresourcesets.addons.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"clusters.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"machinedeployments.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"machinehealthchecks.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"machinepools.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"machines.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"machinesets.cluster.x-k8s.io\"\nCreating ServiceAccount=\"capi-manager\" Namespace=\"capi-system\"\nCreating Role=\"capi-leader-election-role\" Namespace=\"capi-system\"\nCreating ClusterRole=\"capi-system-capi-aggregated-manager-role\"\nCreating ClusterRole=\"capi-system-capi-manager-role\"\nCreating RoleBinding=\"capi-leader-election-rolebinding\" Namespace=\"capi-system\"\nCreating ClusterRoleBinding=\"capi-system-capi-manager-rolebinding\"\nCreating Service=\"capi-webhook-service\" Namespace=\"capi-system\"\nCreating Deployment=\"capi-controller-manager\" Namespace=\"capi-system\"\nCreating Certificate=\"capi-serving-cert\" Namespace=\"capi-system\"\nCreating Issuer=\"capi-selfsigned-issuer\" Namespace=\"capi-system\"\nCreating MutatingWebhookConfiguration=\"capi-mutating-webhook-configuration\"\nCreating ValidatingWebhookConfiguration=\"capi-validating-webhook-configuration\"\nCreating inventory entry Provider=\"cluster-api\" Version=\"v1.0.1\" TargetNamespace=\"capi-system\"\nInstalling Provider=\"bootstrap-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-bootstrap-system\"\nCreating objects Provider=\"bootstrap-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-bootstrap-system\"\nCreating Namespace=\"capi-kubeadm-bootstrap-system\"\nCreating CustomResourceDefinition=\"kubeadmconfigs.bootstrap.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"kubeadmconfigtemplates.bootstrap.cluster.x-k8s.io\"\nCreating ServiceAccount=\"capi-kubeadm-bootstrap-manager\" Namespace=\"capi-kubeadm-bootstrap-system\"\nCreating Role=\"capi-kubeadm-bootstrap-leader-election-role\" Namespace=\"capi-kubeadm-bootstrap-system\"\nCreating ClusterRole=\"capi-kubeadm-bootstrap-system-capi-kubeadm-bootstrap-manager-role\"\nCreating RoleBinding=\"capi-kubeadm-bootstrap-leader-election-rolebinding\" Namespace=\"capi-kubeadm-bootstrap-system\"\nCreating ClusterRoleBinding=\"capi-kubeadm-bootstrap-system-capi-kubeadm-bootstrap-manager-rolebinding\"\nCreating Service=\"capi-kubeadm-bootstrap-webhook-service\" Namespace=\"capi-kubeadm-bootstrap-system\"\nCreating Deployment=\"capi-kubeadm-bootstrap-controller-manager\" Namespace=\"capi-kubeadm-bootstrap-system\"\nCreating Certificate=\"capi-kubeadm-bootstrap-serving-cert\" Namespace=\"capi-kubeadm-bootstrap-system\"\nCreating Issuer=\"capi-kubeadm-bootstrap-selfsigned-issuer\" Namespace=\"capi-kubeadm-bootstrap-system\"\nCreating ValidatingWebhookConfiguration=\"capi-kubeadm-bootstrap-validating-webhook-configuration\"\nCreating inventory entry Provider=\"bootstrap-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-bootstrap-system\"\nInstalling Provider=\"control-plane-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-control-plane-system\"\nCreating objects Provider=\"control-plane-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-control-plane-system\"\nCreating Namespace=\"capi-kubeadm-control-plane-system\"\nCreating CustomResourceDefinition=\"kubeadmcontrolplanes.controlplane.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"kubeadmcontrolplanetemplates.controlplane.cluster.x-k8s.io\"\nCreating ServiceAccount=\"capi-kubeadm-control-plane-manager\" Namespace=\"capi-kubeadm-control-plane-system\"\nCreating Role=\"capi-kubeadm-control-plane-leader-election-role\" Namespace=\"capi-kubeadm-control-plane-system\"\nCreating ClusterRole=\"capi-kubeadm-control-plane-system-capi-kubeadm-control-plane-aggregated-manager-role\"\nCreating ClusterRole=\"capi-kubeadm-control-plane-system-capi-kubeadm-control-plane-manager-role\"\nCreating RoleBinding=\"capi-kubeadm-control-plane-leader-election-rolebinding\" Namespace=\"capi-kubeadm-control-plane-system\"\nCreating ClusterRoleBinding=\"capi-kubeadm-control-plane-system-capi-kubeadm-control-plane-manager-rolebinding\"\nCreating Service=\"capi-kubeadm-control-plane-webhook-service\" Namespace=\"capi-kubeadm-control-plane-system\"\nCreating Deployment=\"capi-kubeadm-control-plane-controller-manager\" Namespace=\"capi-kubeadm-control-plane-system\"\nCreating Certificate=\"capi-kubeadm-control-plane-serving-cert\" Namespace=\"capi-kubeadm-control-plane-system\"\nCreating Issuer=\"capi-kubeadm-control-plane-selfsigned-issuer\" Namespace=\"capi-kubeadm-control-plane-system\"\nCreating MutatingWebhookConfiguration=\"capi-kubeadm-control-plane-mutating-webhook-configuration\"\nCreating ValidatingWebhookConfiguration=\"capi-kubeadm-control-plane-validating-webhook-configuration\"\nCreating inventory entry Provider=\"control-plane-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-control-plane-system\"\nInstalling Provider=\"infrastructure-metal3\" Version=\"v1.0.0\" TargetNamespace=\"capm3-system\"\nCreating objects Provider=\"infrastructure-metal3\" Version=\"v1.0.0\" TargetNamespace=\"capm3-system\"\nCreating Namespace=\"capm3-system\"\nCreating CustomResourceDefinition=\"ipaddresses.ipam.metal3.io\"\nCreating CustomResourceDefinition=\"ipclaims.ipam.metal3.io\"\nCreating CustomResourceDefinition=\"ippools.ipam.metal3.io\"\nCreating CustomResourceDefinition=\"metal3clusters.infrastructure.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"metal3dataclaims.infrastructure.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"metal3datas.infrastructure.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"metal3datatemplates.infrastructure.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"metal3machines.infrastructure.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"metal3machinetemplates.infrastructure.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"metal3remediations.infrastructure.cluster.x-k8s.io\"\nCreating CustomResourceDefinition=\"metal3remediationtemplates.infrastructure.cluster.x-k8s.io\"\nCreating ServiceAccount=\"capm3-manager\" Namespace=\"capm3-system\"\nCreating ServiceAccount=\"ipam-manager\" Namespace=\"capm3-system\"\nCreating Role=\"capm3-leader-election-role\" Namespace=\"capm3-system\"\nCreating Role=\"ipam-leader-election-role\" Namespace=\"capm3-system\"\nCreating ClusterRole=\"capm3-system-capm3-manager-role\"\nCreating ClusterRole=\"capm3-system-ipam-manager-role\"\nCreating RoleBinding=\"capm3-leader-election-rolebinding\" Namespace=\"capm3-system\"\nCreating RoleBinding=\"ipam-leader-election-rolebinding\" Namespace=\"capm3-system\"\nCreating ClusterRoleBinding=\"capm3-system-capm3-manager-rolebinding\"\nCreating ClusterRoleBinding=\"capm3-system-ipam-manager-rolebinding\"\nCreating Service=\"capm3-webhook-service\" Namespace=\"capm3-system\"\nCreating Service=\"ipam-webhook-service\" Namespace=\"capm3-system\"\nCreating Deployment=\"capm3-controller-manager\" Namespace=\"capm3-system\"\nCreating Deployment=\"ipam-controller-manager\" Namespace=\"capm3-system\"\nCreating Certificate=\"capm3-serving-cert\" Namespace=\"capm3-system\"\nCreating Certificate=\"ipam-serving-cert\" Namespace=\"capm3-system\"\nCreating Issuer=\"capm3-selfsigned-issuer\" Namespace=\"capm3-system\"\nCreating Issuer=\"ipam-selfsigned-issuer\" Namespace=\"capm3-system\"\nCreating MutatingWebhookConfiguration=\"capm3-mutating-webhook-configuration\"\nCreating MutatingWebhookConfiguration=\"ipam-mutating-webhook-configuration\"\nCreating ValidatingWebhookConfiguration=\"capm3-validating-webhook-configuration\"\nCreating ValidatingWebhookConfiguration=\"ipam-validating-webhook-configuration\"\nCreating inventory entry Provider=\"infrastructure-metal3\" Version=\"v1.0.0\" TargetNamespace=\"capm3-system\"\n\nYour management cluster has been initialized successfully!\n\nYou can now create your first workload cluster by running the following:\n\n  clusterctl generate cluster [name] --kubernetes-version [version] | kubectl apply -f -\n\nUsing configuration File=\"/home/capm3/.cluster-api/clusterctl.yaml\"", "stderr_lines": ["Using configuration File=\"/home/capm3/.cluster-api/clusterctl.yaml\"", "Installing the clusterctl inventory CRD", "Creating CustomResourceDefinition=\"providers.clusterctl.cluster.x-k8s.io\"", "Fetching providers", "Fetching File=\"core-components.yaml\" Provider=\"cluster-api\" Type=\"CoreProvider\" Version=\"v1.0.1\"", "Fetching File=\"bootstrap-components.yaml\" Provider=\"kubeadm\" Type=\"BootstrapProvider\" Version=\"v1.0.1\"", "Fetching File=\"control-plane-components.yaml\" Provider=\"kubeadm\" Type=\"ControlPlaneProvider\" Version=\"v1.0.1\"", "Using Override=\"infrastructure-components.yaml\" Provider=\"infrastructure-metal3\" Version=\"v1.0.0\"", "Fetching File=\"metadata.yaml\" Provider=\"cluster-api\" Type=\"CoreProvider\" Version=\"v1.0.1\"", "Fetching File=\"metadata.yaml\" Provider=\"kubeadm\" Type=\"BootstrapProvider\" Version=\"v1.0.1\"", "Fetching File=\"metadata.yaml\" Provider=\"kubeadm\" Type=\"ControlPlaneProvider\" Version=\"v1.0.1\"", "Using Override=\"metadata.yaml\" Provider=\"infrastructure-metal3\" Version=\"v1.0.0\"", "Creating Namespace=\"cert-manager-test\"", "Installing cert-manager Version=\"v1.5.3\"", "Fetching File=\"cert-manager.yaml\" Provider=\"cert-manager\" Type=\"\" Version=\"v1.5.3\"", "Creating Namespace=\"cert-manager\"", "Creating CustomResourceDefinition=\"certificaterequests.cert-manager.io\"", "Creating CustomResourceDefinition=\"certificates.cert-manager.io\"", "Creating CustomResourceDefinition=\"challenges.acme.cert-manager.io\"", "Creating CustomResourceDefinition=\"clusterissuers.cert-manager.io\"", "Creating CustomResourceDefinition=\"issuers.cert-manager.io\"", "Creating CustomResourceDefinition=\"orders.acme.cert-manager.io\"", "Creating ServiceAccount=\"cert-manager-cainjector\" Namespace=\"cert-manager\"", "Creating ServiceAccount=\"cert-manager\" Namespace=\"cert-manager\"", "Creating ServiceAccount=\"cert-manager-webhook\" Namespace=\"cert-manager\"", "Creating ClusterRole=\"cert-manager-cainjector\"", "Creating ClusterRole=\"cert-manager-controller-issuers\"", "Creating ClusterRole=\"cert-manager-controller-clusterissuers\"", "Creating ClusterRole=\"cert-manager-controller-certificates\"", "Creating ClusterRole=\"cert-manager-controller-orders\"", "Creating ClusterRole=\"cert-manager-controller-challenges\"", "Creating ClusterRole=\"cert-manager-controller-ingress-shim\"", "Creating ClusterRole=\"cert-manager-view\"", "Creating ClusterRole=\"cert-manager-edit\"", "Creating ClusterRole=\"cert-manager-controller-approve:cert-manager-io\"", "Creating ClusterRole=\"cert-manager-controller-certificatesigningrequests\"", "Creating ClusterRole=\"cert-manager-webhook:subjectaccessreviews\"", "Creating ClusterRoleBinding=\"cert-manager-cainjector\"", "Creating ClusterRoleBinding=\"cert-manager-controller-issuers\"", "Creating ClusterRoleBinding=\"cert-manager-controller-clusterissuers\"", "Creating ClusterRoleBinding=\"cert-manager-controller-certificates\"", "Creating ClusterRoleBinding=\"cert-manager-controller-orders\"", "Creating ClusterRoleBinding=\"cert-manager-controller-challenges\"", "Creating ClusterRoleBinding=\"cert-manager-controller-ingress-shim\"", "Creating ClusterRoleBinding=\"cert-manager-controller-approve:cert-manager-io\"", "Creating ClusterRoleBinding=\"cert-manager-controller-certificatesigningrequests\"", "Creating ClusterRoleBinding=\"cert-manager-webhook:subjectaccessreviews\"", "Creating Role=\"cert-manager-cainjector:leaderelection\" Namespace=\"kube-system\"", "Creating Role=\"cert-manager:leaderelection\" Namespace=\"kube-system\"", "Creating Role=\"cert-manager-webhook:dynamic-serving\" Namespace=\"cert-manager\"", "Creating RoleBinding=\"cert-manager-cainjector:leaderelection\" Namespace=\"kube-system\"", "Creating RoleBinding=\"cert-manager:leaderelection\" Namespace=\"kube-system\"", "Creating RoleBinding=\"cert-manager-webhook:dynamic-serving\" Namespace=\"cert-manager\"", "Creating Service=\"cert-manager\" Namespace=\"cert-manager\"", "Creating Service=\"cert-manager-webhook\" Namespace=\"cert-manager\"", "Creating Deployment=\"cert-manager-cainjector\" Namespace=\"cert-manager\"", "Creating Deployment=\"cert-manager\" Namespace=\"cert-manager\"", "Creating Deployment=\"cert-manager-webhook\" Namespace=\"cert-manager\"", "Creating MutatingWebhookConfiguration=\"cert-manager-webhook\"", "Creating ValidatingWebhookConfiguration=\"cert-manager-webhook\"", "Waiting for cert-manager to be available...", "Updating Namespace=\"cert-manager-test\"", "Creating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"", "Creating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"", "Creating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"", "Creating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"", "Creating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"", "Creating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"", "Creating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"", "Creating Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"", "Creating Certificate=\"selfsigned-cert\" Namespace=\"cert-manager-test\"", "Deleting Namespace=\"cert-manager-test\"", "Deleting Issuer=\"test-selfsigned\" Namespace=\"cert-manager-test\"", "Deleting Certificate=\"selfsigned-cert\" Namespace=\"cert-manager-test\"", "Installing Provider=\"cluster-api\" Version=\"v1.0.1\" TargetNamespace=\"capi-system\"", "Creating objects Provider=\"cluster-api\" Version=\"v1.0.1\" TargetNamespace=\"capi-system\"", "Creating Namespace=\"capi-system\"", "Creating CustomResourceDefinition=\"clusterclasses.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"clusterresourcesetbindings.addons.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"clusterresourcesets.addons.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"clusters.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"machinedeployments.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"machinehealthchecks.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"machinepools.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"machines.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"machinesets.cluster.x-k8s.io\"", "Creating ServiceAccount=\"capi-manager\" Namespace=\"capi-system\"", "Creating Role=\"capi-leader-election-role\" Namespace=\"capi-system\"", "Creating ClusterRole=\"capi-system-capi-aggregated-manager-role\"", "Creating ClusterRole=\"capi-system-capi-manager-role\"", "Creating RoleBinding=\"capi-leader-election-rolebinding\" Namespace=\"capi-system\"", "Creating ClusterRoleBinding=\"capi-system-capi-manager-rolebinding\"", "Creating Service=\"capi-webhook-service\" Namespace=\"capi-system\"", "Creating Deployment=\"capi-controller-manager\" Namespace=\"capi-system\"", "Creating Certificate=\"capi-serving-cert\" Namespace=\"capi-system\"", "Creating Issuer=\"capi-selfsigned-issuer\" Namespace=\"capi-system\"", "Creating MutatingWebhookConfiguration=\"capi-mutating-webhook-configuration\"", "Creating ValidatingWebhookConfiguration=\"capi-validating-webhook-configuration\"", "Creating inventory entry Provider=\"cluster-api\" Version=\"v1.0.1\" TargetNamespace=\"capi-system\"", "Installing Provider=\"bootstrap-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-bootstrap-system\"", "Creating objects Provider=\"bootstrap-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-bootstrap-system\"", "Creating Namespace=\"capi-kubeadm-bootstrap-system\"", "Creating CustomResourceDefinition=\"kubeadmconfigs.bootstrap.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"kubeadmconfigtemplates.bootstrap.cluster.x-k8s.io\"", "Creating ServiceAccount=\"capi-kubeadm-bootstrap-manager\" Namespace=\"capi-kubeadm-bootstrap-system\"", "Creating Role=\"capi-kubeadm-bootstrap-leader-election-role\" Namespace=\"capi-kubeadm-bootstrap-system\"", "Creating ClusterRole=\"capi-kubeadm-bootstrap-system-capi-kubeadm-bootstrap-manager-role\"", "Creating RoleBinding=\"capi-kubeadm-bootstrap-leader-election-rolebinding\" Namespace=\"capi-kubeadm-bootstrap-system\"", "Creating ClusterRoleBinding=\"capi-kubeadm-bootstrap-system-capi-kubeadm-bootstrap-manager-rolebinding\"", "Creating Service=\"capi-kubeadm-bootstrap-webhook-service\" Namespace=\"capi-kubeadm-bootstrap-system\"", "Creating Deployment=\"capi-kubeadm-bootstrap-controller-manager\" Namespace=\"capi-kubeadm-bootstrap-system\"", "Creating Certificate=\"capi-kubeadm-bootstrap-serving-cert\" Namespace=\"capi-kubeadm-bootstrap-system\"", "Creating Issuer=\"capi-kubeadm-bootstrap-selfsigned-issuer\" Namespace=\"capi-kubeadm-bootstrap-system\"", "Creating ValidatingWebhookConfiguration=\"capi-kubeadm-bootstrap-validating-webhook-configuration\"", "Creating inventory entry Provider=\"bootstrap-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-bootstrap-system\"", "Installing Provider=\"control-plane-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-control-plane-system\"", "Creating objects Provider=\"control-plane-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-control-plane-system\"", "Creating Namespace=\"capi-kubeadm-control-plane-system\"", "Creating CustomResourceDefinition=\"kubeadmcontrolplanes.controlplane.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"kubeadmcontrolplanetemplates.controlplane.cluster.x-k8s.io\"", "Creating ServiceAccount=\"capi-kubeadm-control-plane-manager\" Namespace=\"capi-kubeadm-control-plane-system\"", "Creating Role=\"capi-kubeadm-control-plane-leader-election-role\" Namespace=\"capi-kubeadm-control-plane-system\"", "Creating ClusterRole=\"capi-kubeadm-control-plane-system-capi-kubeadm-control-plane-aggregated-manager-role\"", "Creating ClusterRole=\"capi-kubeadm-control-plane-system-capi-kubeadm-control-plane-manager-role\"", "Creating RoleBinding=\"capi-kubeadm-control-plane-leader-election-rolebinding\" Namespace=\"capi-kubeadm-control-plane-system\"", "Creating ClusterRoleBinding=\"capi-kubeadm-control-plane-system-capi-kubeadm-control-plane-manager-rolebinding\"", "Creating Service=\"capi-kubeadm-control-plane-webhook-service\" Namespace=\"capi-kubeadm-control-plane-system\"", "Creating Deployment=\"capi-kubeadm-control-plane-controller-manager\" Namespace=\"capi-kubeadm-control-plane-system\"", "Creating Certificate=\"capi-kubeadm-control-plane-serving-cert\" Namespace=\"capi-kubeadm-control-plane-system\"", "Creating Issuer=\"capi-kubeadm-control-plane-selfsigned-issuer\" Namespace=\"capi-kubeadm-control-plane-system\"", "Creating MutatingWebhookConfiguration=\"capi-kubeadm-control-plane-mutating-webhook-configuration\"", "Creating ValidatingWebhookConfiguration=\"capi-kubeadm-control-plane-validating-webhook-configuration\"", "Creating inventory entry Provider=\"control-plane-kubeadm\" Version=\"v1.0.1\" TargetNamespace=\"capi-kubeadm-control-plane-system\"", "Installing Provider=\"infrastructure-metal3\" Version=\"v1.0.0\" TargetNamespace=\"capm3-system\"", "Creating objects Provider=\"infrastructure-metal3\" Version=\"v1.0.0\" TargetNamespace=\"capm3-system\"", "Creating Namespace=\"capm3-system\"", "Creating CustomResourceDefinition=\"ipaddresses.ipam.metal3.io\"", "Creating CustomResourceDefinition=\"ipclaims.ipam.metal3.io\"", "Creating CustomResourceDefinition=\"ippools.ipam.metal3.io\"", "Creating CustomResourceDefinition=\"metal3clusters.infrastructure.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"metal3dataclaims.infrastructure.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"metal3datas.infrastructure.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"metal3datatemplates.infrastructure.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"metal3machines.infrastructure.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"metal3machinetemplates.infrastructure.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"metal3remediations.infrastructure.cluster.x-k8s.io\"", "Creating CustomResourceDefinition=\"metal3remediationtemplates.infrastructure.cluster.x-k8s.io\"", "Creating ServiceAccount=\"capm3-manager\" Namespace=\"capm3-system\"", "Creating ServiceAccount=\"ipam-manager\" Namespace=\"capm3-system\"", "Creating Role=\"capm3-leader-election-role\" Namespace=\"capm3-system\"", "Creating Role=\"ipam-leader-election-role\" Namespace=\"capm3-system\"", "Creating ClusterRole=\"capm3-system-capm3-manager-role\"", "Creating ClusterRole=\"capm3-system-ipam-manager-role\"", "Creating RoleBinding=\"capm3-leader-election-rolebinding\" Namespace=\"capm3-system\"", "Creating RoleBinding=\"ipam-leader-election-rolebinding\" Namespace=\"capm3-system\"", "Creating ClusterRoleBinding=\"capm3-system-capm3-manager-rolebinding\"", "Creating ClusterRoleBinding=\"capm3-system-ipam-manager-rolebinding\"", "Creating Service=\"capm3-webhook-service\" Namespace=\"capm3-system\"", "Creating Service=\"ipam-webhook-service\" Namespace=\"capm3-system\"", "Creating Deployment=\"capm3-controller-manager\" Namespace=\"capm3-system\"", "Creating Deployment=\"ipam-controller-manager\" Namespace=\"capm3-system\"", "Creating Certificate=\"capm3-serving-cert\" Namespace=\"capm3-system\"", "Creating Certificate=\"ipam-serving-cert\" Namespace=\"capm3-system\"", "Creating Issuer=\"capm3-selfsigned-issuer\" Namespace=\"capm3-system\"", "Creating Issuer=\"ipam-selfsigned-issuer\" Namespace=\"capm3-system\"", "Creating MutatingWebhookConfiguration=\"capm3-mutating-webhook-configuration\"", "Creating MutatingWebhookConfiguration=\"ipam-mutating-webhook-configuration\"", "Creating ValidatingWebhookConfiguration=\"capm3-validating-webhook-configuration\"", "Creating ValidatingWebhookConfiguration=\"ipam-validating-webhook-configuration\"", "Creating inventory entry Provider=\"infrastructure-metal3\" Version=\"v1.0.0\" TargetNamespace=\"capm3-system\"", "", "Your management cluster has been initialized successfully!", "", "You can now create your first workload cluster by running the following:", "", "  clusterctl generate cluster [name] --kubernetes-version [version] | kubectl apply -f -", "", "Using configuration File=\"/home/capm3/.cluster-api/clusterctl.yaml\""], "stdout": "", "stdout_lines": []}
Friday 19 November 2021  15:09:40 +0000 (0:00:49.463)       0:33:01.547 ******* 

TASK [v1aX_integration_test : Check if cert-manager  pods in running state] ****
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": []}
Friday 19 November 2021  15:09:41 +0000 (0:00:01.340)       0:33:02.887 ******* 

TASK [v1aX_integration_test : Install Baremetal Operator] **********************
changed: [localhost] => {"changed": true, "cmd": "/home/capm3/go/src/github.com/metal3-io/baremetal-operator/tools/deploy.sh true false true true true", "delta": "0:00:09.050732", "end": "2021-11-19 15:09:51.021505", "msg": "", "rc": 0, "start": "2021-11-19 15:09:41.970773", "stderr": "", "stderr_lines": [], "stdout": "make[1]: Entering directory '/home/capm3/go/src/github.com/metal3-io/baremetal-operator'\nmake[1]: 'tools/bin/kustomize' is up to date.\nmake[1]: Leaving directory '/home/capm3/go/src/github.com/metal3-io/baremetal-operator'\n~/go/src/github.com/metal3-io/baremetal-operator ~/go/src/github.com/metal3-io/baremetal-operator\nnamespace/baremetal-operator-system created\ncustomresourcedefinition.apiextensions.k8s.io/baremetalhosts.metal3.io created\ncustomresourcedefinition.apiextensions.k8s.io/firmwareschemas.metal3.io created\ncustomresourcedefinition.apiextensions.k8s.io/hostfirmwaresettings.metal3.io created\ncustomresourcedefinition.apiextensions.k8s.io/preprovisioningimages.metal3.io created\nserviceaccount/baremetal-operator-controller-manager created\nrole.rbac.authorization.k8s.io/baremetal-operator-leader-election-role created\nclusterrole.rbac.authorization.k8s.io/baremetal-operator-manager-role created\nclusterrole.rbac.authorization.k8s.io/baremetal-operator-metrics-reader created\nclusterrole.rbac.authorization.k8s.io/baremetal-operator-proxy-role created\nrolebinding.rbac.authorization.k8s.io/baremetal-operator-leader-election-rolebinding created\nclusterrolebinding.rbac.authorization.k8s.io/baremetal-operator-manager-rolebinding created\nclusterrolebinding.rbac.authorization.k8s.io/baremetal-operator-proxy-rolebinding created\nconfigmap/baremetal-operator-ironic created\nconfigmap/baremetal-operator-manager-config created\nsecret/ironic-credentials-6h8g5h5447 created\nsecret/ironic-inspector-credentials-6h8g5h5447 created\nservice/baremetal-operator-controller-manager-metrics-service created\nservice/baremetal-operator-webhook-service created\ndeployment.apps/baremetal-operator-controller-manager created\ncertificate.cert-manager.io/baremetal-operator-serving-cert created\nissuer.cert-manager.io/baremetal-operator-selfsigned-issuer created\nvalidatingwebhookconfiguration.admissionregistration.k8s.io/baremetal-operator-validating-webhook-configuration created\n~/go/src/github.com/metal3-io/baremetal-operator", "stdout_lines": ["make[1]: Entering directory '/home/capm3/go/src/github.com/metal3-io/baremetal-operator'", "make[1]: 'tools/bin/kustomize' is up to date.", "make[1]: Leaving directory '/home/capm3/go/src/github.com/metal3-io/baremetal-operator'", "~/go/src/github.com/metal3-io/baremetal-operator ~/go/src/github.com/metal3-io/baremetal-operator", "namespace/baremetal-operator-system created", "customresourcedefinition.apiextensions.k8s.io/baremetalhosts.metal3.io created", "customresourcedefinition.apiextensions.k8s.io/firmwareschemas.metal3.io created", "customresourcedefinition.apiextensions.k8s.io/hostfirmwaresettings.metal3.io created", "customresourcedefinition.apiextensions.k8s.io/preprovisioningimages.metal3.io created", "serviceaccount/baremetal-operator-controller-manager created", "role.rbac.authorization.k8s.io/baremetal-operator-leader-election-role created", "clusterrole.rbac.authorization.k8s.io/baremetal-operator-manager-role created", "clusterrole.rbac.authorization.k8s.io/baremetal-operator-metrics-reader created", "clusterrole.rbac.authorization.k8s.io/baremetal-operator-proxy-role created", "rolebinding.rbac.authorization.k8s.io/baremetal-operator-leader-election-rolebinding created", "clusterrolebinding.rbac.authorization.k8s.io/baremetal-operator-manager-rolebinding created", "clusterrolebinding.rbac.authorization.k8s.io/baremetal-operator-proxy-rolebinding created", "configmap/baremetal-operator-ironic created", "configmap/baremetal-operator-manager-config created", "secret/ironic-credentials-6h8g5h5447 created", "secret/ironic-inspector-credentials-6h8g5h5447 created", "service/baremetal-operator-controller-manager-metrics-service created", "service/baremetal-operator-webhook-service created", "deployment.apps/baremetal-operator-controller-manager created", "certificate.cert-manager.io/baremetal-operator-serving-cert created", "issuer.cert-manager.io/baremetal-operator-selfsigned-issuer created", "validatingwebhookconfiguration.admissionregistration.k8s.io/baremetal-operator-validating-webhook-configuration created", "~/go/src/github.com/metal3-io/baremetal-operator"]}
Friday 19 November 2021  15:09:51 +0000 (0:00:09.358)       0:33:12.246 ******* 

TASK [v1aX_integration_test : Reinstate Baremetal Operator Manager] ************
changed: [localhost] => {"changed": true, "cmd": "mv /home/capm3/go/src/github.com/metal3-io/baremetal-operator/config/manager/manager.yaml.orig /home/capm3/go/src/github.com/metal3-io/baremetal-operator/config/manager/manager.yaml", "delta": "0:00:00.007330", "end": "2021-11-19 15:09:51.324272", "msg": "", "rc": 0, "start": "2021-11-19 15:09:51.316942", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
Friday 19 November 2021  15:09:51 +0000 (0:00:00.371)       0:33:12.618 ******* 

TASK [v1aX_integration_test : Install Ironic] **********************************
changed: [localhost] => {"changed": true, "cmd": "/home/capm3/go/src/github.com/metal3-io/baremetal-operator/tools/deploy.sh false true true true true", "delta": "0:00:04.447840", "end": "2021-11-19 15:09:56.138759", "msg": "", "rc": 0, "start": "2021-11-19 15:09:51.690919", "stderr": "Error from server (AlreadyExists): namespaces \"baremetal-operator-system\" already exists", "stderr_lines": ["Error from server (AlreadyExists): namespaces \"baremetal-operator-system\" already exists"], "stdout": "make[1]: Entering directory '/home/capm3/go/src/github.com/metal3-io/baremetal-operator'\nmake[1]: 'tools/bin/kustomize' is up to date.\nmake[1]: Leaving directory '/home/capm3/go/src/github.com/metal3-io/baremetal-operator'\n~/go/src/github.com/metal3-io/baremetal-operator ~/go/src/github.com/metal3-io/baremetal-operator\nnamespace/baremetal-operator-system unchanged\nconfigmap/ironic-bmo-configmap-55b4m5mdh2 created\nconfigmap/ironic-htpasswd-g689hm7kf5 created\nconfigmap/ironic-inspector-htpasswd-c8gt7cm2tf created\nsecret/ironic-auth-config-mhtf2gfc47 created\nsecret/ironic-inspector-auth-config-52278gh92g created\nsecret/ironic-rpc-auth-config-tdtt49fkd6 created\nsecret/mariadb-password-ftkgc8tmkc created\ndeployment.apps/baremetal-operator-ironic created\ncertificate.cert-manager.io/ironic-cacert created\ncertificate.cert-manager.io/ironic-cert created\ncertificate.cert-manager.io/ironic-inspector-cert created\ncertificate.cert-manager.io/mariadb-cert created\nissuer.cert-manager.io/ca-issuer created\nissuer.cert-manager.io/selfsigned-issuer created\n~/go/src/github.com/metal3-io/baremetal-operator", "stdout_lines": ["make[1]: Entering directory '/home/capm3/go/src/github.com/metal3-io/baremetal-operator'", "make[1]: 'tools/bin/kustomize' is up to date.", "make[1]: Leaving directory '/home/capm3/go/src/github.com/metal3-io/baremetal-operator'", "~/go/src/github.com/metal3-io/baremetal-operator ~/go/src/github.com/metal3-io/baremetal-operator", "namespace/baremetal-operator-system unchanged", "configmap/ironic-bmo-configmap-55b4m5mdh2 created", "configmap/ironic-htpasswd-g689hm7kf5 created", "configmap/ironic-inspector-htpasswd-c8gt7cm2tf created", "secret/ironic-auth-config-mhtf2gfc47 created", "secret/ironic-inspector-auth-config-52278gh92g created", "secret/ironic-rpc-auth-config-tdtt49fkd6 created", "secret/mariadb-password-ftkgc8tmkc created", "deployment.apps/baremetal-operator-ironic created", "certificate.cert-manager.io/ironic-cacert created", "certificate.cert-manager.io/ironic-cert created", "certificate.cert-manager.io/ironic-inspector-cert created", "certificate.cert-manager.io/mariadb-cert created", "issuer.cert-manager.io/ca-issuer created", "issuer.cert-manager.io/selfsigned-issuer created", "~/go/src/github.com/metal3-io/baremetal-operator"]}
Friday 19 November 2021  15:09:56 +0000 (0:00:04.747)       0:33:17.365 ******* 

TASK [v1aX_integration_test : Restore original BMO Configmap] ******************
changed: [localhost] => {"changed": true, "cmd": "mv /home/capm3/go/src/github.com/metal3-io/baremetal-operator/config/default/ironic.env.orig /home/capm3/go/src/github.com/metal3-io/baremetal-operator/config/default/ironic.env", "delta": "0:00:00.006342", "end": "2021-11-19 15:09:56.438143", "msg": "", "rc": 0, "start": "2021-11-19 15:09:56.431801", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
Friday 19 November 2021  15:09:56 +0000 (0:00:00.292)       0:33:17.658 ******* 

TASK [v1aX_integration_test : Restore original Ironic Configmap] ***************
changed: [localhost] => {"changed": true, "cmd": "mv /home/capm3/go/src/github.com/metal3-io/baremetal-operator/ironic-deployment/keepalived/ironic_bmo_configmap.env.orig /home/capm3/go/src/github.com/metal3-io/baremetal-operator/ironic-deployment/keepalived/ironic_bmo_configmap.env", "delta": "0:00:00.005751", "end": "2021-11-19 15:09:56.735659", "msg": "", "rc": 0, "start": "2021-11-19 15:09:56.729908", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
Friday 19 November 2021  15:09:56 +0000 (0:00:00.299)       0:33:17.958 ******* 

TASK [v1aX_integration_test : Label BMO CRDs in target cluster.] ***************
changed: [localhost] => (item=clusterctl.cluster.x-k8s.io="") => {"ansible_loop_var": "item", "changed": true, "cmd": "kubectl --kubeconfig /tmp/kubeconfig-test1.yaml label crds baremetalhosts.metal3.io clusterctl.cluster.x-k8s.io=\"\" --overwrite ", "delta": "0:00:00.247411", "end": "2021-11-19 15:09:57.287978", "item": "clusterctl.cluster.x-k8s.io=\"\"", "msg": "", "rc": 0, "start": "2021-11-19 15:09:57.040567", "stderr": "", "stderr_lines": [], "stdout": "customresourcedefinition.apiextensions.k8s.io/baremetalhosts.metal3.io labeled", "stdout_lines": ["customresourcedefinition.apiextensions.k8s.io/baremetalhosts.metal3.io labeled"]}
changed: [localhost] => (item=cluster.x-k8s.io/provider="metal3") => {"ansible_loop_var": "item", "changed": true, "cmd": "kubectl --kubeconfig /tmp/kubeconfig-test1.yaml label crds baremetalhosts.metal3.io cluster.x-k8s.io/provider=\"metal3\" --overwrite ", "delta": "0:00:00.257252", "end": "2021-11-19 15:09:57.770177", "item": "cluster.x-k8s.io/provider=\"metal3\"", "msg": "", "rc": 0, "start": "2021-11-19 15:09:57.512925", "stderr": "", "stderr_lines": [], "stdout": "customresourcedefinition.apiextensions.k8s.io/baremetalhosts.metal3.io labeled", "stdout_lines": ["customresourcedefinition.apiextensions.k8s.io/baremetalhosts.metal3.io labeled"]}
Friday 19 November 2021  15:09:57 +0000 (0:00:01.046)       0:33:19.004 ******* 
FAILED retry: Check if Target pods in running state
kind: Pod
name: baremetal-operator-controller-manager-597f494f94-jcjdt
status:
  conditions:
  -   lastProbeTime: null
      lastTransitionTime: '2021-11-19T15:09:50Z'
      status: 'True'
      type: Initialized
  -   lastProbeTime: null
      lastTransitionTime: '2021-11-19T15:09:50Z'
      message: 'containers with unready status: [manager kube-rbac-proxy]'
      reason: ContainersNotReady
      status: 'False'
      type: Ready
  -   lastProbeTime: null
      lastTransitionTime: '2021-11-19T15:09:50Z'
      message: 'containers with unready status: [manager kube-rbac-proxy]'
      reason: ContainersNotReady
      status: 'False'
      type: ContainersReady
  -   lastProbeTime: null
      lastTransitionTime: '2021-11-19T15:09:50Z'
      status: 'True'
      type: PodScheduled
  containerStatuses:
  -   image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
      imageID: ''
      lastState: {}
      name: kube-rbac-proxy
      ready: false
      restartCount: 0
      started: false
      state:
          waiting:
              reason: ContainerCreating
  -   image: 192.168.111.1:5000/localimages/baremetal-operator
      imageID: ''
      lastState: {}
      name: manager
      ready: false
      restartCount: 0
      started: false
      state:
          waiting:
              reason: ContainerCreating
  hostIP: 192.168.111.103
  phase: Pending
  qosClass: BestEffort
  startTime: '2021-11-19T15:09:50Z'

kind: Pod
name: baremetal-operator-ironic-8666d5c784-cghjj
status:
  conditions:
  -   lastProbeTime: null
      lastTransitionTime: '2021-11-19T15:09:55Z'
      message: 'containers with incomplete status: [ironic-ipa-downloader]'
      reason: ContainersNotInitialized
      status: 'False'
      type: Initialized
  -   lastProbeTime: null
      lastTransitionTime: '2021-11-19T15:09:55Z'
      message: 'containers with unready status: [ironic-api ironic-conductor ironic-inspector
          mariadb ironic-endpoint-keepalived ironic-dnsmasq ironic-log-watch]'
      reason: ContainersNotReady
      status: 'False'
      type: Ready
  -   lastProbeTime: null
      lastTransitionTime: '2021-11-19T15:09:55Z'
      message: 'containers with unready status: [ironic-api ironic-conductor ironic-inspector
          mariadb ironic-endpoint-keepalived ironic-dnsmasq ironic-log-watch]'
      reason: ContainersNotReady
      status: 'False'
      type: ContainersReady
  -   lastProbeTime: null
      lastTransitionTime: '2021-11-19T15:09:55Z'
      status: 'True'
      type: PodScheduled
  containerStatuses:
  -   image: quay.io/metal3-io/ironic
      imageID: ''
      lastState: {}
      name: ironic-api
      ready: false
      restartCount: 0
      started: false
      state:
          waiting:
              reason: PodInitializing
  -   image: quay.io/metal3-io/ironic
      imageID: ''
      lastState: {}
      name: ironic-conductor
      ready: false
      restartCount: 0
      started: false
      state:
          waiting:
              reason: PodInitializing
  -   image: quay.io/metal3-io/ironic
      imageID: ''
      lastState: {}
      name: ironic-dnsmasq
      ready: false
      restartCount: 0
      started: false
      state:
          waiting:
              reason: PodInitializing
  -   image: quay.io/metal3-io/keepalived
      imageID: ''
      lastState: {}
      name: ironic-endpoint-keepalived
      ready: false
      restartCount: 0
      started: false
      state:
          waiting:
              reason: PodInitializing
  -   image: quay.io/metal3-io/ironic
      imageID: ''
      lastState: {}
      name: ironic-inspector
      ready: false
      restartCount: 0
      started: false
      state:
          waiting:
              reason: PodInitializing
  -   image: quay.io/metal3-io/ironic
      imageID: ''
      lastState: {}
      name: ironic-log-watch
      ready: false
      restartCount: 0
      started: false
      state:
          waiting:
              reason: PodInitializing
  -   image: quay.io/metal3-io/ironic
      imageID: ''
      lastState: {}
      name: mariadb
      ready: false
      restartCount: 0
      started: false
      state:
          waiting:
              reason: PodInitializing
  hostIP: 192.168.111.102
  initContainerStatuses:
  -   image: quay.io/metal3-io/ironic-ipa-downloader
      imageID: ''
      lastState: {}
      name: ironic-ipa-downloader
      ready: false
      restartCount: 0
      state:
          waiting:
              reason: PodInitializing
  phase: Pending
  podIP: 192.168.111.102
  podIPs:
  -   ip: 192.168.111.102
  qosClass: BestEffort
  startTime: '2021-11-19T15:09:55Z'

RETRYING: Check if Target pods in running state 1/150
RETRYING: Check if Target pods in running state 2/150
RETRYING: Check if Target pods in running state 3/150
RETRYING: Check if Target pods in running state 4/150

TASK [v1aX_integration_test : Check if Target pods in running state] ***********
ok: [localhost] => {"api_found": true, "attempts": 5, "changed": false, "resources": []}
Friday 19 November 2021  15:11:24 +0000 (0:01:26.278)       0:34:45.282 ******* 

TASK [v1aX_integration_test : Check if Ephemeral pods in running state] ********
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": []}
Friday 19 November 2021  15:11:25 +0000 (0:00:01.007)       0:34:46.290 ******* 

TASK [v1aX_integration_test : Wait for all pods to be in the Ready state on the Management cluster] ***
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:17:02Z", "generateName": "baremetal-operator-controller-manager-597f494f94-", "labels": {"control-plane": "controller-manager", "pod-template-hash": "597f494f94", "webhook": "metal3-io-v1alpha1-baremetalhost"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:control-plane": {}, "f:pod-template-hash": {}, "f:webhook": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"6f98bfc0-e807-4745-bac8-8dd0279c994f\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"kube-rbac-proxy\"}": {".": {}, "f:args": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}, "k:{\"name\":\"manager\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"POD_NAME\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {}}}, "k:{\"name\":\"POD_NAMESPACE\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {}}}}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:securityContext": {".": {}, "f:allowPrivilegeEscalation": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/opt/metal3/auth/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/opt/metal3/auth/ironic-inspector\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/opt/metal3/certs/ca\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"cacert\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"cert\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"ironic-credentials\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"ironic-inspector-credentials\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:17:02Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.13\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:13:02Z"}], "name": "baremetal-operator-controller-manager-597f494f94-79pz9", "namespace": "baremetal-operator-system", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "baremetal-operator-controller-manager-597f494f94", "uid": "6f98bfc0-e807-4745-bac8-8dd0279c994f"}], "resourceVersion": "12302", "uid": "c150fbb0-0061-40de-9710-de9c06142938"}, "spec": {"containers": [{"args": ["--metrics-addr=127.0.0.1:8085", "--enable-leader-election"], "command": ["/baremetal-operator"], "env": [{"name": "POD_NAME", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.name"}}}, {"name": "POD_NAMESPACE", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}}}], "envFrom": [{"configMapRef": {"name": "baremetal-operator-ironic"}}], "image": "192.168.111.1:5000/localimages/baremetal-operator", "imagePullPolicy": "Always", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/healthz", "port": 9440, "scheme": "HTTP"}, "initialDelaySeconds": 15, "periodSeconds": 20, "successThreshold": 1, "timeoutSeconds": 1}, "name": "manager", "ports": [{"containerPort": 9443, "name": "webhook-server", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/readyz", "port": 9440, "scheme": "HTTP"}, "initialDelaySeconds": 5, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "securityContext": {"allowPrivilegeEscalation": false}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/opt/metal3/auth/ironic", "name": "ironic-credentials", "readOnly": true}, {"mountPath": "/opt/metal3/auth/ironic-inspector", "name": "ironic-inspector-credentials", "readOnly": true}, {"mountPath": "/opt/metal3/certs/ca", "name": "cacert", "readOnly": true}, {"mountPath": "/tmp/k8s-webhook-server/serving-certs", "name": "cert", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-lfvnj", "readOnly": true}]}, {"args": ["--secure-listen-address=0.0.0.0:8443", "--upstream=http://127.0.0.1:8085/", "--logtostderr=true", "--v=10"], "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0", "imagePullPolicy": "IfNotPresent", "name": "kube-rbac-proxy", "ports": [{"containerPort": 8443, "name": "https", "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-lfvnj", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "baremetal-operator-controller-manager", "serviceAccountName": "baremetal-operator-controller-manager", "terminationGracePeriodSeconds": 10, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "ironic-credentials", "secret": {"defaultMode": 420, "secretName": "ironic-credentials-6h8g5h5447"}}, {"name": "ironic-inspector-credentials", "secret": {"defaultMode": 420, "secretName": "ironic-inspector-credentials-6h8g5h5447"}}, {"name": "cacert", "secret": {"defaultMode": 420, "secretName": "ironic-cacert"}}, {"name": "cert", "secret": {"defaultMode": 420, "secretName": "bmo-webhook-server-cert"}}, {"name": "kube-api-access-lfvnj", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:17:02Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:13:02Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:13:02Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:17:02Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://bc9db6a892279c40a12afdecebee24646d247b4912315d595324c43746332c44", "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0", "imageID": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c", "lastState": {}, "name": "kube-rbac-proxy", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2021-11-19T14:17:14Z"}}}, {"containerID": "containerd://ab93c2e1f276d67da6eedbc67c702a59c655b544fe3c4ca23c65cd32ff82936d", "image": "192.168.111.1:5000/localimages/baremetal-operator:latest", "imageID": "192.168.111.1:5000/localimages/baremetal-operator@sha256:d1323f075c3f519da71d744f1e0f6c9d5c4b55d971361639442fb0d145fce6ae", "lastState": {"terminated": {"containerID": "containerd://dc98cc4d23da55ec9acc6e05a80ad273b69f4eda95ad25c9671f7269fb79940e", "exitCode": 1, "finishedAt": "2021-11-19T15:07:49Z", "reason": "Error", "startedAt": "2021-11-19T15:06:01Z"}}, "name": "manager", "ready": true, "restartCount": 7, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:12:57Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.13", "podIPs": [{"ip": "10.244.0.13"}], "qosClass": "BestEffort", "startTime": "2021-11-19T14:17:02Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:16:33Z", "generateName": "capi-kubeadm-bootstrap-controller-manager-58945b95bf-", "labels": {"cluster.x-k8s.io/provider": "bootstrap-kubeadm", "control-plane": "controller-manager", "pod-template-hash": "58945b95bf"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:cluster.x-k8s.io/provider": {}, "f:control-plane": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"86e63abf-0661-4cd8-9b41-c3c4a088eace\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"manager\"}": {".": {}, "f:args": {}, "f:command": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"cert\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:16:33Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.9\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:11:13Z"}], "name": "capi-kubeadm-bootstrap-controller-manager-58945b95bf-q2fqv", "namespace": "capi-kubeadm-bootstrap-system", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "capi-kubeadm-bootstrap-controller-manager-58945b95bf", "uid": "86e63abf-0661-4cd8-9b41-c3c4a088eace"}], "resourceVersion": "12105", "uid": "9d4e1507-8d9b-47e6-810b-6f7b52971d10"}, "spec": {"containers": [{"args": ["--leader-elect", "--metrics-bind-addr=localhost:8080", "--feature-gates=MachinePool=false"], "command": ["/manager"], "image": "k8s.gcr.io/cluster-api/kubeadm-bootstrap-controller:v1.0.1", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/healthz", "port": "healthz", "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "manager", "ports": [{"containerPort": 9443, "name": "webhook-server", "protocol": "TCP"}, {"containerPort": 9440, "name": "healthz", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/readyz", "port": "healthz", "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/tmp/k8s-webhook-server/serving-certs", "name": "cert", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-5bbf8", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "capi-kubeadm-bootstrap-manager", "serviceAccountName": "capi-kubeadm-bootstrap-manager", "terminationGracePeriodSeconds": 10, "tolerations": [{"effect": "NoSchedule", "key": "node-role.kubernetes.io/master"}, {"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "cert", "secret": {"defaultMode": 420, "secretName": "capi-kubeadm-bootstrap-webhook-service-cert"}}, {"name": "kube-api-access-5bbf8", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:33Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:11:13Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:11:13Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:33Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://d91f8a9b6175d10315ba2ab322934a6428a19e5c657823a1db7a880b402041b5", "image": "k8s.gcr.io/cluster-api/kubeadm-bootstrap-controller:v1.0.1", "imageID": "k8s.gcr.io/cluster-api/kubeadm-bootstrap-controller@sha256:d43ff6407d9a9b9a1ebbd87c1c06fe2f2f70e59627c5c1b5409091efa953001e", "lastState": {"terminated": {"containerID": "containerd://2dee555ded840fcfac60a2fbfb9c179f7c36571ce9c0e440466fc4ba3463d588", "exitCode": 1, "finishedAt": "2021-11-19T15:05:59Z", "reason": "Error", "startedAt": "2021-11-19T15:05:59Z"}}, "name": "manager", "ready": true, "restartCount": 8, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:11:01Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.9", "podIPs": [{"ip": "10.244.0.9"}], "qosClass": "BestEffort", "startTime": "2021-11-19T14:16:33Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:16:33Z", "generateName": "capi-kubeadm-control-plane-controller-manager-58fc8f8c7c-", "labels": {"cluster.x-k8s.io/provider": "control-plane-kubeadm", "control-plane": "controller-manager", "pod-template-hash": "58fc8f8c7c"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:cluster.x-k8s.io/provider": {}, "f:control-plane": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"f22926dc-8496-4122-af6a-69b139944f2f\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"manager\"}": {".": {}, "f:args": {}, "f:command": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"cert\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:16:33Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.10\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:08:54Z"}], "name": "capi-kubeadm-control-plane-controller-manager-58fc8f8c7c-np8tp", "namespace": "capi-kubeadm-control-plane-system", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "capi-kubeadm-control-plane-controller-manager-58fc8f8c7c", "uid": "f22926dc-8496-4122-af6a-69b139944f2f"}], "resourceVersion": "11953", "uid": "14db36d5-c9fa-419a-8720-5e7006b9deeb"}, "spec": {"containers": [{"args": ["--leader-elect", "--metrics-bind-addr=localhost:8080", "--feature-gates=ClusterTopology=false"], "command": ["/manager"], "image": "k8s.gcr.io/cluster-api/kubeadm-control-plane-controller:v1.0.1", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/healthz", "port": "healthz", "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "manager", "ports": [{"containerPort": 9443, "name": "webhook-server", "protocol": "TCP"}, {"containerPort": 9440, "name": "healthz", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/readyz", "port": "healthz", "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/tmp/k8s-webhook-server/serving-certs", "name": "cert", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-kqhml", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "capi-kubeadm-control-plane-manager", "serviceAccountName": "capi-kubeadm-control-plane-manager", "terminationGracePeriodSeconds": 10, "tolerations": [{"effect": "NoSchedule", "key": "node-role.kubernetes.io/master"}, {"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "cert", "secret": {"defaultMode": 420, "secretName": "capi-kubeadm-control-plane-webhook-service-cert"}}, {"name": "kube-api-access-kqhml", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:33Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:08:54Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:08:54Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:33Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://f6ecc6775df5162c260729ffb5b5e34a388cf9da3022510fb643989feb552831", "image": "k8s.gcr.io/cluster-api/kubeadm-control-plane-controller:v1.0.1", "imageID": "k8s.gcr.io/cluster-api/kubeadm-control-plane-controller@sha256:2bbe09f469ad38d86a2b8586f93a44fedd7247240563fc1805df484d21198b85", "lastState": {"terminated": {"containerID": "containerd://f205adcda9e8d7a671c864aac2ba10e3acc02646f20b448bf29cf765ef0bde01", "exitCode": 1, "finishedAt": "2021-11-19T15:05:59Z", "reason": "Error", "startedAt": "2021-11-19T15:05:59Z"}}, "name": "manager", "ready": true, "restartCount": 6, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:08:52Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.10", "podIPs": [{"ip": "10.244.0.10"}], "qosClass": "BestEffort", "startTime": "2021-11-19T14:16:33Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:16:32Z", "generateName": "capi-controller-manager-576744d8b7-", "labels": {"cluster.x-k8s.io/provider": "cluster-api", "control-plane": "controller-manager", "pod-template-hash": "576744d8b7"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:cluster.x-k8s.io/provider": {}, "f:control-plane": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"57b62a40-e632-4c27-8ef3-d96487942c63\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"manager\"}": {".": {}, "f:args": {}, "f:command": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"cert\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:16:32Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.8\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:13:03Z"}], "name": "capi-controller-manager-576744d8b7-bwj5q", "namespace": "capi-system", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "capi-controller-manager-576744d8b7", "uid": "57b62a40-e632-4c27-8ef3-d96487942c63"}], "resourceVersion": "12310", "uid": "bc62abb6-4cc0-4144-8466-a55cf4ed1e59"}, "spec": {"containers": [{"args": ["--leader-elect", "--metrics-bind-addr=localhost:8080", "--feature-gates=MachinePool=false,ClusterResourceSet=false,ClusterTopology=false"], "command": ["/manager"], "image": "k8s.gcr.io/cluster-api/cluster-api-controller:v1.0.1", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/healthz", "port": "healthz", "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "manager", "ports": [{"containerPort": 9443, "name": "webhook-server", "protocol": "TCP"}, {"containerPort": 9440, "name": "healthz", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/readyz", "port": "healthz", "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/tmp/k8s-webhook-server/serving-certs", "name": "cert", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-z9zvr", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "capi-manager", "serviceAccountName": "capi-manager", "terminationGracePeriodSeconds": 10, "tolerations": [{"effect": "NoSchedule", "key": "node-role.kubernetes.io/master"}, {"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "cert", "secret": {"defaultMode": 420, "secretName": "capi-webhook-service-cert"}}, {"name": "kube-api-access-z9zvr", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:32Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:13:03Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:13:03Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:32Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://b42baba5484a441471d94e39984ab1e8c9961e954ca8eb899a1922936088e468", "image": "k8s.gcr.io/cluster-api/cluster-api-controller:v1.0.1", "imageID": "k8s.gcr.io/cluster-api/cluster-api-controller@sha256:05bda7fe528de43f4e6e46bd86b04348f7c9918a9166f4fd64ae98b7cc322809", "lastState": {"terminated": {"containerID": "containerd://0023c920746db40ad29810318b0a16324a14bd92ec2c5397a5d82cbc998ba137", "exitCode": 1, "finishedAt": "2021-11-19T15:07:49Z", "reason": "Error", "startedAt": "2021-11-19T15:06:00Z"}}, "name": "manager", "ready": true, "restartCount": 8, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:13:01Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.8", "podIPs": [{"ip": "10.244.0.8"}], "qosClass": "BestEffort", "startTime": "2021-11-19T14:16:32Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:16:35Z", "generateName": "capm3-controller-manager-dbdc85bbf-", "labels": {"cluster.x-k8s.io/provider": "infrastructure-metal3", "control-plane": "controller-manager", "controller-tools.k8s.io": "1.0", "pod-template-hash": "dbdc85bbf"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:cluster.x-k8s.io/provider": {}, "f:control-plane": {}, "f:controller-tools.k8s.io": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"1505a248-0b17-4a91-96ed-8d88eccc3d8c\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"manager\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"POD_NAMESPACE\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {}}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"cert\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:16:35Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.12\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:17:05Z"}], "name": "capm3-controller-manager-dbdc85bbf-244k6", "namespace": "capm3-system", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "capm3-controller-manager-dbdc85bbf", "uid": "1505a248-0b17-4a91-96ed-8d88eccc3d8c"}], "resourceVersion": "1468", "uid": "e9ec88de-cea5-437b-a00a-0783f641174b"}, "spec": {"containers": [{"args": ["--webhook-port=9443"], "command": ["/manager"], "env": [{"name": "POD_NAMESPACE", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}}}], "image": "192.168.111.1:5000/localimages/cluster-api-provider-metal3:main", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/healthz", "port": "healthz", "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "manager", "ports": [{"containerPort": 9443, "name": "webhook-server", "protocol": "TCP"}, {"containerPort": 9440, "name": "healthz", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/readyz", "port": "healthz", "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/tmp/k8s-webhook-server/serving-certs", "name": "cert", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-cmsdj", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "capm3-manager", "serviceAccountName": "capm3-manager", "terminationGracePeriodSeconds": 10, "tolerations": [{"effect": "NoSchedule", "key": "node-role.kubernetes.io/master"}, {"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "cert", "secret": {"defaultMode": 420, "secretName": "capm3-webhook-service-cert"}}, {"name": "kube-api-access-cmsdj", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:35Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:17:05Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:17:05Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:35Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://e7856bdff29d1efe5a8f8d2f77ddec51702ca266265b990e30f8c9a907c43edc", "image": "192.168.111.1:5000/localimages/cluster-api-provider-metal3:main", "imageID": "192.168.111.1:5000/localimages/cluster-api-provider-metal3@sha256:496e0e44e4c3a82755aeeba4ad79b6ffb83724aae51ad17e1d2155f2ed0e9c4d", "lastState": {}, "name": "manager", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2021-11-19T14:16:56Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.12", "podIPs": [{"ip": "10.244.0.12"}], "qosClass": "BestEffort", "startTime": "2021-11-19T14:16:35Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:16:35Z", "generateName": "ipam-controller-manager-68bb9b98b4-", "labels": {"cluster.x-k8s.io/provider": "infrastructure-metal3", "control-plane": "controller-manager", "controller-tools.k8s.io": "1.0", "pod-template-hash": "68bb9b98b4"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:cluster.x-k8s.io/provider": {}, "f:control-plane": {}, "f:controller-tools.k8s.io": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"d5dad71b-9e96-4de1-aad5-a793b888676d\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"manager\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"POD_NAMESPACE\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {}}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"cert\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:16:35Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.11\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:16:56Z"}], "name": "ipam-controller-manager-68bb9b98b4-676gf", "namespace": "capm3-system", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "ipam-controller-manager-68bb9b98b4", "uid": "d5dad71b-9e96-4de1-aad5-a793b888676d"}], "resourceVersion": "1331", "uid": "df87df80-ffc8-442d-b64d-6eca90e7882c"}, "spec": {"containers": [{"args": ["--webhook-port=9443"], "command": ["/manager"], "env": [{"name": "POD_NAMESPACE", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}}}], "image": "192.168.111.1:5000/localimages/ip-address-manager:main", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/healthz", "port": "healthz", "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "manager", "ports": [{"containerPort": 9443, "name": "ipam-webhook", "protocol": "TCP"}, {"containerPort": 9440, "name": "healthz", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/readyz", "port": "healthz", "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/tmp/k8s-webhook-server/serving-certs", "name": "cert", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-ngdzm", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "ipam-manager", "serviceAccountName": "ipam-manager", "terminationGracePeriodSeconds": 10, "tolerations": [{"effect": "NoSchedule", "key": "node-role.kubernetes.io/master"}, {"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "cert", "secret": {"defaultMode": 420, "secretName": "ipam-webhook-service-cert"}}, {"name": "kube-api-access-ngdzm", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:35Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:55Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:55Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:35Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://5d30eff6745ec6441aba35d848332cc74aa8126221e3387b8bd397484c7338eb", "image": "192.168.111.1:5000/localimages/ip-address-manager:main", "imageID": "192.168.111.1:5000/localimages/ip-address-manager@sha256:b43e2c4b0954e6f4c878316016123c1d4a9ac8dfba6e185f87ab2fa0f1f0e3f9", "lastState": {}, "name": "manager", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2021-11-19T14:16:52Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.11", "podIPs": [{"ip": "10.244.0.11"}], "qosClass": "BestEffort", "startTime": "2021-11-19T14:16:35Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"prometheus.io/path": "/metrics", "prometheus.io/port": "9402", "prometheus.io/scrape": "true"}, "creationTimestamp": "2021-11-19T14:15:54Z", "generateName": "cert-manager-848f547974-", "labels": {"app": "cert-manager", "app.kubernetes.io/component": "controller", "app.kubernetes.io/instance": "cert-manager", "app.kubernetes.io/name": "cert-manager", "app.kubernetes.io/version": "v1.5.3", "pod-template-hash": "848f547974"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:prometheus.io/path": {}, "f:prometheus.io/port": {}, "f:prometheus.io/scrape": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/component": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/name": {}, "f:app.kubernetes.io/version": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"a33004da-9285-4c5d-8751-49e80bc7abd3\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"cert-manager\"}": {".": {}, "f:args": {}, "f:env": {".": {}, "k:{\"name\":\"POD_NAMESPACE\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {}}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":9402,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {".": {}, "f:runAsNonRoot": {}}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.2\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:06:10Z"}], "name": "cert-manager-848f547974-782cj", "namespace": "cert-manager", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "cert-manager-848f547974", "uid": "a33004da-9285-4c5d-8751-49e80bc7abd3"}], "resourceVersion": "11550", "uid": "c3853f1e-b364-41ac-98a5-64f024f87e52"}, "spec": {"containers": [{"args": ["--v=2", "--cluster-resource-namespace=$(POD_NAMESPACE)", "--leader-election-namespace=kube-system"], "env": [{"name": "POD_NAMESPACE", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}}}], "image": "quay.io/jetstack/cert-manager-controller:v1.5.3", "imagePullPolicy": "IfNotPresent", "name": "cert-manager", "ports": [{"containerPort": 9402, "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-2m4wm", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {"runAsNonRoot": true}, "serviceAccount": "cert-manager", "serviceAccountName": "cert-manager", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "kube-api-access-2m4wm", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:06:00Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:06:00Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://46259d82912997bdb80287f59bb7201c3cd822b094d05d5258297e3d90e0c39a", "image": "quay.io/jetstack/cert-manager-controller:v1.5.3", "imageID": "quay.io/jetstack/cert-manager-controller@sha256:7b039d469ed739a652f3bb8a1ddc122942b66cceeb85bac315449724ee64287f", "lastState": {"terminated": {"containerID": "containerd://1266d52084a7e1d3b636b3aa0e122a7aee5455dac9e7b63001b5bb0b2c6dadbb", "exitCode": 1, "finishedAt": "2021-11-19T15:04:10Z", "reason": "Error", "startedAt": "2021-11-19T14:59:06Z"}}, "name": "cert-manager", "ready": true, "restartCount": 5, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:06:00Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.2", "podIPs": [{"ip": "10.244.0.2"}], "qosClass": "BestEffort", "startTime": "2021-11-19T14:16:10Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:15:54Z", "generateName": "cert-manager-cainjector-54f4cc6b5-", "labels": {"app": "cainjector", "app.kubernetes.io/component": "cainjector", "app.kubernetes.io/instance": "cert-manager", "app.kubernetes.io/name": "cainjector", "app.kubernetes.io/version": "v1.5.3", "pod-template-hash": "54f4cc6b5"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/component": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/name": {}, "f:app.kubernetes.io/version": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"f255bf9a-da78-4eea-a85d-902bc165c0bf\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"cert-manager\"}": {".": {}, "f:args": {}, "f:env": {".": {}, "k:{\"name\":\"POD_NAMESPACE\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {}}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {".": {}, "f:runAsNonRoot": {}}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.5\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:12:57Z"}], "name": "cert-manager-cainjector-54f4cc6b5-dlhs8", "namespace": "cert-manager", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "cert-manager-cainjector-54f4cc6b5", "uid": "f255bf9a-da78-4eea-a85d-902bc165c0bf"}], "resourceVersion": "12291", "uid": "bbca3a4c-b21e-424e-b2dc-bdecc8710c14"}, "spec": {"containers": [{"args": ["--v=2", "--leader-election-namespace=kube-system"], "env": [{"name": "POD_NAMESPACE", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}}}], "image": "quay.io/jetstack/cert-manager-cainjector:v1.5.3", "imagePullPolicy": "IfNotPresent", "name": "cert-manager", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-rqww4", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {"runAsNonRoot": true}, "serviceAccount": "cert-manager-cainjector", "serviceAccountName": "cert-manager-cainjector", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "kube-api-access-rqww4", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:12:57Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:12:57Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://b25a3b3a0dcf1821b8376ca015f2ba10aae84dffc07d0d820c1cc48ce93b3fa8", "image": "quay.io/jetstack/cert-manager-cainjector:v1.5.3", "imageID": "quay.io/jetstack/cert-manager-cainjector@sha256:de02e3f445cfe7c035f2a9939b948c4d043011713389d9437311a62740f20bef", "lastState": {"terminated": {"containerID": "containerd://21b7017d4a11525c617a329c083ee689fca77b0b8d68393eb3a1572bee4a5496", "exitCode": 1, "finishedAt": "2021-11-19T15:07:49Z", "reason": "Error", "startedAt": "2021-11-19T15:06:16Z"}}, "name": "cert-manager", "ready": true, "restartCount": 7, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:12:56Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.5", "podIPs": [{"ip": "10.244.0.5"}], "qosClass": "BestEffort", "startTime": "2021-11-19T14:16:10Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:15:54Z", "generateName": "cert-manager-webhook-7c9588c76-", "labels": {"app": "webhook", "app.kubernetes.io/component": "webhook", "app.kubernetes.io/instance": "cert-manager", "app.kubernetes.io/name": "webhook", "app.kubernetes.io/version": "v1.5.3", "pod-template-hash": "7c9588c76"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/component": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/name": {}, "f:app.kubernetes.io/version": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"429299e5-6936-41d6-ae4d-401bc901fd8a\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"cert-manager\"}": {".": {}, "f:args": {}, "f:env": {".": {}, "k:{\"name\":\"POD_NAMESPACE\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {}}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":10250,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {".": {}, "f:runAsNonRoot": {}}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.6\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:16:25Z"}], "name": "cert-manager-webhook-7c9588c76-g8f4p", "namespace": "cert-manager", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "cert-manager-webhook-7c9588c76", "uid": "429299e5-6936-41d6-ae4d-401bc901fd8a"}], "resourceVersion": "765", "uid": "f70d0fc9-4f48-453c-b77d-3aeae8d85c15"}, "spec": {"containers": [{"args": ["--v=2", "--secure-port=10250", "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)", "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca", "--dynamic-serving-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc"], "env": [{"name": "POD_NAMESPACE", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}}}], "image": "quay.io/jetstack/cert-manager-webhook:v1.5.3", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/livez", "port": 6080, "scheme": "HTTP"}, "initialDelaySeconds": 60, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "cert-manager", "ports": [{"containerPort": 10250, "name": "https", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/healthz", "port": 6080, "scheme": "HTTP"}, "initialDelaySeconds": 5, "periodSeconds": 5, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-4spwl", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {"runAsNonRoot": true}, "serviceAccount": "cert-manager-webhook", "serviceAccountName": "cert-manager-webhook", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "kube-api-access-4spwl", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:25Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:25Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://4d2bc9a6f8f1670e1df62f47fd30286f8971a6a7741ce3ad17f5d3c1c4a54b02", "image": "quay.io/jetstack/cert-manager-webhook:v1.5.3", "imageID": "quay.io/jetstack/cert-manager-webhook@sha256:ed6354190d259524d32ae74471f93bf46bfdcf4df6f73629eedf576cd87e10b8", "lastState": {}, "name": "cert-manager", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2021-11-19T14:16:19Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.6", "podIPs": [{"ip": "10.244.0.6"}], "qosClass": "BestEffort", "startTime": "2021-11-19T14:16:10Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:15:54Z", "generateName": "coredns-78fcd69978-", "labels": {"k8s-app": "kube-dns", "pod-template-hash": "78fcd69978"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:k8s-app": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"08f2cfb5-36c3-497f-b3ed-0e0eaaa496fc\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"coredns\"}": {".": {}, "f:args": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {".": {}, "f:limits": {".": {}, "f:memory": {}}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:securityContext": {".": {}, "f:allowPrivilegeEscalation": {}, "f:capabilities": {".": {}, "f:add": {}, "f:drop": {}}, "f:readOnlyRootFilesystem": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/coredns\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:nodeSelector": {}, "f:priorityClassName": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"config-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.4\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:16:14Z"}], "name": "coredns-78fcd69978-95wlf", "namespace": "kube-system", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "coredns-78fcd69978", "uid": "08f2cfb5-36c3-497f-b3ed-0e0eaaa496fc"}], "resourceVersion": "697", "uid": "063c482b-26db-472a-a3d1-35615d257f0c"}, "spec": {"containers": [{"args": ["-conf", "/etc/coredns/Corefile"], "image": "k8s.gcr.io/coredns/coredns:v1.8.4", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 5, "httpGet": {"path": "/health", "port": 8080, "scheme": "HTTP"}, "initialDelaySeconds": 60, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 5}, "name": "coredns", "ports": [{"containerPort": 53, "name": "dns", "protocol": "UDP"}, {"containerPort": 53, "name": "dns-tcp", "protocol": "TCP"}, {"containerPort": 9153, "name": "metrics", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/ready", "port": 8181, "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {"limits": {"memory": "170Mi"}, "requests": {"cpu": "100m", "memory": "70Mi"}}, "securityContext": {"allowPrivilegeEscalation": false, "capabilities": {"add": ["NET_BIND_SERVICE"], "drop": ["all"]}, "readOnlyRootFilesystem": true}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/coredns", "name": "config-volume", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-fklnv", "readOnly": true}]}], "dnsPolicy": "Default", "enableServiceLinks": true, "nodeName": "kind-control-plane", "nodeSelector": {"kubernetes.io/os": "linux"}, "preemptionPolicy": "PreemptLowerPriority", "priority": 2000000000, "priorityClassName": "system-cluster-critical", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "coredns", "serviceAccountName": "coredns", "terminationGracePeriodSeconds": 30, "tolerations": [{"key": "CriticalAddonsOnly", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node-role.kubernetes.io/master"}, {"effect": "NoSchedule", "key": "node-role.kubernetes.io/control-plane"}, {"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"configMap": {"defaultMode": 420, "items": [{"key": "Corefile", "path": "Corefile"}], "name": "coredns"}, "name": "config-volume"}, {"name": "kube-api-access-fklnv", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:13Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:13Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://7a138c80a8c7b610968ab4fd5960f4c3ded1c9308d251705f11678386f601b00", "image": "k8s.gcr.io/coredns/coredns:v1.8.4", "imageID": "sha256:8d147537fb7d1ac8895da4d55a5e53621949981e2e6460976dae812f83d84a44", "lastState": {}, "name": "coredns", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2021-11-19T14:16:12Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.4", "podIPs": [{"ip": "10.244.0.4"}], "qosClass": "Burstable", "startTime": "2021-11-19T14:16:10Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:15:54Z", "generateName": "coredns-78fcd69978-", "labels": {"k8s-app": "kube-dns", "pod-template-hash": "78fcd69978"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:k8s-app": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"08f2cfb5-36c3-497f-b3ed-0e0eaaa496fc\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"coredns\"}": {".": {}, "f:args": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {".": {}, "f:limits": {".": {}, "f:memory": {}}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:securityContext": {".": {}, "f:allowPrivilegeEscalation": {}, "f:capabilities": {".": {}, "f:add": {}, "f:drop": {}}, "f:readOnlyRootFilesystem": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/coredns\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:nodeSelector": {}, "f:priorityClassName": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"config-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.7\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:16:14Z"}], "name": "coredns-78fcd69978-r5vkh", "namespace": "kube-system", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "coredns-78fcd69978", "uid": "08f2cfb5-36c3-497f-b3ed-0e0eaaa496fc"}], "resourceVersion": "704", "uid": "deaf993e-34e2-4200-a22f-2d14b83df0a7"}, "spec": {"containers": [{"args": ["-conf", "/etc/coredns/Corefile"], "image": "k8s.gcr.io/coredns/coredns:v1.8.4", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 5, "httpGet": {"path": "/health", "port": 8080, "scheme": "HTTP"}, "initialDelaySeconds": 60, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 5}, "name": "coredns", "ports": [{"containerPort": 53, "name": "dns", "protocol": "UDP"}, {"containerPort": 53, "name": "dns-tcp", "protocol": "TCP"}, {"containerPort": 9153, "name": "metrics", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/ready", "port": 8181, "scheme": "HTTP"}, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {"limits": {"memory": "170Mi"}, "requests": {"cpu": "100m", "memory": "70Mi"}}, "securityContext": {"allowPrivilegeEscalation": false, "capabilities": {"add": ["NET_BIND_SERVICE"], "drop": ["all"]}, "readOnlyRootFilesystem": true}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/coredns", "name": "config-volume", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-bxfw2", "readOnly": true}]}], "dnsPolicy": "Default", "enableServiceLinks": true, "nodeName": "kind-control-plane", "nodeSelector": {"kubernetes.io/os": "linux"}, "preemptionPolicy": "PreemptLowerPriority", "priority": 2000000000, "priorityClassName": "system-cluster-critical", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "coredns", "serviceAccountName": "coredns", "terminationGracePeriodSeconds": 30, "tolerations": [{"key": "CriticalAddonsOnly", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node-role.kubernetes.io/master"}, {"effect": "NoSchedule", "key": "node-role.kubernetes.io/control-plane"}, {"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"configMap": {"defaultMode": 420, "items": [{"key": "Corefile", "path": "Corefile"}], "name": "coredns"}, "name": "config-volume"}, {"name": "kube-api-access-bxfw2", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:14Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:14Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://b571dbc5f553a4707a238563bd2a777d023d9f30f079f72085bbf85862cc4f9c", "image": "k8s.gcr.io/coredns/coredns:v1.8.4", "imageID": "sha256:8d147537fb7d1ac8895da4d55a5e53621949981e2e6460976dae812f83d84a44", "lastState": {}, "name": "coredns", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2021-11-19T14:16:13Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.7", "podIPs": [{"ip": "10.244.0.7"}], "qosClass": "Burstable", "startTime": "2021-11-19T14:16:10Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.18.0.2:2379", "kubernetes.io/config.hash": "9454e3931cbae9c78da401223d8b52b6", "kubernetes.io/config.mirror": "9454e3931cbae9c78da401223d8b52b6", "kubernetes.io/config.seen": "2021-11-19T14:15:40.147859954Z", "kubernetes.io/config.source": "file", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "creationTimestamp": "2021-11-19T14:15:40Z", "labels": {"component": "etcd", "tier": "control-plane"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubeadm.kubernetes.io/etcd.advertise-client-urls": {}, "f:kubernetes.io/config.hash": {}, "f:kubernetes.io/config.mirror": {}, "f:kubernetes.io/config.seen": {}, "f:kubernetes.io/config.source": {}}, "f:labels": {".": {}, "f:component": {}, "f:tier": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"41ddd80c-dcb9-4989-9cd3-a66ef9274008\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"etcd\"}": {".": {}, "f:command": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:host": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:resources": {".": {}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:startupProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:host": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/kubernetes/pki/etcd\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/var/lib/etcd\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:hostNetwork": {}, "f:nodeName": {}, "f:priorityClassName": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {".": {}, "f:seccompProfile": {".": {}, "f:type": {}}}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"etcd-certs\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"etcd-data\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T14:15:40Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"172.18.0.2\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:06:16Z"}], "name": "etcd-kind-control-plane", "namespace": "kube-system", "ownerReferences": [{"apiVersion": "v1", "controller": true, "kind": "Node", "name": "kind-control-plane", "uid": "41ddd80c-dcb9-4989-9cd3-a66ef9274008"}], "resourceVersion": "11567", "uid": "c68da599-70e2-4628-8937-2fab1217297f"}, "spec": {"containers": [{"command": ["etcd", "--advertise-client-urls=https://172.18.0.2:2379", "--cert-file=/etc/kubernetes/pki/etcd/server.crt", "--client-cert-auth=true", "--data-dir=/var/lib/etcd", "--initial-advertise-peer-urls=https://172.18.0.2:2380", "--initial-cluster=kind-control-plane=https://172.18.0.2:2380", "--key-file=/etc/kubernetes/pki/etcd/server.key", "--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.2:2379", "--listen-metrics-urls=http://127.0.0.1:2381", "--listen-peer-urls=https://172.18.0.2:2380", "--name=kind-control-plane", "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt", "--peer-client-cert-auth=true", "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key", "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt", "--snapshot-count=10000", "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"], "image": "k8s.gcr.io/etcd:3.5.0-0", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 8, "httpGet": {"host": "127.0.0.1", "path": "/health", "port": 2381, "scheme": "HTTP"}, "initialDelaySeconds": 10, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 15}, "name": "etcd", "resources": {"requests": {"cpu": "100m", "memory": "100Mi"}}, "startupProbe": {"failureThreshold": 24, "httpGet": {"host": "127.0.0.1", "path": "/health", "port": 2381, "scheme": "HTTP"}, "initialDelaySeconds": 10, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 15}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/lib/etcd", "name": "etcd-data"}, {"mountPath": "/etc/kubernetes/pki/etcd", "name": "etcd-certs"}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "hostNetwork": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 2000001000, "priorityClassName": "system-node-critical", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {"seccompProfile": {"type": "RuntimeDefault"}}, "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "operator": "Exists"}], "volumes": [{"hostPath": {"path": "/etc/kubernetes/pki/etcd", "type": "DirectoryOrCreate"}, "name": "etcd-certs"}, {"hostPath": {"path": "/var/lib/etcd", "type": "DirectoryOrCreate"}, "name": "etcd-data"}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:40Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:06:16Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:06:16Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:40Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://596d334db9883a0fda1b92466e7532df72f219650c2ef0003736bcb690ffd431", "image": "k8s.gcr.io/etcd:3.5.0-0", "imageID": "sha256:0048118155842e4c91f0498dd298b8e93dc3aecc7052d9882b76f48e311a76ba", "lastState": {"terminated": {"containerID": "containerd://9581e0dbb821676e6646d4db34783027ccaf7dacdb33815fbb7a692dd38ad8d2", "exitCode": 137, "finishedAt": "2021-11-19T15:05:58Z", "reason": "Error", "startedAt": "2021-11-19T14:15:33Z"}}, "name": "etcd", "ready": true, "restartCount": 1, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:05:59Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "172.18.0.2", "podIPs": [{"ip": "172.18.0.2"}], "qosClass": "Burstable", "startTime": "2021-11-19T14:15:40Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:15:54Z", "generateName": "kindnet-", "labels": {"app": "kindnet", "controller-revision-hash": "b9f8bd48c", "k8s-app": "kindnet", "pod-template-generation": "1", "tier": "node"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:controller-revision-hash": {}, "f:k8s-app": {}, "f:pod-template-generation": {}, "f:tier": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"b2c3e068-fb82-4324-8499-84edc9461726\"}": {}}}, "f:spec": {"f:affinity": {".": {}, "f:nodeAffinity": {".": {}, "f:requiredDuringSchedulingIgnoredDuringExecution": {}}}, "f:containers": {"k:{\"name\":\"kindnet-cni\"}": {".": {}, "f:env": {".": {}, "k:{\"name\":\"CONTROL_PLANE_ENDPOINT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"HOST_IP\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {}}}, "k:{\"name\":\"POD_IP\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {}}}, "k:{\"name\":\"POD_SUBNET\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {".": {}, "f:limits": {".": {}, "f:cpu": {}, "f:memory": {}}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:securityContext": {".": {}, "f:capabilities": {".": {}, "f:add": {}}, "f:privileged": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/cni/net.d\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/lib/modules\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/run/xtables.lock\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:hostNetwork": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"cni-cfg\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"lib-modules\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"xtables-lock\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"172.18.0.2\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:06:10Z"}], "name": "kindnet-2l6xp", "namespace": "kube-system", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "DaemonSet", "name": "kindnet", "uid": "b2c3e068-fb82-4324-8499-84edc9461726"}], "resourceVersion": "11552", "uid": "6507d3fa-1dd2-496a-b50a-5f553c5d7b07"}, "spec": {"affinity": {"nodeAffinity": {"requiredDuringSchedulingIgnoredDuringExecution": {"nodeSelectorTerms": [{"matchFields": [{"key": "metadata.name", "operator": "In", "values": ["kind-control-plane"]}]}]}}}, "containers": [{"env": [{"name": "HOST_IP", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "status.hostIP"}}}, {"name": "POD_IP", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "status.podIP"}}}, {"name": "POD_SUBNET", "value": "10.244.0.0/16"}, {"name": "CONTROL_PLANE_ENDPOINT", "value": "kind-control-plane:6443"}], "image": "docker.io/kindest/kindnetd:v20211103-24515ddb", "imagePullPolicy": "IfNotPresent", "name": "kindnet-cni", "resources": {"limits": {"cpu": "100m", "memory": "50Mi"}, "requests": {"cpu": "100m", "memory": "50Mi"}}, "securityContext": {"capabilities": {"add": ["NET_RAW", "NET_ADMIN"]}, "privileged": false}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/cni/net.d", "name": "cni-cfg"}, {"mountPath": "/run/xtables.lock", "name": "xtables-lock"}, {"mountPath": "/lib/modules", "name": "lib-modules", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-whp9g", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "hostNetwork": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "kindnet", "serviceAccountName": "kindnet", "terminationGracePeriodSeconds": 30, "tolerations": [{"operator": "Exists"}, {"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists"}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/disk-pressure", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/pid-pressure", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/unschedulable", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/network-unavailable", "operator": "Exists"}], "volumes": [{"hostPath": {"path": "/etc/cni/net.d", "type": ""}, "name": "cni-cfg"}, {"hostPath": {"path": "/run/xtables.lock", "type": "FileOrCreate"}, "name": "xtables-lock"}, {"hostPath": {"path": "/lib/modules", "type": ""}, "name": "lib-modules"}, {"name": "kube-api-access-whp9g", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:54Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:06:02Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:06:02Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:54Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://09ec70c64e9a274f6e30794a46323907944df65cc00445fd901935661687bf84", "image": "docker.io/kindest/kindnetd:v20211103-24515ddb", "imageID": "sha256:23a0a5050d46e58e8b223382e558c695b545b4c9454148ed70020a649c32d9bb", "lastState": {"terminated": {"containerID": "containerd://18fe0c0799fe429a6b42d0fede05fd2d92e299c71b2eaa2ce2353dcbede21a1b", "exitCode": 2, "finishedAt": "2021-11-19T15:04:59Z", "reason": "Error", "startedAt": "2021-11-19T14:54:56Z"}}, "name": "kindnet-cni", "ready": true, "restartCount": 3, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:06:01Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "172.18.0.2", "podIPs": [{"ip": "172.18.0.2"}], "qosClass": "Guaranteed", "startTime": "2021-11-19T14:15:54Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.18.0.2:6443", "kubernetes.io/config.hash": "feab560066fbc9f478bbfe5dff38e758", "kubernetes.io/config.mirror": "feab560066fbc9f478bbfe5dff38e758", "kubernetes.io/config.seen": "2021-11-19T14:15:40.147880755Z", "kubernetes.io/config.source": "file", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "creationTimestamp": "2021-11-19T14:15:40Z", "labels": {"component": "kube-apiserver", "tier": "control-plane"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": {}, "f:kubernetes.io/config.hash": {}, "f:kubernetes.io/config.mirror": {}, "f:kubernetes.io/config.seen": {}, "f:kubernetes.io/config.source": {}}, "f:labels": {".": {}, "f:component": {}, "f:tier": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"41ddd80c-dcb9-4989-9cd3-a66ef9274008\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"kube-apiserver\"}": {".": {}, "f:command": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:host": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:host": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {".": {}, "f:requests": {".": {}, "f:cpu": {}}}, "f:startupProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:host": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/ca-certificates\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/etc/kubernetes/pki\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/etc/ssl/certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/usr/local/share/ca-certificates\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/usr/share/ca-certificates\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:hostNetwork": {}, "f:nodeName": {}, "f:priorityClassName": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {".": {}, "f:seccompProfile": {".": {}, "f:type": {}}}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"ca-certs\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"etc-ca-certificates\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"k8s-certs\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"usr-local-share-ca-certificates\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"usr-share-ca-certificates\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T14:15:40Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"172.18.0.2\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:11:33Z"}], "name": "kube-apiserver-kind-control-plane", "namespace": "kube-system", "ownerReferences": [{"apiVersion": "v1", "controller": true, "kind": "Node", "name": "kind-control-plane", "uid": "41ddd80c-dcb9-4989-9cd3-a66ef9274008"}], "resourceVersion": "12158", "uid": "a66a1d17-e0c3-411f-905a-0e44d0e0fb7b"}, "spec": {"containers": [{"command": ["kube-apiserver", "--advertise-address=172.18.0.2", "--allow-privileged=true", "--authorization-mode=Node,RBAC", "--client-ca-file=/etc/kubernetes/pki/ca.crt", "--enable-admission-plugins=NodeRestriction", "--enable-bootstrap-token-auth=true", "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt", "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt", "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key", "--etcd-servers=https://127.0.0.1:2379", "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt", "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key", "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname", "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt", "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key", "--requestheader-allowed-names=front-proxy-client", "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt", "--requestheader-extra-headers-prefix=X-Remote-Extra-", "--requestheader-group-headers=X-Remote-Group", "--requestheader-username-headers=X-Remote-User", "--runtime-config=", "--secure-port=6443", "--service-account-issuer=https://kubernetes.default.svc.cluster.local", "--service-account-key-file=/etc/kubernetes/pki/sa.pub", "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key", "--service-cluster-ip-range=10.96.0.0/16", "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt", "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"], "image": "k8s.gcr.io/kube-apiserver:v1.22.2", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 8, "httpGet": {"host": "172.18.0.2", "path": "/livez", "port": 6443, "scheme": "HTTPS"}, "initialDelaySeconds": 10, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 15}, "name": "kube-apiserver", "readinessProbe": {"failureThreshold": 3, "httpGet": {"host": "172.18.0.2", "path": "/readyz", "port": 6443, "scheme": "HTTPS"}, "periodSeconds": 1, "successThreshold": 1, "timeoutSeconds": 15}, "resources": {"requests": {"cpu": "250m"}}, "startupProbe": {"failureThreshold": 24, "httpGet": {"host": "172.18.0.2", "path": "/livez", "port": 6443, "scheme": "HTTPS"}, "initialDelaySeconds": 10, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 15}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/ssl/certs", "name": "ca-certs", "readOnly": true}, {"mountPath": "/etc/ca-certificates", "name": "etc-ca-certificates", "readOnly": true}, {"mountPath": "/etc/kubernetes/pki", "name": "k8s-certs", "readOnly": true}, {"mountPath": "/usr/local/share/ca-certificates", "name": "usr-local-share-ca-certificates", "readOnly": true}, {"mountPath": "/usr/share/ca-certificates", "name": "usr-share-ca-certificates", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "hostNetwork": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 2000001000, "priorityClassName": "system-node-critical", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {"seccompProfile": {"type": "RuntimeDefault"}}, "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "operator": "Exists"}], "volumes": [{"hostPath": {"path": "/etc/ssl/certs", "type": "DirectoryOrCreate"}, "name": "ca-certs"}, {"hostPath": {"path": "/etc/ca-certificates", "type": "DirectoryOrCreate"}, "name": "etc-ca-certificates"}, {"hostPath": {"path": "/etc/kubernetes/pki", "type": "DirectoryOrCreate"}, "name": "k8s-certs"}, {"hostPath": {"path": "/usr/local/share/ca-certificates", "type": "DirectoryOrCreate"}, "name": "usr-local-share-ca-certificates"}, {"hostPath": {"path": "/usr/share/ca-certificates", "type": "DirectoryOrCreate"}, "name": "usr-share-ca-certificates"}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:41Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:11:33Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:11:33Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:41Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://246ea49c66729f3290a1398661654f0699e268c134c9854fa74f575ff73a68b8", "image": "k8s.gcr.io/kube-apiserver:v1.22.2", "imageID": "sha256:48c4dd55f793a773e3e6ec97e96380014cd0446825efc36396d1691aecfbecc8", "lastState": {"terminated": {"containerID": "containerd://f85af3adb8d24a601d860f53d13ce1e6e820a31e05e009c8c538cfcf56a669cc", "exitCode": 137, "finishedAt": "2021-11-19T15:05:10Z", "reason": "Error", "startedAt": "2021-11-19T14:54:54Z"}}, "name": "kube-apiserver", "ready": true, "restartCount": 3, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:06:00Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "172.18.0.2", "podIPs": [{"ip": "172.18.0.2"}], "qosClass": "Burstable", "startTime": "2021-11-19T14:15:41Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"kubernetes.io/config.hash": "224f139f4c77b96313e2f4789db91337", "kubernetes.io/config.mirror": "224f139f4c77b96313e2f4789db91337", "kubernetes.io/config.seen": "2021-11-19T14:15:40.147882755Z", "kubernetes.io/config.source": "file", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "creationTimestamp": "2021-11-19T14:15:40Z", "labels": {"component": "kube-controller-manager", "tier": "control-plane"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubernetes.io/config.hash": {}, "f:kubernetes.io/config.mirror": {}, "f:kubernetes.io/config.seen": {}, "f:kubernetes.io/config.source": {}}, "f:labels": {".": {}, "f:component": {}, "f:tier": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"41ddd80c-dcb9-4989-9cd3-a66ef9274008\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"kube-controller-manager\"}": {".": {}, "f:command": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:host": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:resources": {".": {}, "f:requests": {".": {}, "f:cpu": {}}}, "f:startupProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:host": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/ca-certificates\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/etc/kubernetes/controller-manager.conf\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/etc/kubernetes/pki\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/etc/ssl/certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/usr/libexec/kubernetes/kubelet-plugins/volume/exec\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/usr/local/share/ca-certificates\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/usr/share/ca-certificates\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:hostNetwork": {}, "f:nodeName": {}, "f:priorityClassName": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {".": {}, "f:seccompProfile": {".": {}, "f:type": {}}}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"ca-certs\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"etc-ca-certificates\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"flexvolume-dir\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"k8s-certs\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"kubeconfig\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"usr-local-share-ca-certificates\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"usr-share-ca-certificates\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T14:15:40Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"172.18.0.2\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:11:09Z"}], "name": "kube-controller-manager-kind-control-plane", "namespace": "kube-system", "ownerReferences": [{"apiVersion": "v1", "controller": true, "kind": "Node", "name": "kind-control-plane", "uid": "41ddd80c-dcb9-4989-9cd3-a66ef9274008"}], "resourceVersion": "12098", "uid": "c4cd00c7-487a-479d-9680-b5b05d6eb5bd"}, "spec": {"containers": [{"command": ["kube-controller-manager", "--allocate-node-cidrs=true", "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf", "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf", "--bind-address=127.0.0.1", "--client-ca-file=/etc/kubernetes/pki/ca.crt", "--cluster-cidr=10.244.0.0/16", "--cluster-name=kind", "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt", "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key", "--controllers=*,bootstrapsigner,tokencleaner", "--enable-hostpath-provisioner=true", "--kubeconfig=/etc/kubernetes/controller-manager.conf", "--leader-elect=true", "--port=0", "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt", "--root-ca-file=/etc/kubernetes/pki/ca.crt", "--service-account-private-key-file=/etc/kubernetes/pki/sa.key", "--service-cluster-ip-range=10.96.0.0/16", "--use-service-account-credentials=true"], "image": "k8s.gcr.io/kube-controller-manager:v1.22.2", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 8, "httpGet": {"host": "127.0.0.1", "path": "/healthz", "port": 10257, "scheme": "HTTPS"}, "initialDelaySeconds": 10, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 15}, "name": "kube-controller-manager", "resources": {"requests": {"cpu": "200m"}}, "startupProbe": {"failureThreshold": 24, "httpGet": {"host": "127.0.0.1", "path": "/healthz", "port": 10257, "scheme": "HTTPS"}, "initialDelaySeconds": 10, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 15}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/ssl/certs", "name": "ca-certs", "readOnly": true}, {"mountPath": "/etc/ca-certificates", "name": "etc-ca-certificates", "readOnly": true}, {"mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "name": "flexvolume-dir"}, {"mountPath": "/etc/kubernetes/pki", "name": "k8s-certs", "readOnly": true}, {"mountPath": "/etc/kubernetes/controller-manager.conf", "name": "kubeconfig", "readOnly": true}, {"mountPath": "/usr/local/share/ca-certificates", "name": "usr-local-share-ca-certificates", "readOnly": true}, {"mountPath": "/usr/share/ca-certificates", "name": "usr-share-ca-certificates", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "hostNetwork": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 2000001000, "priorityClassName": "system-node-critical", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {"seccompProfile": {"type": "RuntimeDefault"}}, "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "operator": "Exists"}], "volumes": [{"hostPath": {"path": "/etc/ssl/certs", "type": "DirectoryOrCreate"}, "name": "ca-certs"}, {"hostPath": {"path": "/etc/ca-certificates", "type": "DirectoryOrCreate"}, "name": "etc-ca-certificates"}, {"hostPath": {"path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "type": "DirectoryOrCreate"}, "name": "flexvolume-dir"}, {"hostPath": {"path": "/etc/kubernetes/pki", "type": "DirectoryOrCreate"}, "name": "k8s-certs"}, {"hostPath": {"path": "/etc/kubernetes/controller-manager.conf", "type": "FileOrCreate"}, "name": "kubeconfig"}, {"hostPath": {"path": "/usr/local/share/ca-certificates", "type": "DirectoryOrCreate"}, "name": "usr-local-share-ca-certificates"}, {"hostPath": {"path": "/usr/share/ca-certificates", "type": "DirectoryOrCreate"}, "name": "usr-share-ca-certificates"}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:40Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:11:09Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:11:09Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:40Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://3c720ded1e644dce226569296efdda571988638c15ce4b4c80a5660df76c3e37", "image": "k8s.gcr.io/kube-controller-manager:v1.22.2", "imageID": "sha256:d9100099bd753934fefe669f4765f828f66466710732ed45084a46094b210085", "lastState": {"terminated": {"containerID": "containerd://694f427d94e19fd4779075d165891b2e6a6e7701cbbb4947c864acae894b34e6", "exitCode": 255, "finishedAt": "2021-11-19T15:07:51Z", "reason": "Error", "startedAt": "2021-11-19T15:06:00Z"}}, "name": "kube-controller-manager", "ready": true, "restartCount": 7, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:10:55Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "172.18.0.2", "podIPs": [{"ip": "172.18.0.2"}], "qosClass": "Burstable", "startTime": "2021-11-19T14:15:40Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:15:54Z", "generateName": "kube-proxy-", "labels": {"controller-revision-hash": "cf788cf7d", "k8s-app": "kube-proxy", "pod-template-generation": "1"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:controller-revision-hash": {}, "f:k8s-app": {}, "f:pod-template-generation": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"167f0ef1-dd68-49fe-a650-7a7f19909b37\"}": {}}}, "f:spec": {"f:affinity": {".": {}, "f:nodeAffinity": {".": {}, "f:requiredDuringSchedulingIgnoredDuringExecution": {}}}, "f:containers": {"k:{\"name\":\"kube-proxy\"}": {".": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"NODE_NAME\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {}}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:securityContext": {".": {}, "f:privileged": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/lib/modules\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/run/xtables.lock\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/var/lib/kube-proxy\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:hostNetwork": {}, "f:nodeSelector": {}, "f:priorityClassName": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"kube-proxy\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"lib-modules\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"xtables-lock\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"172.18.0.2\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:15:59Z"}], "name": "kube-proxy-wtx2w", "namespace": "kube-system", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "DaemonSet", "name": "kube-proxy", "uid": "167f0ef1-dd68-49fe-a650-7a7f19909b37"}], "resourceVersion": "627", "uid": "55b0e08b-35a2-46eb-937f-58b50acf3a31"}, "spec": {"affinity": {"nodeAffinity": {"requiredDuringSchedulingIgnoredDuringExecution": {"nodeSelectorTerms": [{"matchFields": [{"key": "metadata.name", "operator": "In", "values": ["kind-control-plane"]}]}]}}}, "containers": [{"command": ["/usr/local/bin/kube-proxy", "--config=/var/lib/kube-proxy/config.conf", "--hostname-override=$(NODE_NAME)"], "env": [{"name": "NODE_NAME", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "spec.nodeName"}}}], "image": "k8s.gcr.io/kube-proxy:v1.22.2", "imagePullPolicy": "IfNotPresent", "name": "kube-proxy", "resources": {}, "securityContext": {"privileged": true}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/lib/kube-proxy", "name": "kube-proxy"}, {"mountPath": "/run/xtables.lock", "name": "xtables-lock"}, {"mountPath": "/lib/modules", "name": "lib-modules", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-vwwbl", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "hostNetwork": true, "nodeName": "kind-control-plane", "nodeSelector": {"kubernetes.io/os": "linux"}, "preemptionPolicy": "PreemptLowerPriority", "priority": 2000001000, "priorityClassName": "system-node-critical", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "kube-proxy", "serviceAccountName": "kube-proxy", "terminationGracePeriodSeconds": 30, "tolerations": [{"operator": "Exists"}, {"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists"}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/disk-pressure", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/pid-pressure", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/unschedulable", "operator": "Exists"}, {"effect": "NoSchedule", "key": "node.kubernetes.io/network-unavailable", "operator": "Exists"}], "volumes": [{"configMap": {"defaultMode": 420, "name": "kube-proxy"}, "name": "kube-proxy"}, {"hostPath": {"path": "/run/xtables.lock", "type": "FileOrCreate"}, "name": "xtables-lock"}, {"hostPath": {"path": "/lib/modules", "type": ""}, "name": "lib-modules"}, {"name": "kube-api-access-vwwbl", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:54Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:59Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:59Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:54Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://ef67b034470f81ca4ca9cc0a0596004072bd79df5f2543510a784123dfdeabd8", "image": "k8s.gcr.io/kube-proxy:v1.22.2", "imageID": "sha256:7098d4e6dd52fcc5155396781cedad46d18ce873097fd242f6cd1792c7a67e98", "lastState": {}, "name": "kube-proxy", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2021-11-19T14:15:58Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "172.18.0.2", "podIPs": [{"ip": "172.18.0.2"}], "qosClass": "BestEffort", "startTime": "2021-11-19T14:15:54Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"kubernetes.io/config.hash": "df4e68faeba6099df86e8b52438f4cd0", "kubernetes.io/config.mirror": "df4e68faeba6099df86e8b52438f4cd0", "kubernetes.io/config.seen": "2021-11-19T14:15:40.147884355Z", "kubernetes.io/config.source": "file", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "creationTimestamp": "2021-11-19T14:15:40Z", "labels": {"component": "kube-scheduler", "tier": "control-plane"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubernetes.io/config.hash": {}, "f:kubernetes.io/config.mirror": {}, "f:kubernetes.io/config.seen": {}, "f:kubernetes.io/config.source": {}}, "f:labels": {".": {}, "f:component": {}, "f:tier": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"41ddd80c-dcb9-4989-9cd3-a66ef9274008\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"kube-scheduler\"}": {".": {}, "f:command": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:host": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:resources": {".": {}, "f:requests": {".": {}, "f:cpu": {}}}, "f:startupProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:host": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/kubernetes/scheduler.conf\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:hostNetwork": {}, "f:nodeName": {}, "f:priorityClassName": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {".": {}, "f:seccompProfile": {".": {}, "f:type": {}}}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"kubeconfig\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T14:15:40Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"172.18.0.2\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:13:46Z"}], "name": "kube-scheduler-kind-control-plane", "namespace": "kube-system", "ownerReferences": [{"apiVersion": "v1", "controller": true, "kind": "Node", "name": "kind-control-plane", "uid": "41ddd80c-dcb9-4989-9cd3-a66ef9274008"}], "resourceVersion": "12482", "uid": "f033c4b3-e86a-460c-af23-8acdb0dd43f8"}, "spec": {"containers": [{"command": ["kube-scheduler", "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf", "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf", "--bind-address=127.0.0.1", "--kubeconfig=/etc/kubernetes/scheduler.conf", "--leader-elect=true", "--port=0"], "image": "k8s.gcr.io/kube-scheduler:v1.22.2", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 8, "httpGet": {"host": "127.0.0.1", "path": "/healthz", "port": 10259, "scheme": "HTTPS"}, "initialDelaySeconds": 10, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 15}, "name": "kube-scheduler", "resources": {"requests": {"cpu": "100m"}}, "startupProbe": {"failureThreshold": 24, "httpGet": {"host": "127.0.0.1", "path": "/healthz", "port": 10259, "scheme": "HTTPS"}, "initialDelaySeconds": 10, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 15}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/kubernetes/scheduler.conf", "name": "kubeconfig", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "hostNetwork": true, "nodeName": "kind-control-plane", "preemptionPolicy": "PreemptLowerPriority", "priority": 2000001000, "priorityClassName": "system-node-critical", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {"seccompProfile": {"type": "RuntimeDefault"}}, "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "operator": "Exists"}], "volumes": [{"hostPath": {"path": "/etc/kubernetes/scheduler.conf", "type": "FileOrCreate"}, "name": "kubeconfig"}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:40Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:13:46Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:13:46Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:15:40Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://13b538b2cda18cde1a2bc66327fb434e7232be6f2bf31c18c501c180acd84206", "image": "k8s.gcr.io/kube-scheduler:v1.22.2", "imageID": "sha256:d626e89abe4bd375c40d1e13ad8490c6fd13dbadeecdc177d1fdeaba33d437fb", "lastState": {"terminated": {"containerID": "containerd://28f80712dfbfc80c1eee2edf2203f666d27dea025ba9296e92aaec3f514ccdca", "exitCode": 1, "finishedAt": "2021-11-19T15:10:44Z", "reason": "Error", "startedAt": "2021-11-19T15:09:21Z"}}, "name": "kube-scheduler", "ready": true, "restartCount": 7, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:13:36Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "172.18.0.2", "podIPs": [{"ip": "172.18.0.2"}], "qosClass": "Burstable", "startTime": "2021-11-19T14:15:40Z"}}, {"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2021-11-19T14:15:54Z", "generateName": "local-path-provisioner-85494db59d-", "labels": {"app": "local-path-provisioner", "pod-template-hash": "85494db59d"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"8673b8ac-5899-4c4d-8250-c08a75245314\"}": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"local-path-provisioner\"}": {".": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"POD_NAMESPACE\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:fieldRef": {}}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/config/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:nodeSelector": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:tolerations": {}, "f:volumes": {".": {}, "k:{\"name\":\"config-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "subresource": "status", "time": "2021-11-19T14:15:54Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.3\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:15:51Z"}], "name": "local-path-provisioner-85494db59d-pgzjw", "namespace": "local-path-storage", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "local-path-provisioner-85494db59d", "uid": "8673b8ac-5899-4c4d-8250-c08a75245314"}], "resourceVersion": "13055", "uid": "6846612a-4655-4aaa-9bca-c0b00d88d178"}, "spec": {"containers": [{"command": ["local-path-provisioner", "--debug", "start", "--helper-image", "k8s.gcr.io/build-image/debian-base:buster-v1.7.2", "--config", "/etc/config/config.json"], "env": [{"name": "POD_NAMESPACE", "valueFrom": {"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}}}], "image": "docker.io/rancher/local-path-provisioner:v0.0.14", "imagePullPolicy": "IfNotPresent", "name": "local-path-provisioner", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/config/", "name": "config-volume"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-pfhh4", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "kind-control-plane", "nodeSelector": {"kubernetes.io/os": "linux"}, "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "local-path-provisioner-service-account", "serviceAccountName": "local-path-provisioner-service-account", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoSchedule", "key": "node-role.kubernetes.io/master", "operator": "Equal"}, {"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"configMap": {"defaultMode": 420, "name": "local-path-config"}, "name": "config-volume"}, {"name": "kube-api-access-pfhh4", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:15:51Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T15:15:51Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2021-11-19T14:16:10Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://3a243660cfbedbebdb1123450a55992556c2a8fea0f2fd12ab2abf1b6bf5aeb1", "image": "docker.io/rancher/local-path-provisioner:v0.0.14", "imageID": "sha256:e422121c9c5f97623245b7e600eeb5e223ee623f21fa04da985ae71057d8d70b", "lastState": {"terminated": {"containerID": "containerd://b2ad56edb1af66b2a08b66809c316d7f7b8e67d4b34d878838e0c623dc794f9f", "exitCode": 255, "finishedAt": "2021-11-19T15:10:44Z", "reason": "Error", "startedAt": "2021-11-19T15:08:44Z"}}, "name": "local-path-provisioner", "ready": true, "restartCount": 8, "started": true, "state": {"running": {"startedAt": "2021-11-19T15:15:50Z"}}}], "hostIP": "172.18.0.2", "phase": "Running", "podIP": "10.244.0.3", "podIPs": [{"ip": "10.244.0.3"}], "qosClass": "BestEffort", "startTime": "2021-11-19T14:16:10Z"}}]}
Friday 19 November 2021  15:15:54 +0000 (0:04:29.607)       0:39:15.898 ******* 

TASK [v1aX_integration_test : Pivot objects to target cluster] *****************
changed: [localhost] => {"changed": true, "cmd": "clusterctl move --to-kubeconfig /tmp/kubeconfig-test1.yaml -n metal3 -v 10", "delta": "0:00:13.374032", "end": "2021-11-19 15:16:08.351915", "msg": "", "rc": 0, "start": "2021-11-19 15:15:54.977883", "stderr": "Using configuration File=\"/home/capm3/.cluster-api/clusterctl.yaml\"\nPerforming move...\nDiscovering Cluster API objects\nKubeadmControlPlane Count=1\nMachine Count=5\nMetal3Data Count=5\nMetal3DataTemplate Count=2\nCluster Count=1\nIPPool Count=2\nKubeadmConfigTemplate Count=1\nMachineDeployment Count=1\nMachineSet Count=1\nMetal3MachineTemplate Count=2\nKubeadmConfig Count=5\nMetal3Machine Count=5\nIPAddress Count=10\nMetal3DataClaim Count=5\nIPClaim Count=10\nBareMetalHost Count=5\nConfigMap Count=1\nSecret Count=26\nMetal3Cluster Count=1\nTotal objects Count=89\nExcluding secret from move (not linked with any Cluster) name=\"default-token-zg6p6\"\nMoving Cluster API objects Clusters=1\nPausing the source cluster\nSet Cluster.Spec.Paused Paused=true Cluster=\"test1\" Namespace=\"metal3\"\nCreating target namespaces, if missing\nCreating objects in the target cluster\nCreating Cluster=\"test1\" Namespace=\"metal3\"\nCreating Metal3MachineTemplate=\"test1-controlplane\" Namespace=\"metal3\"\nCreating Metal3MachineTemplate=\"test1-workers\" Namespace=\"metal3\"\nCreating Metal3DataTemplate=\"test1-controlplane-template\" Namespace=\"metal3\"\nCreating Metal3DataTemplate=\"test1-workers-template\" Namespace=\"metal3\"\nCreating KubeadmControlPlane=\"test1\" Namespace=\"metal3\"\nCreating IPPool=\"provisioning-pool\" Namespace=\"metal3\"\nCreating IPPool=\"baremetalv4-pool\" Namespace=\"metal3\"\nCreating MachineDeployment=\"test1\" Namespace=\"metal3\"\nCreating KubeadmConfigTemplate=\"test1-workers\" Namespace=\"metal3\"\nCreating Metal3Cluster=\"test1\" Namespace=\"metal3\"\nCreating Machine=\"test1-9d5zj\" Namespace=\"metal3\"\nCreating Secret=\"test1-proxy\" Namespace=\"metal3\"\nCreating Secret=\"test1-ca\" Namespace=\"metal3\"\nCreating Secret=\"test1-etcd\" Namespace=\"metal3\"\nCreating Secret=\"test1-sa\" Namespace=\"metal3\"\nCreating MachineSet=\"test1-76bd89c664\" Namespace=\"metal3\"\nCreating Machine=\"test1-j9gl2\" Namespace=\"metal3\"\nCreating Machine=\"test1-nxssx\" Namespace=\"metal3\"\nCreating Secret=\"test1-kubeconfig\" Namespace=\"metal3\"\nCreating KubeadmConfig=\"test1-7zl6h\" Namespace=\"metal3\"\nCreating KubeadmConfig=\"test1-wnn4g\" Namespace=\"metal3\"\nCreating Metal3Machine=\"test1-controlplane-bpk5l\" Namespace=\"metal3\"\nCreating Metal3Machine=\"test1-controlplane-gtk46\" Namespace=\"metal3\"\nCreating Machine=\"test1-76bd89c664-z8zr9\" Namespace=\"metal3\"\nCreating Metal3Machine=\"test1-controlplane-kbfjc\" Namespace=\"metal3\"\nCreating KubeadmConfig=\"test1-bgf69\" Namespace=\"metal3\"\nCreating Machine=\"test1-76bd89c664-4jx4f\" Namespace=\"metal3\"\nCreating Secret=\"test1-7zl6h\" Namespace=\"metal3\"\nCreating KubeadmConfig=\"test1-workers-7cq9j\" Namespace=\"metal3\"\nCreating Secret=\"test1-bgf69\" Namespace=\"metal3\"\nCreating Metal3DataClaim=\"test1-controlplane-gtk46\" Namespace=\"metal3\"\nCreating BareMetalHost=\"node-0\" Namespace=\"metal3\"\nCreating Metal3DataClaim=\"test1-controlplane-kbfjc\" Namespace=\"metal3\"\nCreating BareMetalHost=\"node-2\" Namespace=\"metal3\"\nCreating Metal3Machine=\"test1-workers-gf2cm\" Namespace=\"metal3\"\nCreating Metal3DataClaim=\"test1-controlplane-bpk5l\" Namespace=\"metal3\"\nCreating Secret=\"test1-wnn4g\" Namespace=\"metal3\"\nCreating KubeadmConfig=\"test1-workers-qgzps\" Namespace=\"metal3\"\nCreating BareMetalHost=\"node-3\" Namespace=\"metal3\"\nCreating Metal3Machine=\"test1-workers-pbd76\" Namespace=\"metal3\"\nCreating Metal3DataClaim=\"test1-workers-gf2cm\" Namespace=\"metal3\"\nCreating Metal3Data=\"test1-controlplane-template-2\" Namespace=\"metal3\"\nCreating BareMetalHost=\"node-4\" Namespace=\"metal3\"\nCreating BareMetalHost=\"node-1\" Namespace=\"metal3\"\nCreating Metal3Data=\"test1-controlplane-template-0\" Namespace=\"metal3\"\nCreating Secret=\"node-2-bmc-secret\" Namespace=\"metal3\"\nCreating Metal3DataClaim=\"test1-workers-pbd76\" Namespace=\"metal3\"\nCreating Secret=\"node-3-bmc-secret\" Namespace=\"metal3\"\nCreating Secret=\"test1-workers-7cq9j\" Namespace=\"metal3\"\nCreating Secret=\"test1-workers-qgzps\" Namespace=\"metal3\"\nCreating Secret=\"node-0-bmc-secret\" Namespace=\"metal3\"\nCreating Metal3Data=\"test1-controlplane-template-1\" Namespace=\"metal3\"\nCreating IPClaim=\"test1-controlplane-template-2-provisioning-pool\" Namespace=\"metal3\"\nCreating Secret=\"test1-controlplane-kbfjc-networkdata\" Namespace=\"metal3\"\nCreating IPClaim=\"test1-controlplane-template-2-baremetalv4-pool\" Namespace=\"metal3\"\nCreating Secret=\"test1-controlplane-bpk5l-metadata\" Namespace=\"metal3\"\nCreating IPClaim=\"test1-controlplane-template-0-baremetalv4-pool\" Namespace=\"metal3\"\nCreating IPClaim=\"test1-controlplane-template-0-provisioning-pool\" Namespace=\"metal3\"\nCreating Secret=\"test1-controlplane-gtk46-networkdata\" Namespace=\"metal3\"\nCreating Secret=\"test1-controlplane-bpk5l-networkdata\" Namespace=\"metal3\"\nCreating Secret=\"test1-controlplane-gtk46-metadata\" Namespace=\"metal3\"\nCreating Metal3Data=\"test1-workers-template-1\" Namespace=\"metal3\"\nCreating IPClaim=\"test1-controlplane-template-1-baremetalv4-pool\" Namespace=\"metal3\"\nCreating Secret=\"node-1-bmc-secret\" Namespace=\"metal3\"\nCreating Secret=\"test1-controlplane-kbfjc-metadata\" Namespace=\"metal3\"\nCreating Secret=\"node-4-bmc-secret\" Namespace=\"metal3\"\nCreating IPClaim=\"test1-controlplane-template-1-provisioning-pool\" Namespace=\"metal3\"\nCreating Metal3Data=\"test1-workers-template-0\" Namespace=\"metal3\"\nCreating IPAddress=\"test1-bmv4-192-168-111-104\" Namespace=\"metal3\"\nCreating IPClaim=\"test1-workers-template-0-baremetalv4-pool\" Namespace=\"metal3\"\nCreating IPAddress=\"test1-bmv4-192-168-111-100\" Namespace=\"metal3\"\nCreating Secret=\"test1-workers-pbd76-metadata\" Namespace=\"metal3\"\nCreating Secret=\"test1-workers-pbd76-networkdata\" Namespace=\"metal3\"\nCreating IPAddress=\"test1-bmv4-192-168-111-101\" Namespace=\"metal3\"\nCreating Secret=\"test1-workers-gf2cm-metadata\" Namespace=\"metal3\"\nCreating IPClaim=\"test1-workers-template-1-provisioning-pool\" Namespace=\"metal3\"\nCreating IPClaim=\"test1-workers-template-1-baremetalv4-pool\" Namespace=\"metal3\"\nCreating IPAddress=\"test1-prov-172-22-0-100\" Namespace=\"metal3\"\nCreating IPAddress=\"test1-prov-172-22-0-101\" Namespace=\"metal3\"\nCreating IPAddress=\"test1-prov-172-22-0-104\" Namespace=\"metal3\"\nCreating Secret=\"test1-workers-gf2cm-networkdata\" Namespace=\"metal3\"\nCreating IPClaim=\"test1-workers-template-0-provisioning-pool\" Namespace=\"metal3\"\nCreating IPAddress=\"test1-prov-172-22-0-102\" Namespace=\"metal3\"\nCreating IPAddress=\"test1-bmv4-192-168-111-102\" Namespace=\"metal3\"\nCreating IPAddress=\"test1-bmv4-192-168-111-103\" Namespace=\"metal3\"\nCreating IPAddress=\"test1-prov-172-22-0-103\" Namespace=\"metal3\"\nDeleting objects from the source cluster\nDeleting IPAddress=\"test1-prov-172-22-0-102\" Namespace=\"metal3\"\nDeleting IPAddress=\"test1-bmv4-192-168-111-102\" Namespace=\"metal3\"\nDeleting IPAddress=\"test1-bmv4-192-168-111-103\" Namespace=\"metal3\"\nDeleting IPAddress=\"test1-prov-172-22-0-103\" Namespace=\"metal3\"\nDeleting IPAddress=\"test1-bmv4-192-168-111-104\" Namespace=\"metal3\"\nDeleting IPClaim=\"test1-workers-template-0-baremetalv4-pool\" Namespace=\"metal3\"\nDeleting IPAddress=\"test1-bmv4-192-168-111-100\" Namespace=\"metal3\"\nDeleting Secret=\"test1-workers-pbd76-metadata\" Namespace=\"metal3\"\nDeleting Secret=\"test1-workers-pbd76-networkdata\" Namespace=\"metal3\"\nDeleting IPAddress=\"test1-bmv4-192-168-111-101\" Namespace=\"metal3\"\nDeleting Secret=\"test1-workers-gf2cm-metadata\" Namespace=\"metal3\"\nDeleting IPClaim=\"test1-workers-template-1-provisioning-pool\" Namespace=\"metal3\"\nDeleting IPClaim=\"test1-workers-template-1-baremetalv4-pool\" Namespace=\"metal3\"\nDeleting IPAddress=\"test1-prov-172-22-0-100\" Namespace=\"metal3\"\nDeleting IPAddress=\"test1-prov-172-22-0-101\" Namespace=\"metal3\"\nDeleting IPAddress=\"test1-prov-172-22-0-104\" Namespace=\"metal3\"\nDeleting Secret=\"test1-workers-gf2cm-networkdata\" Namespace=\"metal3\"\nDeleting IPClaim=\"test1-workers-template-0-provisioning-pool\" Namespace=\"metal3\"\nDeleting IPClaim=\"test1-controlplane-template-2-provisioning-pool\" Namespace=\"metal3\"\nDeleting Secret=\"test1-controlplane-kbfjc-networkdata\" Namespace=\"metal3\"\nDeleting IPClaim=\"test1-controlplane-template-2-baremetalv4-pool\" Namespace=\"metal3\"\nDeleting Secret=\"test1-controlplane-bpk5l-metadata\" Namespace=\"metal3\"\nDeleting IPClaim=\"test1-controlplane-template-0-baremetalv4-pool\" Namespace=\"metal3\"\nDeleting IPClaim=\"test1-controlplane-template-0-provisioning-pool\" Namespace=\"metal3\"\nDeleting Secret=\"test1-controlplane-gtk46-networkdata\" Namespace=\"metal3\"\nDeleting Secret=\"test1-controlplane-bpk5l-networkdata\" Namespace=\"metal3\"\nDeleting Secret=\"test1-controlplane-gtk46-metadata\" Namespace=\"metal3\"\nDeleting Metal3Data=\"test1-workers-template-1\" Namespace=\"metal3\"\nDeleting IPClaim=\"test1-controlplane-template-1-baremetalv4-pool\" Namespace=\"metal3\"\nDeleting Secret=\"node-1-bmc-secret\" Namespace=\"metal3\"\nDeleting Secret=\"test1-controlplane-kbfjc-metadata\" Namespace=\"metal3\"\nDeleting Secret=\"node-4-bmc-secret\" Namespace=\"metal3\"\nDeleting IPClaim=\"test1-controlplane-template-1-provisioning-pool\" Namespace=\"metal3\"\nDeleting Metal3Data=\"test1-workers-template-0\" Namespace=\"metal3\"\nDeleting Metal3DataClaim=\"test1-workers-gf2cm\" Namespace=\"metal3\"\nDeleting Metal3Data=\"test1-controlplane-template-2\" Namespace=\"metal3\"\nDeleting BareMetalHost=\"node-4\" Namespace=\"metal3\"\nDeleting BareMetalHost=\"node-1\" Namespace=\"metal3\"\nDeleting Metal3Data=\"test1-controlplane-template-0\" Namespace=\"metal3\"\nDeleting Secret=\"node-2-bmc-secret\" Namespace=\"metal3\"\nDeleting Metal3DataClaim=\"test1-workers-pbd76\" Namespace=\"metal3\"\nDeleting Secret=\"node-3-bmc-secret\" Namespace=\"metal3\"\nDeleting Secret=\"test1-workers-7cq9j\" Namespace=\"metal3\"\nDeleting Secret=\"test1-workers-qgzps\" Namespace=\"metal3\"\nDeleting Secret=\"node-0-bmc-secret\" Namespace=\"metal3\"\nDeleting Metal3Data=\"test1-controlplane-template-1\" Namespace=\"metal3\"\nDeleting Secret=\"test1-7zl6h\" Namespace=\"metal3\"\nDeleting KubeadmConfig=\"test1-workers-7cq9j\" Namespace=\"metal3\"\nDeleting Secret=\"test1-bgf69\" Namespace=\"metal3\"\nDeleting Metal3DataClaim=\"test1-controlplane-gtk46\" Namespace=\"metal3\"\nDeleting BareMetalHost=\"node-0\" Namespace=\"metal3\"\nDeleting Metal3DataClaim=\"test1-controlplane-kbfjc\" Namespace=\"metal3\"\nDeleting BareMetalHost=\"node-2\" Namespace=\"metal3\"\nDeleting Metal3Machine=\"test1-workers-gf2cm\" Namespace=\"metal3\"\nDeleting Metal3DataClaim=\"test1-controlplane-bpk5l\" Namespace=\"metal3\"\nDeleting Secret=\"test1-wnn4g\" Namespace=\"metal3\"\nDeleting KubeadmConfig=\"test1-workers-qgzps\" Namespace=\"metal3\"\nDeleting BareMetalHost=\"node-3\" Namespace=\"metal3\"\nDeleting Metal3Machine=\"test1-workers-pbd76\" Namespace=\"metal3\"\nDeleting KubeadmConfig=\"test1-7zl6h\" Namespace=\"metal3\"\nDeleting KubeadmConfig=\"test1-wnn4g\" Namespace=\"metal3\"\nDeleting Metal3Machine=\"test1-controlplane-bpk5l\" Namespace=\"metal3\"\nDeleting Metal3Machine=\"test1-controlplane-gtk46\" Namespace=\"metal3\"\nDeleting Machine=\"test1-76bd89c664-z8zr9\" Namespace=\"metal3\"\nDeleting Metal3Machine=\"test1-controlplane-kbfjc\" Namespace=\"metal3\"\nDeleting KubeadmConfig=\"test1-bgf69\" Namespace=\"metal3\"\nDeleting Machine=\"test1-76bd89c664-4jx4f\" Namespace=\"metal3\"\nDeleting Machine=\"test1-9d5zj\" Namespace=\"metal3\"\nDeleting Secret=\"test1-proxy\" Namespace=\"metal3\"\nDeleting Secret=\"test1-ca\" Namespace=\"metal3\"\nDeleting Secret=\"test1-etcd\" Namespace=\"metal3\"\nDeleting Secret=\"test1-sa\" Namespace=\"metal3\"\nDeleting MachineSet=\"test1-76bd89c664\" Namespace=\"metal3\"\nDeleting Machine=\"test1-j9gl2\" Namespace=\"metal3\"\nDeleting Machine=\"test1-nxssx\" Namespace=\"metal3\"\nDeleting Secret=\"test1-kubeconfig\" Namespace=\"metal3\"\nDeleting Metal3MachineTemplate=\"test1-controlplane\" Namespace=\"metal3\"\nDeleting Metal3MachineTemplate=\"test1-workers\" Namespace=\"metal3\"\nDeleting Metal3DataTemplate=\"test1-controlplane-template\" Namespace=\"metal3\"\nDeleting Metal3DataTemplate=\"test1-workers-template\" Namespace=\"metal3\"\nDeleting KubeadmControlPlane=\"test1\" Namespace=\"metal3\"\nDeleting IPPool=\"provisioning-pool\" Namespace=\"metal3\"\nDeleting IPPool=\"baremetalv4-pool\" Namespace=\"metal3\"\nDeleting MachineDeployment=\"test1\" Namespace=\"metal3\"\nDeleting KubeadmConfigTemplate=\"test1-workers\" Namespace=\"metal3\"\nDeleting Metal3Cluster=\"test1\" Namespace=\"metal3\"\nDeleting Cluster=\"test1\" Namespace=\"metal3\"\nResuming the target cluster\nSet Cluster.Spec.Paused Paused=false Cluster=\"test1\" Namespace=\"metal3\"\nUsing configuration File=\"/home/capm3/.cluster-api/clusterctl.yaml\"", "stderr_lines": ["Using configuration File=\"/home/capm3/.cluster-api/clusterctl.yaml\"", "Performing move...", "Discovering Cluster API objects", "KubeadmControlPlane Count=1", "Machine Count=5", "Metal3Data Count=5", "Metal3DataTemplate Count=2", "Cluster Count=1", "IPPool Count=2", "KubeadmConfigTemplate Count=1", "MachineDeployment Count=1", "MachineSet Count=1", "Metal3MachineTemplate Count=2", "KubeadmConfig Count=5", "Metal3Machine Count=5", "IPAddress Count=10", "Metal3DataClaim Count=5", "IPClaim Count=10", "BareMetalHost Count=5", "ConfigMap Count=1", "Secret Count=26", "Metal3Cluster Count=1", "Total objects Count=89", "Excluding secret from move (not linked with any Cluster) name=\"default-token-zg6p6\"", "Moving Cluster API objects Clusters=1", "Pausing the source cluster", "Set Cluster.Spec.Paused Paused=true Cluster=\"test1\" Namespace=\"metal3\"", "Creating target namespaces, if missing", "Creating objects in the target cluster", "Creating Cluster=\"test1\" Namespace=\"metal3\"", "Creating Metal3MachineTemplate=\"test1-controlplane\" Namespace=\"metal3\"", "Creating Metal3MachineTemplate=\"test1-workers\" Namespace=\"metal3\"", "Creating Metal3DataTemplate=\"test1-controlplane-template\" Namespace=\"metal3\"", "Creating Metal3DataTemplate=\"test1-workers-template\" Namespace=\"metal3\"", "Creating KubeadmControlPlane=\"test1\" Namespace=\"metal3\"", "Creating IPPool=\"provisioning-pool\" Namespace=\"metal3\"", "Creating IPPool=\"baremetalv4-pool\" Namespace=\"metal3\"", "Creating MachineDeployment=\"test1\" Namespace=\"metal3\"", "Creating KubeadmConfigTemplate=\"test1-workers\" Namespace=\"metal3\"", "Creating Metal3Cluster=\"test1\" Namespace=\"metal3\"", "Creating Machine=\"test1-9d5zj\" Namespace=\"metal3\"", "Creating Secret=\"test1-proxy\" Namespace=\"metal3\"", "Creating Secret=\"test1-ca\" Namespace=\"metal3\"", "Creating Secret=\"test1-etcd\" Namespace=\"metal3\"", "Creating Secret=\"test1-sa\" Namespace=\"metal3\"", "Creating MachineSet=\"test1-76bd89c664\" Namespace=\"metal3\"", "Creating Machine=\"test1-j9gl2\" Namespace=\"metal3\"", "Creating Machine=\"test1-nxssx\" Namespace=\"metal3\"", "Creating Secret=\"test1-kubeconfig\" Namespace=\"metal3\"", "Creating KubeadmConfig=\"test1-7zl6h\" Namespace=\"metal3\"", "Creating KubeadmConfig=\"test1-wnn4g\" Namespace=\"metal3\"", "Creating Metal3Machine=\"test1-controlplane-bpk5l\" Namespace=\"metal3\"", "Creating Metal3Machine=\"test1-controlplane-gtk46\" Namespace=\"metal3\"", "Creating Machine=\"test1-76bd89c664-z8zr9\" Namespace=\"metal3\"", "Creating Metal3Machine=\"test1-controlplane-kbfjc\" Namespace=\"metal3\"", "Creating KubeadmConfig=\"test1-bgf69\" Namespace=\"metal3\"", "Creating Machine=\"test1-76bd89c664-4jx4f\" Namespace=\"metal3\"", "Creating Secret=\"test1-7zl6h\" Namespace=\"metal3\"", "Creating KubeadmConfig=\"test1-workers-7cq9j\" Namespace=\"metal3\"", "Creating Secret=\"test1-bgf69\" Namespace=\"metal3\"", "Creating Metal3DataClaim=\"test1-controlplane-gtk46\" Namespace=\"metal3\"", "Creating BareMetalHost=\"node-0\" Namespace=\"metal3\"", "Creating Metal3DataClaim=\"test1-controlplane-kbfjc\" Namespace=\"metal3\"", "Creating BareMetalHost=\"node-2\" Namespace=\"metal3\"", "Creating Metal3Machine=\"test1-workers-gf2cm\" Namespace=\"metal3\"", "Creating Metal3DataClaim=\"test1-controlplane-bpk5l\" Namespace=\"metal3\"", "Creating Secret=\"test1-wnn4g\" Namespace=\"metal3\"", "Creating KubeadmConfig=\"test1-workers-qgzps\" Namespace=\"metal3\"", "Creating BareMetalHost=\"node-3\" Namespace=\"metal3\"", "Creating Metal3Machine=\"test1-workers-pbd76\" Namespace=\"metal3\"", "Creating Metal3DataClaim=\"test1-workers-gf2cm\" Namespace=\"metal3\"", "Creating Metal3Data=\"test1-controlplane-template-2\" Namespace=\"metal3\"", "Creating BareMetalHost=\"node-4\" Namespace=\"metal3\"", "Creating BareMetalHost=\"node-1\" Namespace=\"metal3\"", "Creating Metal3Data=\"test1-controlplane-template-0\" Namespace=\"metal3\"", "Creating Secret=\"node-2-bmc-secret\" Namespace=\"metal3\"", "Creating Metal3DataClaim=\"test1-workers-pbd76\" Namespace=\"metal3\"", "Creating Secret=\"node-3-bmc-secret\" Namespace=\"metal3\"", "Creating Secret=\"test1-workers-7cq9j\" Namespace=\"metal3\"", "Creating Secret=\"test1-workers-qgzps\" Namespace=\"metal3\"", "Creating Secret=\"node-0-bmc-secret\" Namespace=\"metal3\"", "Creating Metal3Data=\"test1-controlplane-template-1\" Namespace=\"metal3\"", "Creating IPClaim=\"test1-controlplane-template-2-provisioning-pool\" Namespace=\"metal3\"", "Creating Secret=\"test1-controlplane-kbfjc-networkdata\" Namespace=\"metal3\"", "Creating IPClaim=\"test1-controlplane-template-2-baremetalv4-pool\" Namespace=\"metal3\"", "Creating Secret=\"test1-controlplane-bpk5l-metadata\" Namespace=\"metal3\"", "Creating IPClaim=\"test1-controlplane-template-0-baremetalv4-pool\" Namespace=\"metal3\"", "Creating IPClaim=\"test1-controlplane-template-0-provisioning-pool\" Namespace=\"metal3\"", "Creating Secret=\"test1-controlplane-gtk46-networkdata\" Namespace=\"metal3\"", "Creating Secret=\"test1-controlplane-bpk5l-networkdata\" Namespace=\"metal3\"", "Creating Secret=\"test1-controlplane-gtk46-metadata\" Namespace=\"metal3\"", "Creating Metal3Data=\"test1-workers-template-1\" Namespace=\"metal3\"", "Creating IPClaim=\"test1-controlplane-template-1-baremetalv4-pool\" Namespace=\"metal3\"", "Creating Secret=\"node-1-bmc-secret\" Namespace=\"metal3\"", "Creating Secret=\"test1-controlplane-kbfjc-metadata\" Namespace=\"metal3\"", "Creating Secret=\"node-4-bmc-secret\" Namespace=\"metal3\"", "Creating IPClaim=\"test1-controlplane-template-1-provisioning-pool\" Namespace=\"metal3\"", "Creating Metal3Data=\"test1-workers-template-0\" Namespace=\"metal3\"", "Creating IPAddress=\"test1-bmv4-192-168-111-104\" Namespace=\"metal3\"", "Creating IPClaim=\"test1-workers-template-0-baremetalv4-pool\" Namespace=\"metal3\"", "Creating IPAddress=\"test1-bmv4-192-168-111-100\" Namespace=\"metal3\"", "Creating Secret=\"test1-workers-pbd76-metadata\" Namespace=\"metal3\"", "Creating Secret=\"test1-workers-pbd76-networkdata\" Namespace=\"metal3\"", "Creating IPAddress=\"test1-bmv4-192-168-111-101\" Namespace=\"metal3\"", "Creating Secret=\"test1-workers-gf2cm-metadata\" Namespace=\"metal3\"", "Creating IPClaim=\"test1-workers-template-1-provisioning-pool\" Namespace=\"metal3\"", "Creating IPClaim=\"test1-workers-template-1-baremetalv4-pool\" Namespace=\"metal3\"", "Creating IPAddress=\"test1-prov-172-22-0-100\" Namespace=\"metal3\"", "Creating IPAddress=\"test1-prov-172-22-0-101\" Namespace=\"metal3\"", "Creating IPAddress=\"test1-prov-172-22-0-104\" Namespace=\"metal3\"", "Creating Secret=\"test1-workers-gf2cm-networkdata\" Namespace=\"metal3\"", "Creating IPClaim=\"test1-workers-template-0-provisioning-pool\" Namespace=\"metal3\"", "Creating IPAddress=\"test1-prov-172-22-0-102\" Namespace=\"metal3\"", "Creating IPAddress=\"test1-bmv4-192-168-111-102\" Namespace=\"metal3\"", "Creating IPAddress=\"test1-bmv4-192-168-111-103\" Namespace=\"metal3\"", "Creating IPAddress=\"test1-prov-172-22-0-103\" Namespace=\"metal3\"", "Deleting objects from the source cluster", "Deleting IPAddress=\"test1-prov-172-22-0-102\" Namespace=\"metal3\"", "Deleting IPAddress=\"test1-bmv4-192-168-111-102\" Namespace=\"metal3\"", "Deleting IPAddress=\"test1-bmv4-192-168-111-103\" Namespace=\"metal3\"", "Deleting IPAddress=\"test1-prov-172-22-0-103\" Namespace=\"metal3\"", "Deleting IPAddress=\"test1-bmv4-192-168-111-104\" Namespace=\"metal3\"", "Deleting IPClaim=\"test1-workers-template-0-baremetalv4-pool\" Namespace=\"metal3\"", "Deleting IPAddress=\"test1-bmv4-192-168-111-100\" Namespace=\"metal3\"", "Deleting Secret=\"test1-workers-pbd76-metadata\" Namespace=\"metal3\"", "Deleting Secret=\"test1-workers-pbd76-networkdata\" Namespace=\"metal3\"", "Deleting IPAddress=\"test1-bmv4-192-168-111-101\" Namespace=\"metal3\"", "Deleting Secret=\"test1-workers-gf2cm-metadata\" Namespace=\"metal3\"", "Deleting IPClaim=\"test1-workers-template-1-provisioning-pool\" Namespace=\"metal3\"", "Deleting IPClaim=\"test1-workers-template-1-baremetalv4-pool\" Namespace=\"metal3\"", "Deleting IPAddress=\"test1-prov-172-22-0-100\" Namespace=\"metal3\"", "Deleting IPAddress=\"test1-prov-172-22-0-101\" Namespace=\"metal3\"", "Deleting IPAddress=\"test1-prov-172-22-0-104\" Namespace=\"metal3\"", "Deleting Secret=\"test1-workers-gf2cm-networkdata\" Namespace=\"metal3\"", "Deleting IPClaim=\"test1-workers-template-0-provisioning-pool\" Namespace=\"metal3\"", "Deleting IPClaim=\"test1-controlplane-template-2-provisioning-pool\" Namespace=\"metal3\"", "Deleting Secret=\"test1-controlplane-kbfjc-networkdata\" Namespace=\"metal3\"", "Deleting IPClaim=\"test1-controlplane-template-2-baremetalv4-pool\" Namespace=\"metal3\"", "Deleting Secret=\"test1-controlplane-bpk5l-metadata\" Namespace=\"metal3\"", "Deleting IPClaim=\"test1-controlplane-template-0-baremetalv4-pool\" Namespace=\"metal3\"", "Deleting IPClaim=\"test1-controlplane-template-0-provisioning-pool\" Namespace=\"metal3\"", "Deleting Secret=\"test1-controlplane-gtk46-networkdata\" Namespace=\"metal3\"", "Deleting Secret=\"test1-controlplane-bpk5l-networkdata\" Namespace=\"metal3\"", "Deleting Secret=\"test1-controlplane-gtk46-metadata\" Namespace=\"metal3\"", "Deleting Metal3Data=\"test1-workers-template-1\" Namespace=\"metal3\"", "Deleting IPClaim=\"test1-controlplane-template-1-baremetalv4-pool\" Namespace=\"metal3\"", "Deleting Secret=\"node-1-bmc-secret\" Namespace=\"metal3\"", "Deleting Secret=\"test1-controlplane-kbfjc-metadata\" Namespace=\"metal3\"", "Deleting Secret=\"node-4-bmc-secret\" Namespace=\"metal3\"", "Deleting IPClaim=\"test1-controlplane-template-1-provisioning-pool\" Namespace=\"metal3\"", "Deleting Metal3Data=\"test1-workers-template-0\" Namespace=\"metal3\"", "Deleting Metal3DataClaim=\"test1-workers-gf2cm\" Namespace=\"metal3\"", "Deleting Metal3Data=\"test1-controlplane-template-2\" Namespace=\"metal3\"", "Deleting BareMetalHost=\"node-4\" Namespace=\"metal3\"", "Deleting BareMetalHost=\"node-1\" Namespace=\"metal3\"", "Deleting Metal3Data=\"test1-controlplane-template-0\" Namespace=\"metal3\"", "Deleting Secret=\"node-2-bmc-secret\" Namespace=\"metal3\"", "Deleting Metal3DataClaim=\"test1-workers-pbd76\" Namespace=\"metal3\"", "Deleting Secret=\"node-3-bmc-secret\" Namespace=\"metal3\"", "Deleting Secret=\"test1-workers-7cq9j\" Namespace=\"metal3\"", "Deleting Secret=\"test1-workers-qgzps\" Namespace=\"metal3\"", "Deleting Secret=\"node-0-bmc-secret\" Namespace=\"metal3\"", "Deleting Metal3Data=\"test1-controlplane-template-1\" Namespace=\"metal3\"", "Deleting Secret=\"test1-7zl6h\" Namespace=\"metal3\"", "Deleting KubeadmConfig=\"test1-workers-7cq9j\" Namespace=\"metal3\"", "Deleting Secret=\"test1-bgf69\" Namespace=\"metal3\"", "Deleting Metal3DataClaim=\"test1-controlplane-gtk46\" Namespace=\"metal3\"", "Deleting BareMetalHost=\"node-0\" Namespace=\"metal3\"", "Deleting Metal3DataClaim=\"test1-controlplane-kbfjc\" Namespace=\"metal3\"", "Deleting BareMetalHost=\"node-2\" Namespace=\"metal3\"", "Deleting Metal3Machine=\"test1-workers-gf2cm\" Namespace=\"metal3\"", "Deleting Metal3DataClaim=\"test1-controlplane-bpk5l\" Namespace=\"metal3\"", "Deleting Secret=\"test1-wnn4g\" Namespace=\"metal3\"", "Deleting KubeadmConfig=\"test1-workers-qgzps\" Namespace=\"metal3\"", "Deleting BareMetalHost=\"node-3\" Namespace=\"metal3\"", "Deleting Metal3Machine=\"test1-workers-pbd76\" Namespace=\"metal3\"", "Deleting KubeadmConfig=\"test1-7zl6h\" Namespace=\"metal3\"", "Deleting KubeadmConfig=\"test1-wnn4g\" Namespace=\"metal3\"", "Deleting Metal3Machine=\"test1-controlplane-bpk5l\" Namespace=\"metal3\"", "Deleting Metal3Machine=\"test1-controlplane-gtk46\" Namespace=\"metal3\"", "Deleting Machine=\"test1-76bd89c664-z8zr9\" Namespace=\"metal3\"", "Deleting Metal3Machine=\"test1-controlplane-kbfjc\" Namespace=\"metal3\"", "Deleting KubeadmConfig=\"test1-bgf69\" Namespace=\"metal3\"", "Deleting Machine=\"test1-76bd89c664-4jx4f\" Namespace=\"metal3\"", "Deleting Machine=\"test1-9d5zj\" Namespace=\"metal3\"", "Deleting Secret=\"test1-proxy\" Namespace=\"metal3\"", "Deleting Secret=\"test1-ca\" Namespace=\"metal3\"", "Deleting Secret=\"test1-etcd\" Namespace=\"metal3\"", "Deleting Secret=\"test1-sa\" Namespace=\"metal3\"", "Deleting MachineSet=\"test1-76bd89c664\" Namespace=\"metal3\"", "Deleting Machine=\"test1-j9gl2\" Namespace=\"metal3\"", "Deleting Machine=\"test1-nxssx\" Namespace=\"metal3\"", "Deleting Secret=\"test1-kubeconfig\" Namespace=\"metal3\"", "Deleting Metal3MachineTemplate=\"test1-controlplane\" Namespace=\"metal3\"", "Deleting Metal3MachineTemplate=\"test1-workers\" Namespace=\"metal3\"", "Deleting Metal3DataTemplate=\"test1-controlplane-template\" Namespace=\"metal3\"", "Deleting Metal3DataTemplate=\"test1-workers-template\" Namespace=\"metal3\"", "Deleting KubeadmControlPlane=\"test1\" Namespace=\"metal3\"", "Deleting IPPool=\"provisioning-pool\" Namespace=\"metal3\"", "Deleting IPPool=\"baremetalv4-pool\" Namespace=\"metal3\"", "Deleting MachineDeployment=\"test1\" Namespace=\"metal3\"", "Deleting KubeadmConfigTemplate=\"test1-workers\" Namespace=\"metal3\"", "Deleting Metal3Cluster=\"test1\" Namespace=\"metal3\"", "Deleting Cluster=\"test1\" Namespace=\"metal3\"", "Resuming the target cluster", "Set Cluster.Spec.Paused Paused=false Cluster=\"test1\" Namespace=\"metal3\"", "Using configuration File=\"/home/capm3/.cluster-api/clusterctl.yaml\""], "stdout": "", "stdout_lines": []}
Friday 19 November 2021  15:16:08 +0000 (0:00:13.687)       0:39:29.585 ******* 
[WARNING]: could not find "['status']['phase']" key in [{'apiVersion':
'cluster.x-k8s.io/v1beta1', 'kind': 'Machine', 'metadata':
{'creationTimestamp': '2021-11-19T15:15:59Z', 'finalizers':
['machine.cluster.x-k8s.io'], 'generation': 1, 'labels':
{'cluster.x-k8s.io/cluster-name': 'test1', 'machine-template-hash':
'3268457220', 'nodepool': 'nodepool-0'}, 'managedFields': [{'apiVersion':
'cluster.x-k8s.io/v1beta1', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status':
{'.': {}, 'f:addresses': {}, 'f:bootstrapReady': {}, 'f:conditions': {},
'f:infrastructureReady': {}, 'f:lastUpdated': {}, 'f:nodeInfo': {'.': {},
'f:architecture': {}, 'f:bootID': {}, 'f:containerRuntimeVersion': {},
'f:kernelVersion': {}, 'f:kubeProxyVersion': {}, 'f:kubeletVersion': {},
'f:machineID': {}, 'f:operatingSystem': {}, 'f:osImage': {}, 'f:systemUUID':
{}}, 'f:nodeRef': {'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name': {},
'f:uid': {}}, 'f:observedGeneration': {}, 'f:phase': {}}}, 'manager':
'manager', 'operation': 'Update', 'time': '2021-11-19T14:55:25Z'},
{'apiVersion': 'cluster.x-k8s.io/v1beta1', 'fieldsType': 'FieldsV1',
'fieldsV1': {'f:metadata': {'f:finalizers': {'.': {},
'v:"machine.cluster.x-k8s.io"': {}}, 'f:labels': {'.': {},
'f:cluster.x-k8s.io/cluster-name': {}, 'f:machine-template-hash': {},
'f:nodepool': {}}, 'f:ownerReferences': {'.': {},
'k:{"uid":"e2a82233-8059-49a0-af47-4f3f9c3cc3d5"}': {'.': {}, 'f:apiVersion':
{}, 'f:blockOwnerDeletion': {}, 'f:controller': {}, 'f:kind': {}, 'f:name': {},
'f:uid': {}}}}, 'f:spec': {'.': {}, 'f:bootstrap': {'.': {}, 'f:configRef':
{'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name': {}, 'f:namespace': {},
'f:uid': {}}, 'f:dataSecretName': {}}, 'f:clusterName': {},
'f:infrastructureRef': {'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name':
{}, 'f:namespace': {}, 'f:uid': {}}, 'f:nodeDrainTimeout': {}, 'f:providerID':
{}, 'f:version': {}}}, 'manager': 'clusterctl', 'operation': 'Update', 'time':
'2021-11-19T15:15:59Z'}], 'name': 'test1-76bd89c664-4jx4f', 'namespace':
'metal3', 'ownerReferences': [{'apiVersion': 'cluster.x-k8s.io/v1beta1',
'blockOwnerDeletion': True, 'controller': True, 'kind': 'MachineSet', 'name':
'test1-76bd89c664', 'uid': 'e2a82233-8059-49a0-af47-4f3f9c3cc3d5'}],
'resourceVersion': '6282', 'uid': 'ccd543df-3721-4f1a-8f03-ac8af57c6639'},
'spec': {'bootstrap': {'configRef': {'apiVersion':
'bootstrap.cluster.x-k8s.io/v1beta1', 'kind': 'KubeadmConfig', 'name':
'test1-workers-7cq9j', 'namespace': 'metal3', 'uid':
'9ff30b5b-0635-480f-9eb3-364e9c3d7084'}, 'dataSecretName':
'test1-workers-7cq9j'}, 'clusterName': 'test1', 'infrastructureRef':
{'apiVersion': 'infrastructure.cluster.x-k8s.io/v1beta1', 'kind':
'Metal3Machine', 'name': 'test1-workers-pbd76', 'namespace': 'metal3', 'uid':
'b397a461-0b9f-42c5-8bca-13c6abc0a5b7'}, 'nodeDrainTimeout': '0s',
'providerID': 'metal3://1f1f0f2f-1031-45d9-8192-f3645deeba0d', 'version':
'v1.21.1'}}, {'apiVersion': 'cluster.x-k8s.io/v1beta1', 'kind': 'Machine',
'metadata': {'creationTimestamp': '2021-11-19T15:15:58Z', 'finalizers':
['machine.cluster.x-k8s.io'], 'generation': 1, 'labels':
{'cluster.x-k8s.io/cluster-name': 'test1', 'machine-template-hash':
'3268457220', 'nodepool': 'nodepool-0'}, 'managedFields': [{'apiVersion':
'cluster.x-k8s.io/v1beta1', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:status':
{'.': {}, 'f:addresses': {}, 'f:bootstrapReady': {}, 'f:conditions': {},
'f:infrastructureReady': {}, 'f:lastUpdated': {}, 'f:nodeInfo': {'.': {},
'f:architecture': {}, 'f:bootID': {}, 'f:containerRuntimeVersion': {},
'f:kernelVersion': {}, 'f:kubeProxyVersion': {}, 'f:kubeletVersion': {},
'f:machineID': {}, 'f:operatingSystem': {}, 'f:osImage': {}, 'f:systemUUID':
{}}, 'f:nodeRef': {'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name': {},
'f:uid': {}}, 'f:observedGeneration': {}, 'f:phase': {}}}, 'manager':
'manager', 'operation': 'Update', 'time': '2021-11-19T15:07:12Z'},
{'apiVersion': 'cluster.x-k8s.io/v1beta1', 'fieldsType': 'FieldsV1',
'fieldsV1': {'f:metadata': {'f:finalizers': {'.': {},
'v:"machine.cluster.x-k8s.io"': {}}, 'f:labels': {'.': {},
'f:cluster.x-k8s.io/cluster-name': {}, 'f:machine-template-hash': {},
'f:nodepool': {}}, 'f:ownerReferences': {'.': {},
'k:{"uid":"e2a82233-8059-49a0-af47-4f3f9c3cc3d5"}': {'.': {}, 'f:apiVersion':
{}, 'f:blockOwnerDeletion': {}, 'f:controller': {}, 'f:kind': {}, 'f:name': {},
'f:uid': {}}}}, 'f:spec': {'.': {}, 'f:bootstrap': {'.': {}, 'f:configRef':
{'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name': {}, 'f:namespace': {},
'f:uid': {}}, 'f:dataSecretName': {}}, 'f:clusterName': {},
'f:infrastructureRef': {'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name':
{}, 'f:namespace': {}, 'f:uid': {}}, 'f:nodeDrainTimeout': {}, 'f:providerID':
{}, 'f:version': {}}}, 'manager': 'clusterctl', 'operation': 'Update', 'time':
'2021-11-19T15:15:58Z'}], 'name': 'test1-76bd89c664-z8zr9', 'namespace':
'metal3', 'ownerReferences': [{'apiVersion': 'cluster.x-k8s.io/v1beta1',
'blockOwnerDeletion': True, 'controller': True, 'kind': 'MachineSet', 'name':
'test1-76bd89c664', 'uid': 'e2a82233-8059-49a0-af47-4f3f9c3cc3d5'}],
'resourceVersion': '6277', 'uid': '616635da-1ef9-417c-b8be-eb3884741b8a'},
'spec': {'bootstrap': {'configRef': {'apiVersion':
'bootstrap.cluster.x-k8s.io/v1beta1', 'kind': 'KubeadmConfig', 'name':
'test1-workers-qgzps', 'namespace': 'metal3', 'uid':
'e6870cd2-26ff-44cc-a45f-1122f45fa096'}, 'dataSecretName': 'test1-workers-
qgzps'}, 'clusterName': 'test1', 'infrastructureRef': {'apiVersion':
'infrastructure.cluster.x-k8s.io/v1beta1', 'kind': 'Metal3Machine', 'name':
'test1-workers-gf2cm', 'namespace': 'metal3', 'uid':
'06cb695c-5237-47fa-8343-68beb1166ecd'}, 'nodeDrainTimeout': '0s',
'providerID': 'metal3://a3b5897b-6923-406c-9314-a89e423a1a80', 'version':
'v1.21.1'}}, {'apiVersion': 'cluster.x-k8s.io/v1beta1', 'kind': 'Machine',
'metadata': {'annotations': {'controlplane.cluster.x-k8s.io/kubeadm-cluster-
configuration': '{"etcd":{},"networking":{},"apiServer":{},"controllerManager":
{},"scheduler":{},"dns":{}}'}, 'creationTimestamp': '2021-11-19T15:15:57Z',
'finalizers': ['machine.cluster.x-k8s.io'], 'generation': 1, 'labels':
{'cluster.x-k8s.io/cluster-name': 'test1', 'cluster.x-k8s.io/control-plane':
''}, 'managedFields': [{'apiVersion': 'cluster.x-k8s.io/v1beta1', 'fieldsType':
'FieldsV1', 'fieldsV1': {'f:status': {'.': {}, 'f:addresses': {},
'f:bootstrapReady': {}, 'f:conditions': {}, 'f:infrastructureReady': {},
'f:lastUpdated': {}, 'f:nodeInfo': {'.': {}, 'f:architecture': {}, 'f:bootID':
{}, 'f:containerRuntimeVersion': {}, 'f:kernelVersion': {},
'f:kubeProxyVersion': {}, 'f:kubeletVersion': {}, 'f:machineID': {},
'f:operatingSystem': {}, 'f:osImage': {}, 'f:systemUUID': {}}, 'f:nodeRef':
{'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name': {}, 'f:uid': {}},
'f:observedGeneration': {}, 'f:phase': {}}}, 'manager': 'manager', 'operation':
'Update', 'time': '2021-11-19T14:55:25Z'}, {'apiVersion':
'cluster.x-k8s.io/v1beta1', 'fieldsType': 'FieldsV1', 'fieldsV1':
{'f:metadata': {'f:annotations': {'.': {},
'f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration': {}},
'f:finalizers': {'.': {}, 'v:"machine.cluster.x-k8s.io"': {}}, 'f:labels':
{'.': {}, 'f:cluster.x-k8s.io/cluster-name': {}, 'f:cluster.x-k8s.io/control-
plane': {}}, 'f:ownerReferences': {'.': {},
'k:{"uid":"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}': {'.': {}, 'f:apiVersion':
{}, 'f:blockOwnerDeletion': {}, 'f:controller': {}, 'f:kind': {}, 'f:name': {},
'f:uid': {}}}}, 'f:spec': {'.': {}, 'f:bootstrap': {'.': {}, 'f:configRef':
{'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name': {}, 'f:namespace': {},
'f:uid': {}}, 'f:dataSecretName': {}}, 'f:clusterName': {},
'f:infrastructureRef': {'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name':
{}, 'f:namespace': {}, 'f:uid': {}}, 'f:nodeDrainTimeout': {}, 'f:providerID':
{}, 'f:version': {}}}, 'manager': 'clusterctl', 'operation': 'Update', 'time':
'2021-11-19T15:15:57Z'}], 'name': 'test1-9d5zj', 'namespace': 'metal3',
'ownerReferences': [{'apiVersion': 'controlplane.cluster.x-k8s.io/v1beta1',
'blockOwnerDeletion': True, 'controller': True, 'kind': 'KubeadmControlPlane',
'name': 'test1', 'uid': 'fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d'}],
'resourceVersion': '6256', 'uid': '43677892-e440-46f9-8600-33d32cff7228'},
'spec': {'bootstrap': {'configRef': {'apiVersion':
'bootstrap.cluster.x-k8s.io/v1beta1', 'kind': 'KubeadmConfig', 'name':
'test1-7zl6h', 'namespace': 'metal3', 'uid':
'556d7912-8c40-4496-b567-f28621f57b81'}, 'dataSecretName': 'test1-7zl6h'},
'clusterName': 'test1', 'infrastructureRef': {'apiVersion':
'infrastructure.cluster.x-k8s.io/v1beta1', 'kind': 'Metal3Machine', 'name':
'test1-controlplane-bpk5l', 'namespace': 'metal3', 'uid':
'4e7dab5c-4bfb-4f17-bea0-4560c998a717'}, 'nodeDrainTimeout': '0s',
'providerID': 'metal3://a0d2af16-8f4c-4ff3-bb36-a6b7046796f0', 'version':
'v1.21.1'}}, {'apiVersion': 'cluster.x-k8s.io/v1beta1', 'kind': 'Machine',
'metadata': {'annotations': {'controlplane.cluster.x-k8s.io/kubeadm-cluster-
configuration': '{"etcd":{},"networking":{},"apiServer":{},"controllerManager":
{},"scheduler":{},"dns":{}}'}, 'creationTimestamp': '2021-11-19T15:15:58Z',
'finalizers': ['machine.cluster.x-k8s.io'], 'generation': 1, 'labels':
{'cluster.x-k8s.io/cluster-name': 'test1', 'cluster.x-k8s.io/control-plane':
''}, 'managedFields': [{'apiVersion': 'cluster.x-k8s.io/v1beta1', 'fieldsType':
'FieldsV1', 'fieldsV1': {'f:status': {'.': {}, 'f:addresses': {},
'f:bootstrapReady': {}, 'f:conditions': {}, 'f:infrastructureReady': {},
'f:lastUpdated': {}, 'f:nodeInfo': {'.': {}, 'f:architecture': {}, 'f:bootID':
{}, 'f:containerRuntimeVersion': {}, 'f:kernelVersion': {},
'f:kubeProxyVersion': {}, 'f:kubeletVersion': {}, 'f:machineID': {},
'f:operatingSystem': {}, 'f:osImage': {}, 'f:systemUUID': {}}, 'f:nodeRef':
{'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name': {}, 'f:uid': {}},
'f:observedGeneration': {}, 'f:phase': {}}}, 'manager': 'manager', 'operation':
'Update', 'time': '2021-11-19T15:01:51Z'}, {'apiVersion':
'cluster.x-k8s.io/v1beta1', 'fieldsType': 'FieldsV1', 'fieldsV1':
{'f:metadata': {'f:annotations': {'.': {},
'f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration': {}},
'f:finalizers': {'.': {}, 'v:"machine.cluster.x-k8s.io"': {}}, 'f:labels':
{'.': {}, 'f:cluster.x-k8s.io/cluster-name': {}, 'f:cluster.x-k8s.io/control-
plane': {}}, 'f:ownerReferences': {'.': {},
'k:{"uid":"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}': {'.': {}, 'f:apiVersion':
{}, 'f:blockOwnerDeletion': {}, 'f:controller': {}, 'f:kind': {}, 'f:name': {},
'f:uid': {}}}}, 'f:spec': {'.': {}, 'f:bootstrap': {'.': {}, 'f:configRef':
{'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name': {}, 'f:namespace': {},
'f:uid': {}}, 'f:dataSecretName': {}}, 'f:clusterName': {},
'f:infrastructureRef': {'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name':
{}, 'f:namespace': {}, 'f:uid': {}}, 'f:nodeDrainTimeout': {}, 'f:providerID':
{}, 'f:version': {}}}, 'manager': 'clusterctl', 'operation': 'Update', 'time':
'2021-11-19T15:15:58Z'}], 'name': 'test1-j9gl2', 'namespace': 'metal3',
'ownerReferences': [{'apiVersion': 'controlplane.cluster.x-k8s.io/v1beta1',
'blockOwnerDeletion': True, 'controller': True, 'kind': 'KubeadmControlPlane',
'name': 'test1', 'uid': 'fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d'}],
'resourceVersion': '6266', 'uid': 'f255c269-b0b4-4bdd-98a8-a7596f12dd53'},
'spec': {'bootstrap': {'configRef': {'apiVersion':
'bootstrap.cluster.x-k8s.io/v1beta1', 'kind': 'KubeadmConfig', 'name':
'test1-bgf69', 'namespace': 'metal3', 'uid':
'c88bcb66-ca5c-4165-9e2d-692ca53bc968'}, 'dataSecretName': 'test1-bgf69'},
'clusterName': 'test1', 'infrastructureRef': {'apiVersion':
'infrastructure.cluster.x-k8s.io/v1beta1', 'kind': 'Metal3Machine', 'name':
'test1-controlplane-gtk46', 'namespace': 'metal3', 'uid':
'057ab8df-0de7-4f03-b654-2881c5d59e91'}, 'nodeDrainTimeout': '0s',
'providerID': 'metal3://cdbb73f8-8247-495f-97dd-ee54daaa1098', 'version':
'v1.21.1'}}, {'apiVersion': 'cluster.x-k8s.io/v1beta1', 'kind': 'Machine',
'metadata': {'annotations': {'controlplane.cluster.x-k8s.io/kubeadm-cluster-
configuration': '{"etcd":{},"networking":{},"apiServer":{},"controllerManager":
{},"scheduler":{},"dns":{}}'}, 'creationTimestamp': '2021-11-19T15:15:58Z',
'finalizers': ['machine.cluster.x-k8s.io'], 'generation': 1, 'labels':
{'cluster.x-k8s.io/cluster-name': 'test1', 'cluster.x-k8s.io/control-plane':
''}, 'managedFields': [{'apiVersion': 'cluster.x-k8s.io/v1beta1', 'fieldsType':
'FieldsV1', 'fieldsV1': {'f:status': {'.': {}, 'f:addresses': {},
'f:bootstrapReady': {}, 'f:conditions': {}, 'f:infrastructureReady': {},
'f:lastUpdated': {}, 'f:nodeInfo': {'.': {}, 'f:architecture': {}, 'f:bootID':
{}, 'f:containerRuntimeVersion': {}, 'f:kernelVersion': {},
'f:kubeProxyVersion': {}, 'f:kubeletVersion': {}, 'f:machineID': {},
'f:operatingSystem': {}, 'f:osImage': {}, 'f:systemUUID': {}}, 'f:nodeRef':
{'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name': {}, 'f:uid': {}},
'f:observedGeneration': {}, 'f:phase': {}}}, 'manager': 'manager', 'operation':
'Update', 'time': '2021-11-19T14:44:29Z'}, {'apiVersion':
'cluster.x-k8s.io/v1beta1', 'fieldsType': 'FieldsV1', 'fieldsV1':
{'f:metadata': {'f:annotations': {'.': {},
'f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration': {}},
'f:finalizers': {'.': {}, 'v:"machine.cluster.x-k8s.io"': {}}, 'f:labels':
{'.': {}, 'f:cluster.x-k8s.io/cluster-name': {}, 'f:cluster.x-k8s.io/control-
plane': {}}, 'f:ownerReferences': {'.': {},
'k:{"uid":"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}': {'.': {}, 'f:apiVersion':
{}, 'f:blockOwnerDeletion': {}, 'f:controller': {}, 'f:kind': {}, 'f:name': {},
'f:uid': {}}}}, 'f:spec': {'.': {}, 'f:bootstrap': {'.': {}, 'f:configRef':
{'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name': {}, 'f:namespace': {},
'f:uid': {}}, 'f:dataSecretName': {}}, 'f:clusterName': {},
'f:infrastructureRef': {'.': {}, 'f:apiVersion': {}, 'f:kind': {}, 'f:name':
{}, 'f:namespace': {}, 'f:uid': {}}, 'f:nodeDrainTimeout': {}, 'f:providerID':
{}, 'f:version': {}}}, 'manager': 'clusterctl', 'operation': 'Update', 'time':
'2021-11-19T15:15:58Z'}], 'name': 'test1-nxssx', 'namespace': 'metal3',
'ownerReferences': [{'apiVersion': 'controlplane.cluster.x-k8s.io/v1beta1',
'blockOwnerDeletion': True, 'controller': True, 'kind': 'KubeadmControlPlane',
'name': 'test1', 'uid': 'fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d'}],
'resourceVersion': '6268', 'uid': 'd23c5f0c-5369-45e6-bc91-bfc9f3847c0f'},
'spec': {'bootstrap': {'configRef': {'apiVersion':
'bootstrap.cluster.x-k8s.io/v1beta1', 'kind': 'KubeadmConfig', 'name':
'test1-wnn4g', 'namespace': 'metal3', 'uid':
'efb38178-ea30-4e30-bf91-d1aa302af3d1'}, 'dataSecretName': 'test1-wnn4g'},
'clusterName': 'test1', 'infrastructureRef': {'apiVersion':
'infrastructure.cluster.x-k8s.io/v1beta1', 'kind': 'Metal3Machine', 'name':
'test1-controlplane-kbfjc', 'namespace': 'metal3', 'uid':
'60ed567b-04c8-42b5-badd-a05142018390'}, 'nodeDrainTimeout': '0s',
'providerID': 'metal3://5f526f39-9270-4941-8328-f783b718f46d', 'version':
'v1.21.1'}}]
[WARNING]: Failure using method (v2_runner_retry) in callback plugin
(<ansible_collections.community.general.plugins.callback.diy.CallbackModule
object at 0x7fdb2557a730>): ('cannot represent an object', AnsibleUndefined)

TASK [v1aX_integration_test : Check if machines become running.] ***************
ok: [localhost] => {"api_found": true, "attempts": 2, "changed": false, "resources": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"creationTimestamp": "2021-11-19T15:15:59Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "machine-template-hash": "3268457220", "nodepool": "nodepool-0"}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:55:25Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:machine-template-hash": {}, "f:nodepool": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"e2a82233-8059-49a0-af47-4f3f9c3cc3d5\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:59Z"}], "name": "test1-76bd89c664-4jx4f", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "MachineSet", "name": "test1-76bd89c664", "uid": "e2a82233-8059-49a0-af47-4f3f9c3cc3d5"}], "resourceVersion": "6644", "uid": "ccd543df-3721-4f1a-8f03-ac8af57c6639"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-workers-7cq9j", "namespace": "metal3", "uid": "9ff30b5b-0635-480f-9eb3-364e9c3d7084"}, "dataSecretName": "test1-workers-7cq9j"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-workers-pbd76", "namespace": "metal3", "uid": "b397a461-0b9f-42c5-8bca-13c6abc0a5b7"}, "nodeDrainTimeout": "0s", "providerID": "metal3://1f1f0f2f-1031-45d9-8192-f3645deeba0d", "version": "v1.21.1"}, "status": {"addresses": [{"address": "192.168.111.21", "type": "InternalIP"}, {"address": "fe80::1418:ce16:723:a6cc%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.34", "type": "InternalIP"}, {"address": "fe80::61ef:8c7a:20af:9369%enp1s0", "type": "InternalIP"}, {"address": "node-1", "type": "Hostname"}, {"address": "node-1", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:16:28Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:16:08Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:16:28Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:16:10Z", "status": "True", "type": "NodeHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T15:16:28Z", "nodeInfo": {"architecture": "amd64", "bootID": "16872f11-f259-4973-9eaf-7be7b603dbcd", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "580c73b0-bb65-4b2a-9761-d79d7b4d7002"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-76bd89c664-4jx4f", "uid": "c06b477c-08aa-4548-96aa-e18e7349e236"}, "observedGeneration": 1, "phase": "Running"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"creationTimestamp": "2021-11-19T15:15:58Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "machine-template-hash": "3268457220", "nodepool": "nodepool-0"}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:07:12Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:machine-template-hash": {}, "f:nodepool": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"e2a82233-8059-49a0-af47-4f3f9c3cc3d5\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:58Z"}], "name": "test1-76bd89c664-z8zr9", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "MachineSet", "name": "test1-76bd89c664", "uid": "e2a82233-8059-49a0-af47-4f3f9c3cc3d5"}], "resourceVersion": "6652", "uid": "616635da-1ef9-417c-b8be-eb3884741b8a"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-workers-qgzps", "namespace": "metal3", "uid": "e6870cd2-26ff-44cc-a45f-1122f45fa096"}, "dataSecretName": "test1-workers-qgzps"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-workers-gf2cm", "namespace": "metal3", "uid": "06cb695c-5237-47fa-8343-68beb1166ecd"}, "nodeDrainTimeout": "0s", "providerID": "metal3://a3b5897b-6923-406c-9314-a89e423a1a80", "version": "v1.21.1"}, "status": {"addresses": [{"address": "192.168.111.24", "type": "InternalIP"}, {"address": "fe80::ef5e:d24f:b921:dbef%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.46", "type": "InternalIP"}, {"address": "fe80::b539:db85:4c3e:29ab%enp1s0", "type": "InternalIP"}, {"address": "node-4", "type": "Hostname"}, {"address": "node-4", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:16:27Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:16:08Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:16:27Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:16:10Z", "status": "True", "type": "NodeHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T15:16:28Z", "nodeInfo": {"architecture": "amd64", "bootID": "7049e95b-c4f9-4403-ab9d-0537d931d4b6", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "7bb4e9f8-745d-4d09-983a-6815b41fd8cb"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-76bd89c664-z8zr9", "uid": "afff5e28-26b8-451e-9614-6acc2381d84b"}, "observedGeneration": 1, "phase": "Running"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"annotations": {"controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": "{\"etcd\":{},\"networking\":{},\"apiServer\":{},\"controllerManager\":{},\"scheduler\":{},\"dns\":{}}"}, "creationTimestamp": "2021-11-19T15:15:57Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:55:25Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": {}}, "f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:57Z"}], "name": "test1-9d5zj", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "KubeadmControlPlane", "name": "test1", "uid": "fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}], "resourceVersion": "6649", "uid": "43677892-e440-46f9-8600-33d32cff7228"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-7zl6h", "namespace": "metal3", "uid": "556d7912-8c40-4496-b567-f28621f57b81"}, "dataSecretName": "test1-7zl6h"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-bpk5l", "namespace": "metal3", "uid": "4e7dab5c-4bfb-4f17-bea0-4560c998a717"}, "nodeDrainTimeout": "0s", "providerID": "metal3://a0d2af16-8f4c-4ff3-bb36-a6b7046796f0", "version": "v1.21.1"}, "status": {"addresses": [{"address": "192.168.111.22", "type": "InternalIP"}, {"address": "fe80::4543:596e:ca54:27b0%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.38", "type": "InternalIP"}, {"address": "fe80::f6c7:ad5a:940c:e9c8%enp1s0", "type": "InternalIP"}, {"address": "node-2", "type": "Hostname"}, {"address": "node-2", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:16:28Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "APIServerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:08Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "ControllerManagerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:14Z", "status": "True", "type": "EtcdMemberHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "EtcdPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:28Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:16:10Z", "status": "True", "type": "NodeHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "SchedulerPodHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T15:16:28Z", "nodeInfo": {"architecture": "amd64", "bootID": "458a34b4-13d0-4dd4-afb2-6d2ed1cc610d", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "3f2d9cd0-48da-41d2-978e-ead5d5ca837a"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-9d5zj", "uid": "dbf2f4d1-81ec-4b1c-84a3-4e577cb3c75a"}, "observedGeneration": 1, "phase": "Running"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"annotations": {"controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": "{\"etcd\":{},\"networking\":{},\"apiServer\":{},\"controllerManager\":{},\"scheduler\":{},\"dns\":{}}"}, "creationTimestamp": "2021-11-19T15:15:58Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:01:51Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": {}}, "f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:58Z"}], "name": "test1-j9gl2", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "KubeadmControlPlane", "name": "test1", "uid": "fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}], "resourceVersion": "6653", "uid": "f255c269-b0b4-4bdd-98a8-a7596f12dd53"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-bgf69", "namespace": "metal3", "uid": "c88bcb66-ca5c-4165-9e2d-692ca53bc968"}, "dataSecretName": "test1-bgf69"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-gtk46", "namespace": "metal3", "uid": "057ab8df-0de7-4f03-b654-2881c5d59e91"}, "nodeDrainTimeout": "0s", "providerID": "metal3://cdbb73f8-8247-495f-97dd-ee54daaa1098", "version": "v1.21.1"}, "status": {"addresses": [{"address": "192.168.111.23", "type": "InternalIP"}, {"address": "fe80::3d37:b969:de95:55ec%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.42", "type": "InternalIP"}, {"address": "fe80::6876:f857:58c4:b12b%enp1s0", "type": "InternalIP"}, {"address": "node-3", "type": "Hostname"}, {"address": "node-3", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:16:27Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "APIServerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:08Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "ControllerManagerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:15Z", "status": "True", "type": "EtcdMemberHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:14Z", "status": "True", "type": "EtcdPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:27Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:16:10Z", "status": "True", "type": "NodeHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:14Z", "status": "True", "type": "SchedulerPodHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T15:16:28Z", "nodeInfo": {"architecture": "amd64", "bootID": "e551ab4f-4dfb-4b6d-9441-42d8f0960ab7", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "d244c2e6-fb91-4804-a12f-0aff629d7019"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-j9gl2", "uid": "3c80660d-215b-41d6-831c-6308f2837e20"}, "observedGeneration": 1, "phase": "Running"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"annotations": {"controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": "{\"etcd\":{},\"networking\":{},\"apiServer\":{},\"controllerManager\":{},\"scheduler\":{},\"dns\":{}}"}, "creationTimestamp": "2021-11-19T15:15:58Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:44:29Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": {}}, "f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:58Z"}], "name": "test1-nxssx", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "KubeadmControlPlane", "name": "test1", "uid": "fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}], "resourceVersion": "6640", "uid": "d23c5f0c-5369-45e6-bc91-bfc9f3847c0f"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-wnn4g", "namespace": "metal3", "uid": "efb38178-ea30-4e30-bf91-d1aa302af3d1"}, "dataSecretName": "test1-wnn4g"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-kbfjc", "namespace": "metal3", "uid": "60ed567b-04c8-42b5-badd-a05142018390"}, "nodeDrainTimeout": "0s", "providerID": "metal3://5f526f39-9270-4941-8328-f783b718f46d", "version": "v1.21.1"}, "status": {"addresses": [{"address": "192.168.111.20", "type": "InternalIP"}, {"address": "fe80::3b75:9a7:38c4:db26%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.30", "type": "InternalIP"}, {"address": "fe80::7e4:4deb:a8d5:366d%enp1s0", "type": "InternalIP"}, {"address": "node-0", "type": "Hostname"}, {"address": "node-0", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:16:28Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "APIServerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:08Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "ControllerManagerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:14Z", "status": "True", "type": "EtcdMemberHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "EtcdPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:28Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:16:10Z", "status": "True", "type": "NodeHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "SchedulerPodHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T15:16:28Z", "nodeInfo": {"architecture": "amd64", "bootID": "576f91ef-d1fd-40e5-b86d-d61ed5f7700f", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "f6cc7069-cb9d-4246-8239-3ea36c87f9bd"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-nxssx", "uid": "97487870-7114-438e-a3b6-953b91ed95c8"}, "observedGeneration": 1, "phase": "Running"}}]}
Friday 19 November 2021  15:16:30 +0000 (0:00:21.831)       0:39:51.416 ******* 

TASK [v1aX_integration_test : Check if metal3machines become ready.] ***********
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "metadata": {"annotations": {"cluster.x-k8s.io/cloned-from-groupkind": "Metal3MachineTemplate.infrastructure.cluster.x-k8s.io", "cluster.x-k8s.io/cloned-from-name": "test1-controlplane", "metal3.io/BareMetalHost": "metal3/node-2"}, "creationTimestamp": "2021-11-19T15:15:58Z", "finalizers": ["metal3machine.infrastructure.cluster.x-k8s.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {"k:{\"uid\":\"01b31967-9470-4585-b0ed-36c0e299b987\"}": {}, "k:{\"uid\":\"c4468810-7dd6-4ea7-989f-02cf061df551\"}": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:44:30Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:lastUpdated": {}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:ready": {}, "f:renderedData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T14:53:08Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:cluster.x-k8s.io/cloned-from-groupkind": {}, "f:cluster.x-k8s.io/cloned-from-name": {}, "f:metal3.io/BareMetalHost": {}}, "f:finalizers": {".": {}, "v:\"metal3machine.infrastructure.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"43677892-e440-46f9-8600-33d32cff7228\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "k:{\"uid\":\"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d\"}": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:dataTemplate": {".": {}, "f:name": {}, "f:namespace": {}}, "f:hostSelector": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:providerID": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:58Z"}], "name": "test1-controlplane-bpk5l", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "kind": "KubeadmControlPlane", "name": "test1", "uid": "fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "Machine", "name": "test1-9d5zj", "uid": "43677892-e440-46f9-8600-33d32cff7228"}], "resourceVersion": "6668", "uid": "45992b6a-87d3-48a5-997e-8118ccc5cae9"}, "spec": {"automatedCleaningMode": "metadata", "dataTemplate": {"name": "test1-controlplane-template", "namespace": "metal3"}, "hostSelector": {}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "providerID": "metal3://a0d2af16-8f4c-4ff3-bb36-a6b7046796f0"}, "status": {"addresses": [{"address": "192.168.111.22", "type": "InternalIP"}, {"address": "fe80::4543:596e:ca54:27b0%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.38", "type": "InternalIP"}, {"address": "fe80::f6c7:ad5a:940c:e9c8%enp1s0", "type": "InternalIP"}, {"address": "node-2", "type": "Hostname"}, {"address": "node-2", "type": "InternalDNS"}], "lastUpdated": "2021-11-19T15:16:30Z", "metaData": {"name": "test1-controlplane-bpk5l-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-controlplane-bpk5l-networkdata", "namespace": "metal3"}, "ready": true, "renderedData": {"name": "test1-controlplane-template-1", "namespace": "metal3"}}}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "metadata": {"annotations": {"cluster.x-k8s.io/cloned-from-groupkind": "Metal3MachineTemplate.infrastructure.cluster.x-k8s.io", "cluster.x-k8s.io/cloned-from-name": "test1-controlplane", "metal3.io/BareMetalHost": "metal3/node-3"}, "creationTimestamp": "2021-11-19T15:15:58Z", "finalizers": ["metal3machine.infrastructure.cluster.x-k8s.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {"k:{\"uid\":\"01b31967-9470-4585-b0ed-36c0e299b987\"}": {}, "k:{\"uid\":\"ce1f2b47-7225-4397-a323-98664b715731\"}": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:55:26Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:lastUpdated": {}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:ready": {}, "f:renderedData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:00:31Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:cluster.x-k8s.io/cloned-from-groupkind": {}, "f:cluster.x-k8s.io/cloned-from-name": {}, "f:metal3.io/BareMetalHost": {}}, "f:finalizers": {".": {}, "v:\"metal3machine.infrastructure.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"f255c269-b0b4-4bdd-98a8-a7596f12dd53\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "k:{\"uid\":\"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d\"}": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:dataTemplate": {".": {}, "f:name": {}, "f:namespace": {}}, "f:hostSelector": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:providerID": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:58Z"}], "name": "test1-controlplane-gtk46", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "kind": "KubeadmControlPlane", "name": "test1", "uid": "fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "Machine", "name": "test1-j9gl2", "uid": "f255c269-b0b4-4bdd-98a8-a7596f12dd53"}], "resourceVersion": "6669", "uid": "fdd651eb-9356-42e5-b593-21ff5ffa448c"}, "spec": {"automatedCleaningMode": "metadata", "dataTemplate": {"name": "test1-controlplane-template", "namespace": "metal3"}, "hostSelector": {}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "providerID": "metal3://cdbb73f8-8247-495f-97dd-ee54daaa1098"}, "status": {"addresses": [{"address": "192.168.111.23", "type": "InternalIP"}, {"address": "fe80::3d37:b969:de95:55ec%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.42", "type": "InternalIP"}, {"address": "fe80::6876:f857:58c4:b12b%enp1s0", "type": "InternalIP"}, {"address": "node-3", "type": "Hostname"}, {"address": "node-3", "type": "InternalDNS"}], "lastUpdated": "2021-11-19T15:16:30Z", "metaData": {"name": "test1-controlplane-gtk46-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-controlplane-gtk46-networkdata", "namespace": "metal3"}, "ready": true, "renderedData": {"name": "test1-controlplane-template-2", "namespace": "metal3"}}}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "metadata": {"annotations": {"cluster.x-k8s.io/cloned-from-groupkind": "Metal3MachineTemplate.infrastructure.cluster.x-k8s.io", "cluster.x-k8s.io/cloned-from-name": "test1-controlplane", "metal3.io/BareMetalHost": "metal3/node-0"}, "creationTimestamp": "2021-11-19T15:15:59Z", "finalizers": ["metal3machine.infrastructure.cluster.x-k8s.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {"k:{\"uid\":\"01b31967-9470-4585-b0ed-36c0e299b987\"}": {}, "k:{\"uid\":\"80e16b5a-257c-46f8-a1b6-6e13edd94761\"}": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:37:20Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:lastUpdated": {}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:ready": {}, "f:renderedData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T14:44:28Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:cluster.x-k8s.io/cloned-from-groupkind": {}, "f:cluster.x-k8s.io/cloned-from-name": {}, "f:metal3.io/BareMetalHost": {}}, "f:finalizers": {".": {}, "v:\"metal3machine.infrastructure.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"d23c5f0c-5369-45e6-bc91-bfc9f3847c0f\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "k:{\"uid\":\"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d\"}": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:dataTemplate": {".": {}, "f:name": {}, "f:namespace": {}}, "f:hostSelector": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:providerID": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:59Z"}], "name": "test1-controlplane-kbfjc", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "kind": "KubeadmControlPlane", "name": "test1", "uid": "fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "Machine", "name": "test1-nxssx", "uid": "d23c5f0c-5369-45e6-bc91-bfc9f3847c0f"}], "resourceVersion": "6673", "uid": "465cfa60-e0be-4e53-a938-93addb6365e9"}, "spec": {"automatedCleaningMode": "metadata", "dataTemplate": {"name": "test1-controlplane-template", "namespace": "metal3"}, "hostSelector": {}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "providerID": "metal3://5f526f39-9270-4941-8328-f783b718f46d"}, "status": {"addresses": [{"address": "192.168.111.20", "type": "InternalIP"}, {"address": "fe80::3b75:9a7:38c4:db26%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.30", "type": "InternalIP"}, {"address": "fe80::7e4:4deb:a8d5:366d%enp1s0", "type": "InternalIP"}, {"address": "node-0", "type": "Hostname"}, {"address": "node-0", "type": "InternalDNS"}], "lastUpdated": "2021-11-19T15:16:31Z", "metaData": {"name": "test1-controlplane-kbfjc-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-controlplane-kbfjc-networkdata", "namespace": "metal3"}, "ready": true, "renderedData": {"name": "test1-controlplane-template-0", "namespace": "metal3"}}}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "metadata": {"annotations": {"cluster.x-k8s.io/cloned-from-groupkind": "Metal3MachineTemplate.infrastructure.cluster.x-k8s.io", "cluster.x-k8s.io/cloned-from-name": "test1-workers", "metal3.io/BareMetalHost": "metal3/node-4"}, "creationTimestamp": "2021-11-19T15:16:00Z", "finalizers": ["metal3machine.infrastructure.cluster.x-k8s.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "machine-template-hash": "3268457220", "nodepool": "nodepool-0"}, "managedFields": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {"k:{\"uid\":\"2c397c19-b7bd-4789-a86b-84e06707cb10\"}": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:36:50Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:lastUpdated": {}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:ready": {}, "f:renderedData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:07:12Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:cluster.x-k8s.io/cloned-from-groupkind": {}, "f:cluster.x-k8s.io/cloned-from-name": {}, "f:metal3.io/BareMetalHost": {}}, "f:finalizers": {".": {}, "v:\"metal3machine.infrastructure.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:machine-template-hash": {}, "f:nodepool": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"616635da-1ef9-417c-b8be-eb3884741b8a\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:dataTemplate": {".": {}, "f:name": {}, "f:namespace": {}}, "f:hostSelector": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:providerID": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:16:00Z"}], "name": "test1-workers-gf2cm", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "Machine", "name": "test1-76bd89c664-z8zr9", "uid": "616635da-1ef9-417c-b8be-eb3884741b8a"}], "resourceVersion": "6674", "uid": "3e61b2cc-f0c2-440b-abaa-c38876fa67fb"}, "spec": {"automatedCleaningMode": "metadata", "dataTemplate": {"name": "test1-workers-template", "namespace": "metal3"}, "hostSelector": {}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "providerID": "metal3://a3b5897b-6923-406c-9314-a89e423a1a80"}, "status": {"addresses": [{"address": "192.168.111.24", "type": "InternalIP"}, {"address": "fe80::ef5e:d24f:b921:dbef%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.46", "type": "InternalIP"}, {"address": "fe80::b539:db85:4c3e:29ab%enp1s0", "type": "InternalIP"}, {"address": "node-4", "type": "Hostname"}, {"address": "node-4", "type": "InternalDNS"}], "lastUpdated": "2021-11-19T15:16:31Z", "metaData": {"name": "test1-workers-gf2cm-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-workers-gf2cm-networkdata", "namespace": "metal3"}, "ready": true, "renderedData": {"name": "test1-workers-template-1", "namespace": "metal3"}}}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "metadata": {"annotations": {"cluster.x-k8s.io/cloned-from-groupkind": "Metal3MachineTemplate.infrastructure.cluster.x-k8s.io", "cluster.x-k8s.io/cloned-from-name": "test1-workers", "metal3.io/BareMetalHost": "metal3/node-1"}, "creationTimestamp": "2021-11-19T15:16:00Z", "finalizers": ["metal3machine.infrastructure.cluster.x-k8s.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "machine-template-hash": "3268457220", "nodepool": "nodepool-0"}, "managedFields": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {"k:{\"uid\":\"de443d6f-80b7-4b73-ac80-3d28e6b3fbf5\"}": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:36:50Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:lastUpdated": {}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:ready": {}, "f:renderedData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T14:51:50Z"}, {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:cluster.x-k8s.io/cloned-from-groupkind": {}, "f:cluster.x-k8s.io/cloned-from-name": {}, "f:metal3.io/BareMetalHost": {}}, "f:finalizers": {".": {}, "v:\"metal3machine.infrastructure.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:machine-template-hash": {}, "f:nodepool": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"ccd543df-3721-4f1a-8f03-ac8af57c6639\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:dataTemplate": {".": {}, "f:name": {}, "f:namespace": {}}, "f:hostSelector": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:providerID": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:16:00Z"}], "name": "test1-workers-pbd76", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "Machine", "name": "test1-76bd89c664-4jx4f", "uid": "ccd543df-3721-4f1a-8f03-ac8af57c6639"}], "resourceVersion": "6672", "uid": "d900c00d-0a19-427f-bc6c-2b741f03e643"}, "spec": {"automatedCleaningMode": "metadata", "dataTemplate": {"name": "test1-workers-template", "namespace": "metal3"}, "hostSelector": {}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "providerID": "metal3://1f1f0f2f-1031-45d9-8192-f3645deeba0d"}, "status": {"addresses": [{"address": "192.168.111.21", "type": "InternalIP"}, {"address": "fe80::1418:ce16:723:a6cc%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.34", "type": "InternalIP"}, {"address": "fe80::61ef:8c7a:20af:9369%enp1s0", "type": "InternalIP"}, {"address": "node-1", "type": "Hostname"}, {"address": "node-1", "type": "InternalDNS"}], "lastUpdated": "2021-11-19T15:16:30Z", "metaData": {"name": "test1-workers-pbd76-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-workers-pbd76-networkdata", "namespace": "metal3"}, "ready": true, "renderedData": {"name": "test1-workers-template-0", "namespace": "metal3"}}}]}
Friday 19 November 2021  15:16:31 +0000 (0:00:00.981)       0:39:52.397 ******* 

TASK [v1aX_integration_test : Check if bmh is in provisioned state] ************
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-0\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6230\",\"credentialsName\":\"node-0-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:93\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T15:15:59Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:42:58Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {"k:{\"uid\":\"60ed567b-04c8-42b5-badd-a05142018390\"}": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:15:56Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"465cfa60-e0be-4e53-a938-93addb6365e9\"}": {".": {}, "f:apiVersion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:online": {}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:59Z"}], "name": "node-0", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-controlplane-kbfjc", "uid": "465cfa60-e0be-4e53-a938-93addb6365e9"}], "resourceVersion": "6576", "uid": "c4a560e6-530b-480e-9fdd-67a17b13679d"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6230", "credentialsName": "node-0-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:93", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-kbfjc", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "metaData": {"name": "test1-controlplane-kbfjc-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-controlplane-kbfjc-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-wnn4g", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-0-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6329"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-0", "nics": [{"ip": "192.168.111.20", "mac": "00:32:34:b8:79:95", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::3b75:9a7:38c4:db26%enp2s0", "mac": "00:32:34:b8:79:95", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.30", "mac": "00:32:34:b8:79:93", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::7e4:4deb:a8d5:366d%enp1s0", "mac": "00:32:34:b8:79:93", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T15:16:24Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:48Z", "start": "2021-11-19T14:18:04Z"}, "provision": {"end": "2021-11-19T14:42:58Z", "start": "2021-11-19T14:37:21Z"}, "register": {"end": "2021-11-19T15:16:24Z", "start": "2021-11-19T15:16:13Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "1108acf5-99a6-4564-b2d9-94ad50542cbb", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-0-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6329"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-1\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"redfish+http://192.168.111.1:8000/redfish/v1/Systems/580c73b0-bb65-4b2a-9761-d79d7b4d7002\",\"credentialsName\":\"node-1-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:97\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T15:16:01Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:51:17Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {"k:{\"uid\":\"b397a461-0b9f-42c5-8bca-13c6abc0a5b7\"}": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:15:56Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"d900c00d-0a19-427f-bc6c-2b741f03e643\"}": {".": {}, "f:apiVersion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:online": {}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:16:01Z"}], "name": "node-1", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-workers-pbd76", "uid": "d900c00d-0a19-427f-bc6c-2b741f03e643"}], "resourceVersion": "6561", "uid": "db931a88-53b2-4cb4-a86f-e28cf7511b64"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "redfish+http://192.168.111.1:8000/redfish/v1/Systems/580c73b0-bb65-4b2a-9761-d79d7b4d7002", "credentialsName": "node-1-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:97", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-workers-pbd76", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "metaData": {"name": "test1-workers-pbd76-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-workers-pbd76-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-workers-7cq9j", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-1-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6351"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-1", "nics": [{"ip": "192.168.111.21", "mac": "00:32:34:b8:79:99", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::1418:ce16:723:a6cc%enp2s0", "mac": "00:32:34:b8:79:99", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.34", "mac": "00:32:34:b8:79:97", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::61ef:8c7a:20af:9369%enp1s0", "mac": "00:32:34:b8:79:97", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T15:16:22Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:33Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": "2021-11-19T14:51:17Z", "start": "2021-11-19T14:44:37Z"}, "register": {"end": "2021-11-19T15:16:22Z", "start": "2021-11-19T15:16:10Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "1103f11b-d03a-46e0-8f80-d8957115a9a1", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-1-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6351"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-2\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6232\",\"credentialsName\":\"node-2-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:9b\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T15:16:00Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:51:27Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {"k:{\"uid\":\"4e7dab5c-4bfb-4f17-bea0-4560c998a717\"}": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:15:56Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"45992b6a-87d3-48a5-997e-8118ccc5cae9\"}": {".": {}, "f:apiVersion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:online": {}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:16:00Z"}], "name": "node-2", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-controlplane-bpk5l", "uid": "45992b6a-87d3-48a5-997e-8118ccc5cae9"}], "resourceVersion": "6558", "uid": "30bc82aa-9128-4f33-8030-ff101c1ef203"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6232", "credentialsName": "node-2-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:9b", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-bpk5l", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "metaData": {"name": "test1-controlplane-bpk5l-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-controlplane-bpk5l-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-7zl6h", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-2-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6320"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-2", "nics": [{"ip": "192.168.111.22", "mac": "00:32:34:b8:79:9d", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::4543:596e:ca54:27b0%enp2s0", "mac": "00:32:34:b8:79:9d", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.38", "mac": "00:32:34:b8:79:9b", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::f6c7:ad5a:940c:e9c8%enp1s0", "mac": "00:32:34:b8:79:9b", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T15:16:22Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:47Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": "2021-11-19T14:51:27Z", "start": "2021-11-19T14:44:31Z"}, "register": {"end": "2021-11-19T15:16:22Z", "start": "2021-11-19T15:16:11Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "19d695a1-8c49-40b3-b6d2-505357341909", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-2-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6320"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-3\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"redfish+http://192.168.111.1:8000/redfish/v1/Systems/d244c2e6-fb91-4804-a12f-0aff629d7019\",\"credentialsName\":\"node-3-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:9f\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T15:16:00Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:59:24Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {"k:{\"uid\":\"057ab8df-0de7-4f03-b654-2881c5d59e91\"}": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:15:56Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"fdd651eb-9356-42e5-b593-21ff5ffa448c\"}": {".": {}, "f:apiVersion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:online": {}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:16:00Z"}], "name": "node-3", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-controlplane-gtk46", "uid": "fdd651eb-9356-42e5-b593-21ff5ffa448c"}], "resourceVersion": "6574", "uid": "6088bcc4-1a63-4815-b2c1-de6fd06a1f45"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "redfish+http://192.168.111.1:8000/redfish/v1/Systems/d244c2e6-fb91-4804-a12f-0aff629d7019", "credentialsName": "node-3-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:9f", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-controlplane-gtk46", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "metaData": {"name": "test1-controlplane-gtk46-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-controlplane-gtk46-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-bgf69", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-3-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6324"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-3", "nics": [{"ip": "192.168.111.23", "mac": "00:32:34:b8:79:a1", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::3d37:b969:de95:55ec%enp2s0", "mac": "00:32:34:b8:79:a1", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.42", "mac": "00:32:34:b8:79:9f", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::6876:f857:58c4:b12b%enp1s0", "mac": "00:32:34:b8:79:9f", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T15:16:23Z", "operationHistory": {"deprovision": {"end": null, "start": null}, "inspect": {"end": "2021-11-19T14:21:47Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": "2021-11-19T14:59:24Z", "start": "2021-11-19T14:55:41Z"}, "register": {"end": "2021-11-19T15:16:23Z", "start": "2021-11-19T15:16:12Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "d6376a1f-9cbf-4c7b-aa49-2fd5133ecc18", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-3-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6324"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-4\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6234\",\"credentialsName\":\"node-4-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:a3\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T15:16:01Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:lastUpdated": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:ID": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T15:06:42Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {"k:{\"uid\":\"06cb695c-5237-47fa-8343-68beb1166ecd\"}": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:15:56Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"3e61b2cc-f0c2-440b-abaa-c38876fa67fb\"}": {".": {}, "f:apiVersion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:online": {}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:16:01Z"}], "name": "node-4", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-workers-gf2cm", "uid": "3e61b2cc-f0c2-440b-abaa-c38876fa67fb"}], "resourceVersion": "6580", "uid": "6e77ed95-951b-42cc-88b8-de31991a7b19"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6234", "credentialsName": "node-4-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:a3", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-workers-gf2cm", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "metaData": {"name": "test1-workers-gf2cm-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-workers-gf2cm-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-workers-qgzps", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-4-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6353"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-4", "nics": [{"ip": "192.168.111.24", "mac": "00:32:34:b8:79:a5", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::ef5e:d24f:b921:dbef%enp2s0", "mac": "00:32:34:b8:79:a5", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.46", "mac": "00:32:34:b8:79:a3", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::b539:db85:4c3e:29ab%enp1s0", "mac": "00:32:34:b8:79:a3", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T15:16:25Z", "operationHistory": {"deprovision": {"end": "2021-11-19T15:03:05Z", "start": "2021-11-19T14:59:24Z"}, "inspect": {"end": "2021-11-19T14:21:48Z", "start": "2021-11-19T14:18:04Z"}, "provision": {"end": "2021-11-19T15:06:42Z", "start": "2021-11-19T15:03:06Z"}, "register": {"end": "2021-11-19T15:16:25Z", "start": "2021-11-19T15:16:13Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "d588eb3f-c795-4816-88d8-2aed815dbd00", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-4-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6353"}}}]}
Friday 19 November 2021  15:16:32 +0000 (0:00:01.207)       0:39:53.604 ******* 

TASK [v1aX_integration_test : Expect 401 from /v1/nodes ednpoint] **************
ok: [localhost] => {"changed": false, "connection": "close", "content_length": "381", "content_type": "text/html; charset=iso-8859-1", "date": "Fri, 19 Nov 2021 15:16:33 GMT", "elapsed": 0, "msg": "HTTP Error 401: Unauthorized", "redirected": false, "server": "Apache", "status": 401, "url": "https://172.22.0.2:6385/v1/nodes", "www_authenticate": "Basic realm=\"Restricted WSGI area\""}
Friday 19 November 2021  15:16:33 +0000 (0:00:00.780)       0:39:54.385 ******* 

TASK [v1aX_integration_test : Upgrade cluster] *********************************
included: /home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/tasks/upgrade.yml for localhost
Friday 19 November 2021  15:16:33 +0000 (0:00:00.109)       0:39:54.494 ******* 

TASK [v1aX_integration_test : Set expected ironic image based containers] ******
ok: [localhost] => {"ansible_facts": {"ironic_image_containers": ["mariadb", "ironic-api", "ironic-dnsmasq", "ironic-conductor", "ironic-log-watch", "ironic-inspector"]}, "changed": false}
Friday 19 November 2021  15:16:33 +0000 (0:00:00.064)       0:39:54.559 ******* 

TASK [v1aX_integration_test : Upgrade ironic image based containers] ***********
changed: [localhost] => {"changed": true, "method": "patch", "result": {"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"deployment.kubernetes.io/revision": "1", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"baremetal-operator-ironic\",\"namespace\":\"baremetal-operator-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"baremetal-operator-ironic\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"name\":\"baremetal-operator-ironic\"}},\"spec\":{\"containers\":[{\"command\":[\"/bin/runironic-api\"],\"env\":[{\"name\":\"MARIADB_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"mariadb-password-ftkgc8tmkc\"}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-htpasswd-g689hm7kf5\"}},{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sSf http://127.0.0.1:6385 || curl -sSfk https://127.0.0.1:6385\"]},\"failureThreshold\":3,\"initialDelaySeconds\":120,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"ironic-api\",\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sSf http://127.0.0.1:6385 || curl -sSfk https://127.0.0.1:6385\"]},\"failureThreshold\":3,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"volumeMounts\":[{\"mountPath\":\"/auth/ironic-rpc\",\"name\":\"ironic-rpc-auth-config\",\"readOnly\":true},{\"mountPath\":\"/certs/ironic\",\"name\":\"cert-ironic\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/ironic\",\"name\":\"cert-ironic-ca\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/ironic-inspector\",\"name\":\"cert-ironic-inspector-ca\",\"readOnly\":true},{\"mountPath\":\"/certs/ironic-inspector\",\"name\":\"cert-ironic-inspector\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/mariadb\",\"name\":\"cert-mariadb-ca\",\"readOnly\":true},{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]},{\"command\":[\"/bin/runironic-conductor\"],\"env\":[{\"name\":\"MARIADB_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"mariadb-password-ftkgc8tmkc\"}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-htpasswd-g689hm7kf5\"}},{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sd '{}' -o – -k https://127.0.0.1:8089 || curl -sd '{}' -o – http://127.0.0.1:8089\"]},\"failureThreshold\":3,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"ironic-conductor\",\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sd '{}' -o – -k https://127.0.0.1:8089 || curl -sd '{}' -o – http://127.0.0.1:8089\"]},\"failureThreshold\":3,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"volumeMounts\":[{\"mountPath\":\"/auth/ironic-inspector\",\"name\":\"ironic-inspector-auth-config\",\"readOnly\":true},{\"mountPath\":\"/auth/ironic-rpc\",\"name\":\"ironic-rpc-auth-config\",\"readOnly\":true},{\"mountPath\":\"/certs/ironic\",\"name\":\"cert-ironic\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/ironic\",\"name\":\"cert-ironic-ca\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/ironic-inspector\",\"name\":\"cert-ironic-inspector-ca\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/mariadb\",\"name\":\"cert-mariadb-ca\",\"readOnly\":true},{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]},{\"command\":[\"/bin/runironic-inspector\"],\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-inspector-htpasswd-c8gt7cm2tf\"}},{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sSf http://127.0.0.1:5050 || curl -sSf -k https://127.0.0.1:5050\"]},\"failureThreshold\":3,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"ironic-inspector\",\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sSf http://127.0.0.1:5050 || curl -sSf -k https://127.0.0.1:5050\"]},\"failureThreshold\":3,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"volumeMounts\":[{\"mountPath\":\"/auth/ironic\",\"name\":\"ironic-auth-config\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/ironic\",\"name\":\"cert-ironic-ca\",\"readOnly\":true},{\"mountPath\":\"/certs/ironic-inspector\",\"name\":\"cert-ironic-inspector\",\"readOnly\":true}]},{\"command\":[\"/bin/runmariadb\"],\"env\":[{\"name\":\"MARIADB_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"mariadb-password-ftkgc8tmkc\"}}},{\"name\":\"RESTART_CONTAINER_CERTIFICATE_UPDATED\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"RESTART_CONTAINER_CERTIFICATE_UPDATED\",\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}}],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"mysqladmin status -uironic -p$(printenv MARIADB_PASSWORD)\"]},\"failureThreshold\":3,\"initialDelaySeconds\":120,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"mariadb\",\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"mysqladmin status -uironic -p$(printenv MARIADB_PASSWORD)\"]},\"failureThreshold\":3,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"volumeMounts\":[{\"mountPath\":\"/certs/mariadb\",\"name\":\"cert-mariadb\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/mariadb\",\"name\":\"cert-mariadb-ca\",\"readOnly\":true},{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]},{\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/keepalived\",\"name\":\"ironic-endpoint-keepalived\",\"securityContext\":{\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]}}},{\"command\":[\"/bin/rundnsmasq\"],\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"ss -lun | grep :67 \\u0026\\u0026 ss -lun | grep :69\"]},\"failureThreshold\":3,\"initialDelaySeconds\":120,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"ironic-dnsmasq\",\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"ss -lun | grep :67 \\u0026\\u0026 ss -lun | grep :69\"]},\"failureThreshold\":3,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"securityContext\":{\"capabilities\":{\"add\":[\"NET_ADMIN\"]}},\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]},{\"command\":[\"/bin/runlogwatch.sh\"],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"name\":\"ironic-log-watch\",\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"/usr/local/bin/get-resource.sh\"],\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/ironic-ipa-downloader\",\"imagePullPolicy\":\"Always\",\"name\":\"ironic-ipa-downloader\",\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]}],\"volumes\":[{\"name\":\"ironic-auth-config\",\"secret\":{\"secretName\":\"ironic-auth-config-mhtf2gfc47\"}},{\"name\":\"ironic-inspector-auth-config\",\"secret\":{\"secretName\":\"ironic-inspector-auth-config-52278gh92g\"}},{\"name\":\"ironic-rpc-auth-config\",\"secret\":{\"secretName\":\"ironic-rpc-auth-config-tdtt49fkd6\"}},{\"name\":\"cert-ironic-ca\",\"secret\":{\"secretName\":\"ironic-cacert\"}},{\"name\":\"cert-ironic-inspector-ca\",\"secret\":{\"secretName\":\"ironic-cacert\"}},{\"name\":\"cert-ironic\",\"secret\":{\"secretName\":\"ironic-cert\"}},{\"name\":\"cert-ironic-inspector\",\"secret\":{\"secretName\":\"ironic-inspector-cert\"}},{\"name\":\"cert-mariadb\",\"secret\":{\"secretName\":\"mariadb-cert\"}},{\"name\":\"cert-mariadb-ca\",\"secret\":{\"secretName\":\"ironic-cacert\"}},{\"emptyDir\":{},\"name\":\"ironic-data-volume\"}]}}}}\n"}, "creationTimestamp": "2021-11-19T15:09:54Z", "generation": 2, "managedFields": [{"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:progressDeadlineSeconds": {}, "f:replicas": {}, "f:revisionHistoryLimit": {}, "f:selector": {}, "f:strategy": {"f:type": {}}, "f:template": {"f:metadata": {"f:labels": {".": {}, "f:name": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"ironic-api\"}": {".": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"MARIADB_PASSWORD\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}}, "f:envFrom": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/auth/ironic-rpc\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/ironic-inspector\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/mariadb\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ironic-inspector\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"ironic-conductor\"}": {".": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"MARIADB_PASSWORD\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}}, "f:envFrom": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/auth/ironic-inspector\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/auth/ironic-rpc\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/ironic-inspector\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/mariadb\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"ironic-dnsmasq\"}": {".": {}, "f:command": {}, "f:envFrom": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:securityContext": {".": {}, "f:capabilities": {".": {}, "f:add": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"ironic-endpoint-keepalived\"}": {".": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:securityContext": {".": {}, "f:capabilities": {".": {}, "f:add": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}, "k:{\"name\":\"ironic-inspector\"}": {".": {}, "f:command": {}, "f:envFrom": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/auth/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ironic-inspector\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}, "k:{\"name\":\"ironic-log-watch\"}": {".": {}, "f:command": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"mariadb\"}": {".": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"MARIADB_PASSWORD\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"RESTART_CONTAINER_CERTIFICATE_UPDATED\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:configMapKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certs/ca/mariadb\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/mariadb\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:hostNetwork": {}, "f:initContainers": {".": {}, "k:{\"name\":\"ironic-ipa-downloader\"}": {".": {}, "f:command": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"cert-ironic\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"cert-ironic-ca\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"cert-ironic-inspector\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"cert-ironic-inspector-ca\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"cert-mariadb\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"cert-mariadb-ca\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"ironic-auth-config\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"ironic-data-volume\"}": {".": {}, "f:emptyDir": {}, "f:name": {}}, "k:{\"name\":\"ironic-inspector-auth-config\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"ironic-rpc-auth-config\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}}}}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T15:09:54Z"}, {"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:deployment.kubernetes.io/revision": {}}}, "f:status": {"f:availableReplicas": {}, "f:conditions": {".": {}, "k:{\"type\":\"Available\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Progressing\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:observedGeneration": {}, "f:readyReplicas": {}, "f:replicas": {}, "f:updatedReplicas": {}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T15:11:45Z"}, {"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:template": {"f:spec": {"f:containers": {"k:{\"name\":\"ironic-api\"}": {"f:image": {}}, "k:{\"name\":\"ironic-conductor\"}": {"f:image": {}}, "k:{\"name\":\"ironic-dnsmasq\"}": {"f:image": {}}, "k:{\"name\":\"ironic-inspector\"}": {"f:image": {}}, "k:{\"name\":\"ironic-log-watch\"}": {"f:image": {}}, "k:{\"name\":\"mariadb\"}": {"f:image": {}}}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:16:34Z"}], "name": "baremetal-operator-ironic", "namespace": "baremetal-operator-system", "resourceVersion": "6700", "uid": "381ea451-e0ae-4eb9-a125-90d11cddc31e"}, "spec": {"progressDeadlineSeconds": 600, "replicas": 1, "revisionHistoryLimit": 10, "selector": {"matchLabels": {"name": "baremetal-operator-ironic"}}, "strategy": {"type": "Recreate"}, "template": {"metadata": {"creationTimestamp": null, "labels": {"name": "baremetal-operator-ironic"}}, "spec": {"containers": [{"command": ["/bin/runmariadb"], "env": [{"name": "MARIADB_PASSWORD", "valueFrom": {"secretKeyRef": {"key": "password", "name": "mariadb-password-ftkgc8tmkc"}}}, {"name": "RESTART_CONTAINER_CERTIFICATE_UPDATED", "valueFrom": {"configMapKeyRef": {"key": "RESTART_CONTAINER_CERTIFICATE_UPDATED", "name": "ironic-bmo-configmap-55b4m5mdh2"}}}], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "livenessProbe": {"exec": {"command": ["sh", "-c", "mysqladmin status -uironic -p$(printenv MARIADB_PASSWORD)"]}, "failureThreshold": 3, "initialDelaySeconds": 120, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "mariadb", "readinessProbe": {"exec": {"command": ["sh", "-c", "mysqladmin status -uironic -p$(printenv MARIADB_PASSWORD)"]}, "failureThreshold": 3, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certs/mariadb", "name": "cert-mariadb", "readOnly": true}, {"mountPath": "/certs/ca/mariadb", "name": "cert-mariadb-ca", "readOnly": true}, {"mountPath": "/shared", "name": "ironic-data-volume"}]}, {"command": ["/bin/runironic-api"], "env": [{"name": "MARIADB_PASSWORD", "valueFrom": {"secretKeyRef": {"key": "password", "name": "mariadb-password-ftkgc8tmkc"}}}], "envFrom": [{"configMapRef": {"name": "ironic-htpasswd-g689hm7kf5"}}, {"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "livenessProbe": {"exec": {"command": ["sh", "-c", "curl -sSf http://127.0.0.1:6385 || curl -sSfk https://127.0.0.1:6385"]}, "failureThreshold": 3, "initialDelaySeconds": 120, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "ironic-api", "readinessProbe": {"exec": {"command": ["sh", "-c", "curl -sSf http://127.0.0.1:6385 || curl -sSfk https://127.0.0.1:6385"]}, "failureThreshold": 3, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/auth/ironic-rpc", "name": "ironic-rpc-auth-config", "readOnly": true}, {"mountPath": "/certs/ironic", "name": "cert-ironic", "readOnly": true}, {"mountPath": "/certs/ca/ironic", "name": "cert-ironic-ca", "readOnly": true}, {"mountPath": "/certs/ca/ironic-inspector", "name": "cert-ironic-inspector-ca", "readOnly": true}, {"mountPath": "/certs/ironic-inspector", "name": "cert-ironic-inspector", "readOnly": true}, {"mountPath": "/certs/ca/mariadb", "name": "cert-mariadb-ca", "readOnly": true}, {"mountPath": "/shared", "name": "ironic-data-volume"}]}, {"envFrom": [{"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/keepalived", "imagePullPolicy": "Always", "name": "ironic-endpoint-keepalived", "resources": {}, "securityContext": {"capabilities": {"add": ["NET_ADMIN", "NET_RAW"]}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File"}, {"command": ["/bin/rundnsmasq"], "envFrom": [{"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "livenessProbe": {"exec": {"command": ["sh", "-c", "ss -lun | grep :67 && ss -lun | grep :69"]}, "failureThreshold": 3, "initialDelaySeconds": 120, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "ironic-dnsmasq", "readinessProbe": {"exec": {"command": ["sh", "-c", "ss -lun | grep :67 && ss -lun | grep :69"]}, "failureThreshold": 3, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "securityContext": {"capabilities": {"add": ["NET_ADMIN"]}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/shared", "name": "ironic-data-volume"}]}, {"command": ["/bin/runironic-conductor"], "env": [{"name": "MARIADB_PASSWORD", "valueFrom": {"secretKeyRef": {"key": "password", "name": "mariadb-password-ftkgc8tmkc"}}}], "envFrom": [{"configMapRef": {"name": "ironic-htpasswd-g689hm7kf5"}}, {"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "livenessProbe": {"exec": {"command": ["sh", "-c", "curl -sd '{}' -o – -k https://127.0.0.1:8089 || curl -sd '{}' -o – http://127.0.0.1:8089"]}, "failureThreshold": 3, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "ironic-conductor", "readinessProbe": {"exec": {"command": ["sh", "-c", "curl -sd '{}' -o – -k https://127.0.0.1:8089 || curl -sd '{}' -o – http://127.0.0.1:8089"]}, "failureThreshold": 3, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/auth/ironic-inspector", "name": "ironic-inspector-auth-config", "readOnly": true}, {"mountPath": "/auth/ironic-rpc", "name": "ironic-rpc-auth-config", "readOnly": true}, {"mountPath": "/certs/ironic", "name": "cert-ironic", "readOnly": true}, {"mountPath": "/certs/ca/ironic", "name": "cert-ironic-ca", "readOnly": true}, {"mountPath": "/certs/ca/ironic-inspector", "name": "cert-ironic-inspector-ca", "readOnly": true}, {"mountPath": "/certs/ca/mariadb", "name": "cert-mariadb-ca", "readOnly": true}, {"mountPath": "/shared", "name": "ironic-data-volume"}]}, {"command": ["/bin/runlogwatch.sh"], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "name": "ironic-log-watch", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/shared", "name": "ironic-data-volume"}]}, {"command": ["/bin/runironic-inspector"], "envFrom": [{"configMapRef": {"name": "ironic-inspector-htpasswd-c8gt7cm2tf"}}, {"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "livenessProbe": {"exec": {"command": ["sh", "-c", "curl -sSf http://127.0.0.1:5050 || curl -sSf -k https://127.0.0.1:5050"]}, "failureThreshold": 3, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "ironic-inspector", "readinessProbe": {"exec": {"command": ["sh", "-c", "curl -sSf http://127.0.0.1:5050 || curl -sSf -k https://127.0.0.1:5050"]}, "failureThreshold": 3, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/auth/ironic", "name": "ironic-auth-config", "readOnly": true}, {"mountPath": "/certs/ca/ironic", "name": "cert-ironic-ca", "readOnly": true}, {"mountPath": "/certs/ironic-inspector", "name": "cert-ironic-inspector", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "hostNetwork": true, "initContainers": [{"command": ["/usr/local/bin/get-resource.sh"], "envFrom": [{"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/ironic-ipa-downloader", "imagePullPolicy": "Always", "name": "ironic-ipa-downloader", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/shared", "name": "ironic-data-volume"}]}], "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "terminationGracePeriodSeconds": 30, "volumes": [{"name": "ironic-auth-config", "secret": {"defaultMode": 420, "secretName": "ironic-auth-config-mhtf2gfc47"}}, {"name": "ironic-inspector-auth-config", "secret": {"defaultMode": 420, "secretName": "ironic-inspector-auth-config-52278gh92g"}}, {"name": "ironic-rpc-auth-config", "secret": {"defaultMode": 420, "secretName": "ironic-rpc-auth-config-tdtt49fkd6"}}, {"name": "cert-ironic-ca", "secret": {"defaultMode": 420, "secretName": "ironic-cacert"}}, {"name": "cert-ironic-inspector-ca", "secret": {"defaultMode": 420, "secretName": "ironic-cacert"}}, {"name": "cert-ironic", "secret": {"defaultMode": 420, "secretName": "ironic-cert"}}, {"name": "cert-ironic-inspector", "secret": {"defaultMode": 420, "secretName": "ironic-inspector-cert"}}, {"name": "cert-mariadb", "secret": {"defaultMode": 420, "secretName": "mariadb-cert"}}, {"name": "cert-mariadb-ca", "secret": {"defaultMode": 420, "secretName": "ironic-cacert"}}, {"emptyDir": {}, "name": "ironic-data-volume"}]}}}, "status": {"availableReplicas": 1, "conditions": [{"lastTransitionTime": "2021-11-19T15:11:45Z", "lastUpdateTime": "2021-11-19T15:11:45Z", "message": "Deployment has minimum availability.", "reason": "MinimumReplicasAvailable", "status": "True", "type": "Available"}, {"lastTransitionTime": "2021-11-19T15:09:55Z", "lastUpdateTime": "2021-11-19T15:11:45Z", "message": "ReplicaSet \"baremetal-operator-ironic-8666d5c784\" has successfully progressed.", "reason": "NewReplicaSetAvailable", "status": "True", "type": "Progressing"}], "observedGeneration": 1, "readyReplicas": 1, "replicas": 1, "updatedReplicas": 1}}}
Friday 19 November 2021  15:16:34 +0000 (0:00:00.977)       0:39:55.536 ******* 
FAILED retry: Wait for ironic update to rollout
kind: Deployment
name: baremetal-operator-ironic
status:
  conditions:
  -   lastTransitionTime: '2021-11-19T15:09:55Z'
      lastUpdateTime: '2021-11-19T15:11:45Z'
      message: ReplicaSet "baremetal-operator-ironic-8666d5c784" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
  -   lastTransitionTime: '2021-11-19T15:16:34Z'
      lastUpdateTime: '2021-11-19T15:16:34Z'
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: 'False'
      type: Available
  observedGeneration: 2

RETRYING: Wait for ironic update to rollout 1/100
RETRYING: Wait for ironic update to rollout 2/100
RETRYING: Wait for ironic update to rollout 3/100
RETRYING: Wait for ironic update to rollout 4/100
RETRYING: Wait for ironic update to rollout 5/100
RETRYING: Wait for ironic update to rollout 6/100
RETRYING: Wait for ironic update to rollout 7/100
RETRYING: Wait for ironic update to rollout 8/100
RETRYING: Wait for ironic update to rollout 9/100

TASK [v1aX_integration_test : Wait for ironic update to rollout] ***************
ok: [localhost] => {"api_found": true, "attempts": 10, "changed": false, "resources": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"deployment.kubernetes.io/revision": "2", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"baremetal-operator-ironic\",\"namespace\":\"baremetal-operator-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"baremetal-operator-ironic\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"name\":\"baremetal-operator-ironic\"}},\"spec\":{\"containers\":[{\"command\":[\"/bin/runironic-api\"],\"env\":[{\"name\":\"MARIADB_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"mariadb-password-ftkgc8tmkc\"}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-htpasswd-g689hm7kf5\"}},{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sSf http://127.0.0.1:6385 || curl -sSfk https://127.0.0.1:6385\"]},\"failureThreshold\":3,\"initialDelaySeconds\":120,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"ironic-api\",\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sSf http://127.0.0.1:6385 || curl -sSfk https://127.0.0.1:6385\"]},\"failureThreshold\":3,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"volumeMounts\":[{\"mountPath\":\"/auth/ironic-rpc\",\"name\":\"ironic-rpc-auth-config\",\"readOnly\":true},{\"mountPath\":\"/certs/ironic\",\"name\":\"cert-ironic\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/ironic\",\"name\":\"cert-ironic-ca\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/ironic-inspector\",\"name\":\"cert-ironic-inspector-ca\",\"readOnly\":true},{\"mountPath\":\"/certs/ironic-inspector\",\"name\":\"cert-ironic-inspector\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/mariadb\",\"name\":\"cert-mariadb-ca\",\"readOnly\":true},{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]},{\"command\":[\"/bin/runironic-conductor\"],\"env\":[{\"name\":\"MARIADB_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"mariadb-password-ftkgc8tmkc\"}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-htpasswd-g689hm7kf5\"}},{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sd '{}' -o – -k https://127.0.0.1:8089 || curl -sd '{}' -o – http://127.0.0.1:8089\"]},\"failureThreshold\":3,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"ironic-conductor\",\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sd '{}' -o – -k https://127.0.0.1:8089 || curl -sd '{}' -o – http://127.0.0.1:8089\"]},\"failureThreshold\":3,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"volumeMounts\":[{\"mountPath\":\"/auth/ironic-inspector\",\"name\":\"ironic-inspector-auth-config\",\"readOnly\":true},{\"mountPath\":\"/auth/ironic-rpc\",\"name\":\"ironic-rpc-auth-config\",\"readOnly\":true},{\"mountPath\":\"/certs/ironic\",\"name\":\"cert-ironic\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/ironic\",\"name\":\"cert-ironic-ca\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/ironic-inspector\",\"name\":\"cert-ironic-inspector-ca\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/mariadb\",\"name\":\"cert-mariadb-ca\",\"readOnly\":true},{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]},{\"command\":[\"/bin/runironic-inspector\"],\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-inspector-htpasswd-c8gt7cm2tf\"}},{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sSf http://127.0.0.1:5050 || curl -sSf -k https://127.0.0.1:5050\"]},\"failureThreshold\":3,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"ironic-inspector\",\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"curl -sSf http://127.0.0.1:5050 || curl -sSf -k https://127.0.0.1:5050\"]},\"failureThreshold\":3,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"volumeMounts\":[{\"mountPath\":\"/auth/ironic\",\"name\":\"ironic-auth-config\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/ironic\",\"name\":\"cert-ironic-ca\",\"readOnly\":true},{\"mountPath\":\"/certs/ironic-inspector\",\"name\":\"cert-ironic-inspector\",\"readOnly\":true}]},{\"command\":[\"/bin/runmariadb\"],\"env\":[{\"name\":\"MARIADB_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"mariadb-password-ftkgc8tmkc\"}}},{\"name\":\"RESTART_CONTAINER_CERTIFICATE_UPDATED\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"RESTART_CONTAINER_CERTIFICATE_UPDATED\",\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}}],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"mysqladmin status -uironic -p$(printenv MARIADB_PASSWORD)\"]},\"failureThreshold\":3,\"initialDelaySeconds\":120,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"mariadb\",\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"mysqladmin status -uironic -p$(printenv MARIADB_PASSWORD)\"]},\"failureThreshold\":3,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"volumeMounts\":[{\"mountPath\":\"/certs/mariadb\",\"name\":\"cert-mariadb\",\"readOnly\":true},{\"mountPath\":\"/certs/ca/mariadb\",\"name\":\"cert-mariadb-ca\",\"readOnly\":true},{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]},{\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/keepalived\",\"name\":\"ironic-endpoint-keepalived\",\"securityContext\":{\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]}}},{\"command\":[\"/bin/rundnsmasq\"],\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"ss -lun | grep :67 \\u0026\\u0026 ss -lun | grep :69\"]},\"failureThreshold\":3,\"initialDelaySeconds\":120,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"ironic-dnsmasq\",\"readinessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"ss -lun | grep :67 \\u0026\\u0026 ss -lun | grep :69\"]},\"failureThreshold\":3,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"securityContext\":{\"capabilities\":{\"add\":[\"NET_ADMIN\"]}},\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]},{\"command\":[\"/bin/runlogwatch.sh\"],\"image\":\"quay.io/metal3-io/ironic\",\"imagePullPolicy\":\"Always\",\"name\":\"ironic-log-watch\",\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"/usr/local/bin/get-resource.sh\"],\"envFrom\":[{\"configMapRef\":{\"name\":\"ironic-bmo-configmap-55b4m5mdh2\"}}],\"image\":\"quay.io/metal3-io/ironic-ipa-downloader\",\"imagePullPolicy\":\"Always\",\"name\":\"ironic-ipa-downloader\",\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"ironic-data-volume\"}]}],\"volumes\":[{\"name\":\"ironic-auth-config\",\"secret\":{\"secretName\":\"ironic-auth-config-mhtf2gfc47\"}},{\"name\":\"ironic-inspector-auth-config\",\"secret\":{\"secretName\":\"ironic-inspector-auth-config-52278gh92g\"}},{\"name\":\"ironic-rpc-auth-config\",\"secret\":{\"secretName\":\"ironic-rpc-auth-config-tdtt49fkd6\"}},{\"name\":\"cert-ironic-ca\",\"secret\":{\"secretName\":\"ironic-cacert\"}},{\"name\":\"cert-ironic-inspector-ca\",\"secret\":{\"secretName\":\"ironic-cacert\"}},{\"name\":\"cert-ironic\",\"secret\":{\"secretName\":\"ironic-cert\"}},{\"name\":\"cert-ironic-inspector\",\"secret\":{\"secretName\":\"ironic-inspector-cert\"}},{\"name\":\"cert-mariadb\",\"secret\":{\"secretName\":\"mariadb-cert\"}},{\"name\":\"cert-mariadb-ca\",\"secret\":{\"secretName\":\"ironic-cacert\"}},{\"emptyDir\":{},\"name\":\"ironic-data-volume\"}]}}}}\n"}, "creationTimestamp": "2021-11-19T15:09:54Z", "generation": 2, "managedFields": [{"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}}, "f:spec": {"f:progressDeadlineSeconds": {}, "f:replicas": {}, "f:revisionHistoryLimit": {}, "f:selector": {}, "f:strategy": {"f:type": {}}, "f:template": {"f:metadata": {"f:labels": {".": {}, "f:name": {}}}, "f:spec": {"f:containers": {"k:{\"name\":\"ironic-api\"}": {".": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"MARIADB_PASSWORD\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}}, "f:envFrom": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/auth/ironic-rpc\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/ironic-inspector\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/mariadb\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ironic-inspector\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"ironic-conductor\"}": {".": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"MARIADB_PASSWORD\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}}, "f:envFrom": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/auth/ironic-inspector\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/auth/ironic-rpc\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/ironic-inspector\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/mariadb\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"ironic-dnsmasq\"}": {".": {}, "f:command": {}, "f:envFrom": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:securityContext": {".": {}, "f:capabilities": {".": {}, "f:add": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"ironic-endpoint-keepalived\"}": {".": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:securityContext": {".": {}, "f:capabilities": {".": {}, "f:add": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}, "k:{\"name\":\"ironic-inspector\"}": {".": {}, "f:command": {}, "f:envFrom": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/auth/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ca/ironic\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/ironic-inspector\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}}, "k:{\"name\":\"ironic-log-watch\"}": {".": {}, "f:command": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"mariadb\"}": {".": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"MARIADB_PASSWORD\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"RESTART_CONTAINER_CERTIFICATE_UPDATED\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:configMapKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:readinessProbe": {".": {}, "f:exec": {".": {}, "f:command": {}}, "f:failureThreshold": {}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certs/ca/mariadb\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/certs/mariadb\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:hostNetwork": {}, "f:initContainers": {".": {}, "k:{\"name\":\"ironic-ipa-downloader\"}": {".": {}, "f:command": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/shared\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"cert-ironic\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"cert-ironic-ca\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"cert-ironic-inspector\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"cert-ironic-inspector-ca\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"cert-mariadb\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"cert-mariadb-ca\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"ironic-auth-config\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"ironic-data-volume\"}": {".": {}, "f:emptyDir": {}, "f:name": {}}, "k:{\"name\":\"ironic-inspector-auth-config\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"ironic-rpc-auth-config\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}}}}}}, "manager": "kubectl-client-side-apply", "operation": "Update", "time": "2021-11-19T15:09:54Z"}, {"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:template": {"f:spec": {"f:containers": {"k:{\"name\":\"ironic-api\"}": {"f:image": {}}, "k:{\"name\":\"ironic-conductor\"}": {"f:image": {}}, "k:{\"name\":\"ironic-dnsmasq\"}": {"f:image": {}}, "k:{\"name\":\"ironic-inspector\"}": {"f:image": {}}, "k:{\"name\":\"ironic-log-watch\"}": {"f:image": {}}, "k:{\"name\":\"mariadb\"}": {"f:image": {}}}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:16:34Z"}, {"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:deployment.kubernetes.io/revision": {}}}, "f:status": {"f:availableReplicas": {}, "f:conditions": {".": {}, "k:{\"type\":\"Available\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Progressing\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:observedGeneration": {}, "f:readyReplicas": {}, "f:replicas": {}, "f:updatedReplicas": {}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T15:18:05Z"}], "name": "baremetal-operator-ironic", "namespace": "baremetal-operator-system", "resourceVersion": "7229", "uid": "381ea451-e0ae-4eb9-a125-90d11cddc31e"}, "spec": {"progressDeadlineSeconds": 600, "replicas": 1, "revisionHistoryLimit": 10, "selector": {"matchLabels": {"name": "baremetal-operator-ironic"}}, "strategy": {"type": "Recreate"}, "template": {"metadata": {"creationTimestamp": null, "labels": {"name": "baremetal-operator-ironic"}}, "spec": {"containers": [{"command": ["/bin/runmariadb"], "env": [{"name": "MARIADB_PASSWORD", "valueFrom": {"secretKeyRef": {"key": "password", "name": "mariadb-password-ftkgc8tmkc"}}}, {"name": "RESTART_CONTAINER_CERTIFICATE_UPDATED", "valueFrom": {"configMapKeyRef": {"key": "RESTART_CONTAINER_CERTIFICATE_UPDATED", "name": "ironic-bmo-configmap-55b4m5mdh2"}}}], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "livenessProbe": {"exec": {"command": ["sh", "-c", "mysqladmin status -uironic -p$(printenv MARIADB_PASSWORD)"]}, "failureThreshold": 3, "initialDelaySeconds": 120, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "mariadb", "readinessProbe": {"exec": {"command": ["sh", "-c", "mysqladmin status -uironic -p$(printenv MARIADB_PASSWORD)"]}, "failureThreshold": 3, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certs/mariadb", "name": "cert-mariadb", "readOnly": true}, {"mountPath": "/certs/ca/mariadb", "name": "cert-mariadb-ca", "readOnly": true}, {"mountPath": "/shared", "name": "ironic-data-volume"}]}, {"command": ["/bin/runironic-api"], "env": [{"name": "MARIADB_PASSWORD", "valueFrom": {"secretKeyRef": {"key": "password", "name": "mariadb-password-ftkgc8tmkc"}}}], "envFrom": [{"configMapRef": {"name": "ironic-htpasswd-g689hm7kf5"}}, {"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "livenessProbe": {"exec": {"command": ["sh", "-c", "curl -sSf http://127.0.0.1:6385 || curl -sSfk https://127.0.0.1:6385"]}, "failureThreshold": 3, "initialDelaySeconds": 120, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "ironic-api", "readinessProbe": {"exec": {"command": ["sh", "-c", "curl -sSf http://127.0.0.1:6385 || curl -sSfk https://127.0.0.1:6385"]}, "failureThreshold": 3, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/auth/ironic-rpc", "name": "ironic-rpc-auth-config", "readOnly": true}, {"mountPath": "/certs/ironic", "name": "cert-ironic", "readOnly": true}, {"mountPath": "/certs/ca/ironic", "name": "cert-ironic-ca", "readOnly": true}, {"mountPath": "/certs/ca/ironic-inspector", "name": "cert-ironic-inspector-ca", "readOnly": true}, {"mountPath": "/certs/ironic-inspector", "name": "cert-ironic-inspector", "readOnly": true}, {"mountPath": "/certs/ca/mariadb", "name": "cert-mariadb-ca", "readOnly": true}, {"mountPath": "/shared", "name": "ironic-data-volume"}]}, {"envFrom": [{"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/keepalived", "imagePullPolicy": "Always", "name": "ironic-endpoint-keepalived", "resources": {}, "securityContext": {"capabilities": {"add": ["NET_ADMIN", "NET_RAW"]}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File"}, {"command": ["/bin/rundnsmasq"], "envFrom": [{"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "livenessProbe": {"exec": {"command": ["sh", "-c", "ss -lun | grep :67 && ss -lun | grep :69"]}, "failureThreshold": 3, "initialDelaySeconds": 120, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "ironic-dnsmasq", "readinessProbe": {"exec": {"command": ["sh", "-c", "ss -lun | grep :67 && ss -lun | grep :69"]}, "failureThreshold": 3, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "securityContext": {"capabilities": {"add": ["NET_ADMIN"]}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/shared", "name": "ironic-data-volume"}]}, {"command": ["/bin/runironic-conductor"], "env": [{"name": "MARIADB_PASSWORD", "valueFrom": {"secretKeyRef": {"key": "password", "name": "mariadb-password-ftkgc8tmkc"}}}], "envFrom": [{"configMapRef": {"name": "ironic-htpasswd-g689hm7kf5"}}, {"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "livenessProbe": {"exec": {"command": ["sh", "-c", "curl -sd '{}' -o – -k https://127.0.0.1:8089 || curl -sd '{}' -o – http://127.0.0.1:8089"]}, "failureThreshold": 3, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "ironic-conductor", "readinessProbe": {"exec": {"command": ["sh", "-c", "curl -sd '{}' -o – -k https://127.0.0.1:8089 || curl -sd '{}' -o – http://127.0.0.1:8089"]}, "failureThreshold": 3, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/auth/ironic-inspector", "name": "ironic-inspector-auth-config", "readOnly": true}, {"mountPath": "/auth/ironic-rpc", "name": "ironic-rpc-auth-config", "readOnly": true}, {"mountPath": "/certs/ironic", "name": "cert-ironic", "readOnly": true}, {"mountPath": "/certs/ca/ironic", "name": "cert-ironic-ca", "readOnly": true}, {"mountPath": "/certs/ca/ironic-inspector", "name": "cert-ironic-inspector-ca", "readOnly": true}, {"mountPath": "/certs/ca/mariadb", "name": "cert-mariadb-ca", "readOnly": true}, {"mountPath": "/shared", "name": "ironic-data-volume"}]}, {"command": ["/bin/runlogwatch.sh"], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "name": "ironic-log-watch", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/shared", "name": "ironic-data-volume"}]}, {"command": ["/bin/runironic-inspector"], "envFrom": [{"configMapRef": {"name": "ironic-inspector-htpasswd-c8gt7cm2tf"}}, {"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/ironic:master", "imagePullPolicy": "Always", "livenessProbe": {"exec": {"command": ["sh", "-c", "curl -sSf http://127.0.0.1:5050 || curl -sSf -k https://127.0.0.1:5050"]}, "failureThreshold": 3, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "name": "ironic-inspector", "readinessProbe": {"exec": {"command": ["sh", "-c", "curl -sSf http://127.0.0.1:5050 || curl -sSf -k https://127.0.0.1:5050"]}, "failureThreshold": 3, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 1}, "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/auth/ironic", "name": "ironic-auth-config", "readOnly": true}, {"mountPath": "/certs/ca/ironic", "name": "cert-ironic-ca", "readOnly": true}, {"mountPath": "/certs/ironic-inspector", "name": "cert-ironic-inspector", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "hostNetwork": true, "initContainers": [{"command": ["/usr/local/bin/get-resource.sh"], "envFrom": [{"configMapRef": {"name": "ironic-bmo-configmap-55b4m5mdh2"}}], "image": "quay.io/metal3-io/ironic-ipa-downloader", "imagePullPolicy": "Always", "name": "ironic-ipa-downloader", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/shared", "name": "ironic-data-volume"}]}], "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "terminationGracePeriodSeconds": 30, "volumes": [{"name": "ironic-auth-config", "secret": {"defaultMode": 420, "secretName": "ironic-auth-config-mhtf2gfc47"}}, {"name": "ironic-inspector-auth-config", "secret": {"defaultMode": 420, "secretName": "ironic-inspector-auth-config-52278gh92g"}}, {"name": "ironic-rpc-auth-config", "secret": {"defaultMode": 420, "secretName": "ironic-rpc-auth-config-tdtt49fkd6"}}, {"name": "cert-ironic-ca", "secret": {"defaultMode": 420, "secretName": "ironic-cacert"}}, {"name": "cert-ironic-inspector-ca", "secret": {"defaultMode": 420, "secretName": "ironic-cacert"}}, {"name": "cert-ironic", "secret": {"defaultMode": 420, "secretName": "ironic-cert"}}, {"name": "cert-ironic-inspector", "secret": {"defaultMode": 420, "secretName": "ironic-inspector-cert"}}, {"name": "cert-mariadb", "secret": {"defaultMode": 420, "secretName": "mariadb-cert"}}, {"name": "cert-mariadb-ca", "secret": {"defaultMode": 420, "secretName": "ironic-cacert"}}, {"emptyDir": {}, "name": "ironic-data-volume"}]}}}, "status": {"availableReplicas": 1, "conditions": [{"lastTransitionTime": "2021-11-19T15:18:05Z", "lastUpdateTime": "2021-11-19T15:18:05Z", "message": "Deployment has minimum availability.", "reason": "MinimumReplicasAvailable", "status": "True", "type": "Available"}, {"lastTransitionTime": "2021-11-19T15:09:55Z", "lastUpdateTime": "2021-11-19T15:18:05Z", "message": "ReplicaSet \"baremetal-operator-ironic-6996cb9c54\" has successfully progressed.", "reason": "NewReplicaSetAvailable", "status": "True", "type": "Progressing"}], "observedGeneration": 2, "readyReplicas": 1, "replicas": 1, "updatedReplicas": 1}}]}
Friday 19 November 2021  15:18:12 +0000 (0:01:38.395)       0:41:33.931 ******* 

TASK [v1aX_integration_test : Download upgraded boot-disk image for deployment] ***
included: /home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/tasks/download_image.yml for localhost
Friday 19 November 2021  15:18:12 +0000 (0:00:00.086)       0:41:34.018 ******* 

TASK [v1aX_integration_test : Get the facts about local image] *****************
ok: [localhost] => {"changed": false, "stat": {"atime": 1637248098.1713996, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 7023952, "charset": "binary", "checksum": "87cf6a826b059e0c00ba8b0990bfebbac7eba438", "ctime": 1637334591.8196754, "dev": 2065, "device_type": 0, "executable": false, "exists": true, "gid": 1000, "gr_name": "capm3", "inode": 777369, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "application/octet-stream", "mode": "0644", "mtime": 1636648912.717436, "nlink": 1, "path": "/opt/metal3-dev-env/ironic/html/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img", "pw_name": "capm3", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 21474836480, "uid": 1000, "version": "2672811399", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
Friday 19 November 2021  15:19:57 +0000 (0:01:44.260)       0:43:18.278 ******* 

TASK [v1aX_integration_test : debug] *******************************************
ok: [localhost] => {
    "msg": "Local image UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img is found"
}
Friday 19 November 2021  15:19:57 +0000 (0:00:00.073)       0:43:18.352 ******* 
Friday 19 November 2021  15:19:57 +0000 (0:00:00.062)       0:43:18.415 ******* 
Friday 19 November 2021  15:19:57 +0000 (0:00:00.067)       0:43:18.482 ******* 
Friday 19 November 2021  15:19:57 +0000 (0:00:00.061)       0:43:18.544 ******* 
Friday 19 November 2021  15:19:57 +0000 (0:00:00.068)       0:43:18.613 ******* 
Friday 19 November 2021  15:19:57 +0000 (0:00:00.064)       0:43:18.677 ******* 

TASK [v1aX_integration_test : Get cluster uid] *********************************
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Cluster", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"cluster.x-k8s.io/v1beta1\",\"kind\":\"Cluster\",\"metadata\":{\"annotations\":{},\"name\":\"test1\",\"namespace\":\"metal3\"},\"spec\":{\"clusterNetwork\":{\"pods\":{\"cidrBlocks\":[\"192.168.0.0/18\"]},\"services\":{\"cidrBlocks\":[\"10.96.0.0/12\"]}},\"controlPlaneRef\":{\"apiVersion\":\"controlplane.cluster.x-k8s.io/v1beta1\",\"kind\":\"KubeadmControlPlane\",\"name\":\"test1\"},\"infrastructureRef\":{\"apiVersion\":\"infrastructure.cluster.x-k8s.io/v1beta1\",\"kind\":\"Metal3Cluster\",\"name\":\"test1\"}}}\n"}, "creationTimestamp": "2021-11-19T15:15:56Z", "finalizers": ["cluster.cluster.x-k8s.io"], "generation": 2, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:conditions": {}, "f:controlPlaneReady": {}, "f:infrastructureReady": {}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:13:19Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"cluster.cluster.x-k8s.io\"": {}}}, "f:spec": {".": {}, "f:clusterNetwork": {".": {}, "f:pods": {".": {}, "f:cidrBlocks": {}}, "f:services": {".": {}, "f:cidrBlocks": {}}}, "f:controlPlaneEndpoint": {".": {}, "f:host": {}, "f:port": {}}, "f:controlPlaneRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:paused": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:56Z"}], "name": "test1", "namespace": "metal3", "resourceVersion": "6666", "uid": "efa301fe-d967-4fba-be67-c19a396b89d5"}, "spec": {"clusterNetwork": {"pods": {"cidrBlocks": ["192.168.0.0/18"]}, "services": {"cidrBlocks": ["10.96.0.0/12"]}}, "controlPlaneEndpoint": {"host": "192.168.111.249", "port": 6443}, "controlPlaneRef": {"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "kind": "KubeadmControlPlane", "name": "test1", "namespace": "metal3"}, "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Cluster", "name": "test1", "namespace": "metal3"}}, "status": {"conditions": [{"lastTransitionTime": "2021-11-19T15:16:30Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "ControlPlaneInitialized"}, {"lastTransitionTime": "2021-11-19T15:16:30Z", "status": "True", "type": "ControlPlaneReady"}, {"lastTransitionTime": "2021-11-19T15:16:10Z", "status": "True", "type": "InfrastructureReady"}], "controlPlaneReady": true, "infrastructureReady": true, "observedGeneration": 2, "phase": "Provisioned"}}]}
Friday 19 November 2021  15:19:58 +0000 (0:00:00.872)       0:43:19.550 ******* 

TASK [v1aX_integration_test : Create controlplane Metal3MachineTemplates] ******
changed: [localhost] => {"changed": true, "method": "create", "result": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3MachineTemplate", "metadata": {"creationTimestamp": "2021-11-19T15:19:59Z", "generation": 1, "managedFields": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {".": {}, "k:{\"uid\":\"efa301fe-d967-4fba-be67-c19a396b89d5\"}": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:nodeReuse": {}, "f:template": {".": {}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:dataTemplate": {".": {}, "f:name": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:19:59Z"}], "name": "test1-new-controlplane-image", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Cluster", "name": "test1", "uid": "efa301fe-d967-4fba-be67-c19a396b89d5"}], "resourceVersion": "7819", "uid": "12fa4ab8-c4cf-4503-861f-c1bc1d598cdf"}, "spec": {"nodeReuse": false, "template": {"spec": {"automatedCleaningMode": "metadata", "dataTemplate": {"name": "test1-controlplane-template"}, "hostSelector": {}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img"}}}}}}
Friday 19 November 2021  15:19:59 +0000 (0:00:01.098)       0:43:20.648 ******* 

TASK [v1aX_integration_test : Create worker Metal3MachineTemplates] ************
changed: [localhost] => {"changed": true, "method": "create", "result": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3MachineTemplate", "metadata": {"creationTimestamp": "2021-11-19T15:20:00Z", "generation": 1, "managedFields": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {".": {}, "k:{\"uid\":\"efa301fe-d967-4fba-be67-c19a396b89d5\"}": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:nodeReuse": {}, "f:template": {".": {}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:dataTemplate": {".": {}, "f:name": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:20:00Z"}], "name": "test1-new-workers-image", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Cluster", "name": "test1", "uid": "efa301fe-d967-4fba-be67-c19a396b89d5"}], "resourceVersion": "7831", "uid": "995596fb-b18c-4911-be19-f2238ad4262e"}, "spec": {"nodeReuse": false, "template": {"spec": {"automatedCleaningMode": "metadata", "dataTemplate": {"name": "test1-workers-template"}, "hostSelector": {}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img"}}}}}}
Friday 19 November 2021  15:20:00 +0000 (0:00:01.098)       0:43:21.747 ******* 

TASK [v1aX_integration_test : Update boot-disk and kubernetes versions of controlplane nodes] ***
changed: [localhost] => {"changed": true, "method": "patch", "result": {"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "kind": "KubeadmControlPlane", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"controlplane.cluster.x-k8s.io/v1beta1\",\"kind\":\"KubeadmControlPlane\",\"metadata\":{\"annotations\":{},\"name\":\"test1\",\"namespace\":\"metal3\"},\"spec\":{\"kubeadmConfigSpec\":{\"clusterConfiguration\":{},\"files\":[{\"content\":\"#!/bin/bash\\nwhile :; do\\n  curl -sk https://127.0.0.1:6443/healthz 1\\u003e\\u00262 \\u003e /dev/null\\n  isOk=$?\\n  isActive=$(systemctl show -p ActiveState keepalived.service | cut -d'=' -f2)\\n  if [ $isOk == \\\"0\\\" ] \\u0026\\u0026  [ $isActive != \\\"active\\\" ]; then\\n    logger 'API server is healthy, however keepalived is not running, starting keepalived'\\n    echo 'API server is healthy, however keepalived is not running, starting keepalived'\\n    sudo systemctl start keepalived.service\\n  elif [ $isOk != \\\"0\\\" ] \\u0026\\u0026  [ $isActive == \\\"active\\\" ]; then\\n    logger 'API server is not healthy, however keepalived running, stopping keepalived'\\n    echo 'API server is not healthy, however keepalived running, stopping keepalived'\\n    sudo systemctl stop keepalived.service\\n  fi\\n  sleep 5\\ndone\\n\",\"owner\":\"root:root\",\"path\":\"/usr/local/bin/monitor.keepalived.sh\",\"permissions\":\"0755\"},{\"content\":\"[Unit]\\nDescription=Monitors keepalived adjusts status with that of API server\\nAfter=syslog.target network-online.target\\n\\n[Service]\\nType=simple\\nRestart=always\\nExecStart=/usr/local/bin/monitor.keepalived.sh\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\"owner\":\"root:root\",\"path\":\"/lib/systemd/system/monitor.keepalived.service\"},{\"content\":\"! Configuration File for keepalived\\nglobal_defs {\\n    notification_email {\\n    sysadmin@example.com\\n    support@example.com\\n    }\\n    notification_email_from lb@example.com\\n    smtp_server localhost\\n    smtp_connect_timeout 30\\n}\\nvrrp_instance VI_2 {\\n    state MASTER\\n    interface enp2s0\\n    virtual_router_id 2\\n    priority 101\\n    advert_int 1\\n    virtual_ipaddress {\\n        192.168.111.249\\n    }\\n}\\n\",\"path\":\"/etc/keepalived/keepalived.conf\"},{\"content\":\"network:\\n  version: 2\\n  renderer: networkd\\n  bridges:\\n    ironicendpoint:\\n      interfaces: [enp1s0]\\n      addresses:\\n      - {{ ds.meta_data.provisioningIP }}/{{ ds.meta_data.provisioningCIDR }}\\n\",\"owner\":\"root:root\",\"path\":\"/etc/netplan/52-ironicendpoint.yaml\",\"permissions\":\"0644\"},{\"content\":\"[registries.search]\\nregistries = ['docker.io']\\n\\n[registries.insecure]\\nregistries = ['192.168.111.1:5000']\\n\",\"path\":\"/etc/containers/registries.conf\"}],\"initConfiguration\":{\"nodeRegistration\":{\"kubeletExtraArgs\":{\"cgroup-driver\":\"systemd\",\"container-runtime\":\"remote\",\"container-runtime-endpoint\":\"unix:///var/run/crio/crio.sock\",\"feature-gates\":\"AllAlpha=false\",\"node-labels\":\"metal3.io/uuid={{ ds.meta_data.uuid }}\",\"provider-id\":\"metal3://{{ ds.meta_data.uuid }}\",\"runtime-request-timeout\":\"5m\"},\"name\":\"{{ ds.meta_data.name }}\"}},\"joinConfiguration\":{\"controlPlane\":{},\"nodeRegistration\":{\"kubeletExtraArgs\":{\"cgroup-driver\":\"systemd\",\"container-runtime\":\"remote\",\"container-runtime-endpoint\":\"unix:///var/run/crio/crio.sock\",\"feature-gates\":\"AllAlpha=false\",\"node-labels\":\"metal3.io/uuid={{ ds.meta_data.uuid }}\",\"provider-id\":\"metal3://{{ ds.meta_data.uuid }}\",\"runtime-request-timeout\":\"5m\"},\"name\":\"{{ ds.meta_data.name }}\"}},\"postKubeadmCommands\":[\"mkdir -p /home/metal3/.kube\",\"cp /etc/kubernetes/admin.conf /home/metal3/.kube/config\",\"systemctl enable --now keepalived\",\"chown metal3:metal3 /home/metal3/.kube/config\"],\"preKubeadmCommands\":[\"netplan apply\",\"systemctl enable --now crio kubelet\",\"if (curl -sk --max-time 10 https://192.168.111.249:6443/healthz); then echo \\\"keepalived already running\\\";else systemctl start keepalived; fi\",\"systemctl link /lib/systemd/system/monitor.keepalived.service\",\"systemctl enable monitor.keepalived.service\",\"systemctl start monitor.keepalived.service\"],\"users\":[{\"name\":\"metal3\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC0aKU/BbVr0FwTPKXFry6KAQ84SoE9MKSHfmbivmo1ZGPzRH7V28X6nbFq9o25xp0h9YfOH7piu2QjPezC3m/LoozAIWJslNqInyZ8n3AO9zftd5TXwZ0U9jAUaDruDy9XgZJlpvF3JV5ksCeg3MdGNk9xUYu6V1Bbx/ESeKejgxrDdvzY7huRK3T9zwq9p2Mvt5K3QlwEWNjTdK3h0xH8V3ua8zK71Sj1X7RByspmxAeCkY9YiVXaQI5gWGPBP2WXYg0VjuKDhDeHFVpkuII1QiC/5iJtfLwWb9SSSJZIU48P2KE+LO16oEziLvMi/CNVA9+639nN55+TUlnGQGy6J9uO6CdvJYsnuvRM/uGpGcyU8xQsWy+9dlUdkYIlMTOTGjCG6jCHFTxaOS60CtsDQAMkq4pjt6bMXTF8zCODAoWPtCRW5WwRy3O0H62DJZkf2bV6BoPyp+C3NjM9C6RdzmY1ROloQfvJN0pl7DdL9tXDogSdTWK90Yefh1jTMi0= capm3@capm3\"],\"sudo\":\"ALL=(ALL) NOPASSWD:ALL\"}]},\"machineTemplate\":{\"infrastructureRef\":{\"apiVersion\":\"infrastructure.cluster.x-k8s.io/v1beta1\",\"kind\":\"Metal3MachineTemplate\",\"name\":\"test1-controlplane\"},\"nodeDrainTimeout\":\"0s\"},\"replicas\":3,\"rolloutStrategy\":{\"rollingUpdate\":{\"maxSurge\":0}},\"version\":\"v1.21.1\"}}\n"}, "creationTimestamp": "2021-11-19T15:15:57Z", "finalizers": ["kubeadm.controlplane.cluster.x-k8s.io"], "generation": 2, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:conditions": {}, "f:initialized": {}, "f:observedGeneration": {}, "f:ready": {}, "f:readyReplicas": {}, "f:replicas": {}, "f:selector": {}, "f:unavailableReplicas": {}, "f:updatedReplicas": {}, "f:version": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:10:07Z"}, {"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"kubeadm.controlplane.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"efa301fe-d967-4fba-be67-c19a396b89d5\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:kubeadmConfigSpec": {".": {}, "f:clusterConfiguration": {".": {}, "f:apiServer": {}, "f:controllerManager": {}, "f:dns": {}, "f:etcd": {}, "f:networking": {}, "f:scheduler": {}}, "f:files": {}, "f:initConfiguration": {".": {}, "f:localAPIEndpoint": {}, "f:nodeRegistration": {".": {}, "f:kubeletExtraArgs": {".": {}, "f:cgroup-driver": {}, "f:container-runtime": {}, "f:container-runtime-endpoint": {}, "f:feature-gates": {}, "f:node-labels": {}, "f:provider-id": {}, "f:runtime-request-timeout": {}}, "f:name": {}}}, "f:joinConfiguration": {".": {}, "f:controlPlane": {".": {}, "f:localAPIEndpoint": {}}, "f:discovery": {}, "f:nodeRegistration": {".": {}, "f:kubeletExtraArgs": {".": {}, "f:cgroup-driver": {}, "f:container-runtime": {}, "f:container-runtime-endpoint": {}, "f:feature-gates": {}, "f:node-labels": {}, "f:provider-id": {}, "f:runtime-request-timeout": {}}, "f:name": {}}}, "f:postKubeadmCommands": {}, "f:preKubeadmCommands": {}, "f:users": {}}, "f:machineTemplate": {".": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:namespace": {}}, "f:metadata": {}, "f:nodeDrainTimeout": {}}, "f:replicas": {}, "f:rolloutStrategy": {".": {}, "f:rollingUpdate": {".": {}, "f:maxSurge": {}}, "f:type": {}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:56Z"}, {"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:machineTemplate": {"f:infrastructureRef": {"f:name": {}}}, "f:version": {}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:20:01Z"}], "name": "test1", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "Cluster", "name": "test1", "uid": "efa301fe-d967-4fba-be67-c19a396b89d5"}], "resourceVersion": "7834", "uid": "fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}, "spec": {"kubeadmConfigSpec": {"clusterConfiguration": {"apiServer": {}, "controllerManager": {}, "dns": {}, "etcd": {}, "networking": {}, "scheduler": {}}, "files": [{"content": "#!/bin/bash\nwhile :; do\n  curl -sk https://127.0.0.1:6443/healthz 1>&2 > /dev/null\n  isOk=$?\n  isActive=$(systemctl show -p ActiveState keepalived.service | cut -d'=' -f2)\n  if [ $isOk == \"0\" ] &&  [ $isActive != \"active\" ]; then\n    logger 'API server is healthy, however keepalived is not running, starting keepalived'\n    echo 'API server is healthy, however keepalived is not running, starting keepalived'\n    sudo systemctl start keepalived.service\n  elif [ $isOk != \"0\" ] &&  [ $isActive == \"active\" ]; then\n    logger 'API server is not healthy, however keepalived running, stopping keepalived'\n    echo 'API server is not healthy, however keepalived running, stopping keepalived'\n    sudo systemctl stop keepalived.service\n  fi\n  sleep 5\ndone\n", "owner": "root:root", "path": "/usr/local/bin/monitor.keepalived.sh", "permissions": "0755"}, {"content": "[Unit]\nDescription=Monitors keepalived adjusts status with that of API server\nAfter=syslog.target network-online.target\n\n[Service]\nType=simple\nRestart=always\nExecStart=/usr/local/bin/monitor.keepalived.sh\n\n[Install]\nWantedBy=multi-user.target\n", "owner": "root:root", "path": "/lib/systemd/system/monitor.keepalived.service"}, {"content": "! Configuration File for keepalived\nglobal_defs {\n    notification_email {\n    sysadmin@example.com\n    support@example.com\n    }\n    notification_email_from lb@example.com\n    smtp_server localhost\n    smtp_connect_timeout 30\n}\nvrrp_instance VI_2 {\n    state MASTER\n    interface enp2s0\n    virtual_router_id 2\n    priority 101\n    advert_int 1\n    virtual_ipaddress {\n        192.168.111.249\n    }\n}\n", "path": "/etc/keepalived/keepalived.conf"}, {"content": "network:\n  version: 2\n  renderer: networkd\n  bridges:\n    ironicendpoint:\n      interfaces: [enp1s0]\n      addresses:\n      - {{ ds.meta_data.provisioningIP }}/{{ ds.meta_data.provisioningCIDR }}\n", "owner": "root:root", "path": "/etc/netplan/52-ironicendpoint.yaml", "permissions": "0644"}, {"content": "[registries.search]\nregistries = ['docker.io']\n\n[registries.insecure]\nregistries = ['192.168.111.1:5000']\n", "path": "/etc/containers/registries.conf"}], "initConfiguration": {"localAPIEndpoint": {}, "nodeRegistration": {"kubeletExtraArgs": {"cgroup-driver": "systemd", "container-runtime": "remote", "container-runtime-endpoint": "unix:///var/run/crio/crio.sock", "feature-gates": "AllAlpha=false", "node-labels": "metal3.io/uuid={{ ds.meta_data.uuid }}", "provider-id": "metal3://{{ ds.meta_data.uuid }}", "runtime-request-timeout": "5m"}, "name": "{{ ds.meta_data.name }}"}}, "joinConfiguration": {"controlPlane": {"localAPIEndpoint": {}}, "discovery": {}, "nodeRegistration": {"kubeletExtraArgs": {"cgroup-driver": "systemd", "container-runtime": "remote", "container-runtime-endpoint": "unix:///var/run/crio/crio.sock", "feature-gates": "AllAlpha=false", "node-labels": "metal3.io/uuid={{ ds.meta_data.uuid }}", "provider-id": "metal3://{{ ds.meta_data.uuid }}", "runtime-request-timeout": "5m"}, "name": "{{ ds.meta_data.name }}"}}, "postKubeadmCommands": ["mkdir -p /home/metal3/.kube", "cp /etc/kubernetes/admin.conf /home/metal3/.kube/config", "systemctl enable --now keepalived", "chown metal3:metal3 /home/metal3/.kube/config"], "preKubeadmCommands": ["netplan apply", "systemctl enable --now crio kubelet", "if (curl -sk --max-time 10 https://192.168.111.249:6443/healthz); then echo \"keepalived already running\";else systemctl start keepalived; fi", "systemctl link /lib/systemd/system/monitor.keepalived.service", "systemctl enable monitor.keepalived.service", "systemctl start monitor.keepalived.service"], "users": [{"name": "metal3", "sshAuthorizedKeys": ["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC0aKU/BbVr0FwTPKXFry6KAQ84SoE9MKSHfmbivmo1ZGPzRH7V28X6nbFq9o25xp0h9YfOH7piu2QjPezC3m/LoozAIWJslNqInyZ8n3AO9zftd5TXwZ0U9jAUaDruDy9XgZJlpvF3JV5ksCeg3MdGNk9xUYu6V1Bbx/ESeKejgxrDdvzY7huRK3T9zwq9p2Mvt5K3QlwEWNjTdK3h0xH8V3ua8zK71Sj1X7RByspmxAeCkY9YiVXaQI5gWGPBP2WXYg0VjuKDhDeHFVpkuII1QiC/5iJtfLwWb9SSSJZIU48P2KE+LO16oEziLvMi/CNVA9+639nN55+TUlnGQGy6J9uO6CdvJYsnuvRM/uGpGcyU8xQsWy+9dlUdkYIlMTOTGjCG6jCHFTxaOS60CtsDQAMkq4pjt6bMXTF8zCODAoWPtCRW5WwRy3O0H62DJZkf2bV6BoPyp+C3NjM9C6RdzmY1ROloQfvJN0pl7DdL9tXDogSdTWK90Yefh1jTMi0= capm3@capm3"], "sudo": "ALL=(ALL) NOPASSWD:ALL"}]}, "machineTemplate": {"infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3MachineTemplate", "name": "test1-new-controlplane-image", "namespace": "metal3"}, "metadata": {}, "nodeDrainTimeout": "0s"}, "replicas": 3, "rolloutStrategy": {"rollingUpdate": {"maxSurge": 0}, "type": "RollingUpdate"}, "version": "v1.22.2"}, "status": {"conditions": [{"lastTransitionTime": "2021-11-19T15:16:30Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "Available"}, {"lastTransitionTime": "2021-11-19T15:16:10Z", "status": "True", "type": "CertificatesAvailable"}, {"lastTransitionTime": "2021-11-19T15:16:14Z", "status": "True", "type": "ControlPlaneComponentsHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:15Z", "status": "True", "type": "EtcdClusterHealthy"}, {"lastTransitionTime": "2021-11-19T15:16:13Z", "status": "True", "type": "MachinesCreated"}, {"lastTransitionTime": "2021-11-19T15:16:30Z", "status": "True", "type": "MachinesReady"}, {"lastTransitionTime": "2021-11-19T15:16:30Z", "status": "True", "type": "Resized"}], "initialized": true, "observedGeneration": 1, "ready": true, "readyReplicas": 3, "replicas": 3, "selector": "cluster.x-k8s.io/cluster-name=test1,cluster.x-k8s.io/control-plane", "updatedReplicas": 3, "version": "v1.21.1"}}}
Friday 19 November 2021  15:20:01 +0000 (0:00:01.044)       0:43:22.792 ******* 
FAILED retry: Verify that controlplane nodes using the new node image
_ansible_no_log: false
attempts: 1
changed: true
cmd: 'kubectl get bmh -n metal3 |

  grep -i provisioned | grep -c ''new-controlplane-image''

  '
delta: '0:00:00.127162'
end: '2021-11-19 15:20:01.987388'
failed_when_result: true
invocation:
  module_args:
    _raw_params: 'kubectl get bmh -n metal3 |

      grep -i provisioned | grep -c ''new-controlplane-image''

      '
    _uses_shell: true
    argv: null
    chdir: null
    creates: null
    executable: null
    removes: null
    stdin: null
    stdin_add_newline: true
    strip_empty_ends: true
    warn: false
msg: non-zero return code
rc: 1
retries: 501
start: '2021-11-19 15:20:01.860226'
stderr: ''
stderr_lines: []
stdout: '0'
stdout_lines:
- '0'

RETRYING: Verify that controlplane nodes using the new node image 1/500
RETRYING: Verify that controlplane nodes using the new node image 2/500
RETRYING: Verify that controlplane nodes using the new node image 3/500
RETRYING: Verify that controlplane nodes using the new node image 4/500
RETRYING: Verify that controlplane nodes using the new node image 5/500
RETRYING: Verify that controlplane nodes using the new node image 6/500
RETRYING: Verify that controlplane nodes using the new node image 7/500
RETRYING: Verify that controlplane nodes using the new node image 8/500
RETRYING: Verify that controlplane nodes using the new node image 9/500
RETRYING: Verify that controlplane nodes using the new node image 10/500
RETRYING: Verify that controlplane nodes using the new node image 11/500
RETRYING: Verify that controlplane nodes using the new node image 12/500
RETRYING: Verify that controlplane nodes using the new node image 13/500
RETRYING: Verify that controlplane nodes using the new node image 14/500
RETRYING: Verify that controlplane nodes using the new node image 15/500
RETRYING: Verify that controlplane nodes using the new node image 16/500
RETRYING: Verify that controlplane nodes using the new node image 17/500
RETRYING: Verify that controlplane nodes using the new node image 18/500
RETRYING: Verify that controlplane nodes using the new node image 19/500
RETRYING: Verify that controlplane nodes using the new node image 20/500
RETRYING: Verify that controlplane nodes using the new node image 21/500
RETRYING: Verify that controlplane nodes using the new node image 22/500
RETRYING: Verify that controlplane nodes using the new node image 23/500
RETRYING: Verify that controlplane nodes using the new node image 24/500
RETRYING: Verify that controlplane nodes using the new node image 25/500
RETRYING: Verify that controlplane nodes using the new node image 26/500
RETRYING: Verify that controlplane nodes using the new node image 27/500
RETRYING: Verify that controlplane nodes using the new node image 28/500
RETRYING: Verify that controlplane nodes using the new node image 29/500
RETRYING: Verify that controlplane nodes using the new node image 30/500
RETRYING: Verify that controlplane nodes using the new node image 31/500
RETRYING: Verify that controlplane nodes using the new node image 32/500
RETRYING: Verify that controlplane nodes using the new node image 33/500
RETRYING: Verify that controlplane nodes using the new node image 34/500
RETRYING: Verify that controlplane nodes using the new node image 35/500
RETRYING: Verify that controlplane nodes using the new node image 36/500
RETRYING: Verify that controlplane nodes using the new node image 37/500
RETRYING: Verify that controlplane nodes using the new node image 38/500
RETRYING: Verify that controlplane nodes using the new node image 39/500
RETRYING: Verify that controlplane nodes using the new node image 40/500
RETRYING: Verify that controlplane nodes using the new node image 41/500
RETRYING: Verify that controlplane nodes using the new node image 42/500
RETRYING: Verify that controlplane nodes using the new node image 43/500
RETRYING: Verify that controlplane nodes using the new node image 44/500
RETRYING: Verify that controlplane nodes using the new node image 45/500
RETRYING: Verify that controlplane nodes using the new node image 46/500
RETRYING: Verify that controlplane nodes using the new node image 47/500
RETRYING: Verify that controlplane nodes using the new node image 48/500
RETRYING: Verify that controlplane nodes using the new node image 49/500
RETRYING: Verify that controlplane nodes using the new node image 50/500
RETRYING: Verify that controlplane nodes using the new node image 51/500
RETRYING: Verify that controlplane nodes using the new node image 52/500
RETRYING: Verify that controlplane nodes using the new node image 53/500
RETRYING: Verify that controlplane nodes using the new node image 54/500
RETRYING: Verify that controlplane nodes using the new node image 55/500
RETRYING: Verify that controlplane nodes using the new node image 56/500
RETRYING: Verify that controlplane nodes using the new node image 57/500
RETRYING: Verify that controlplane nodes using the new node image 58/500
RETRYING: Verify that controlplane nodes using the new node image 59/500
RETRYING: Verify that controlplane nodes using the new node image 60/500
RETRYING: Verify that controlplane nodes using the new node image 61/500
RETRYING: Verify that controlplane nodes using the new node image 62/500
RETRYING: Verify that controlplane nodes using the new node image 63/500
RETRYING: Verify that controlplane nodes using the new node image 64/500
RETRYING: Verify that controlplane nodes using the new node image 65/500
RETRYING: Verify that controlplane nodes using the new node image 66/500
RETRYING: Verify that controlplane nodes using the new node image 67/500
RETRYING: Verify that controlplane nodes using the new node image 68/500
RETRYING: Verify that controlplane nodes using the new node image 69/500
RETRYING: Verify that controlplane nodes using the new node image 70/500
RETRYING: Verify that controlplane nodes using the new node image 71/500
RETRYING: Verify that controlplane nodes using the new node image 72/500
RETRYING: Verify that controlplane nodes using the new node image 73/500
RETRYING: Verify that controlplane nodes using the new node image 74/500
RETRYING: Verify that controlplane nodes using the new node image 75/500
RETRYING: Verify that controlplane nodes using the new node image 76/500
RETRYING: Verify that controlplane nodes using the new node image 77/500
RETRYING: Verify that controlplane nodes using the new node image 78/500
RETRYING: Verify that controlplane nodes using the new node image 79/500
RETRYING: Verify that controlplane nodes using the new node image 80/500
RETRYING: Verify that controlplane nodes using the new node image 81/500
RETRYING: Verify that controlplane nodes using the new node image 82/500
RETRYING: Verify that controlplane nodes using the new node image 83/500
RETRYING: Verify that controlplane nodes using the new node image 84/500
RETRYING: Verify that controlplane nodes using the new node image 85/500
RETRYING: Verify that controlplane nodes using the new node image 86/500

TASK [v1aX_integration_test : Verify that controlplane nodes using the new node image] ***
changed: [localhost] => {"attempts": 87, "changed": true, "cmd": "kubectl get bmh -n metal3 |\ngrep -i provisioned | grep -c 'new-controlplane-image'\n", "delta": "0:00:00.129978", "end": "2021-11-19 15:50:14.593890", "failed_when_result": false, "msg": "", "rc": 0, "start": "2021-11-19 15:50:14.463912", "stderr": "", "stderr_lines": [], "stdout": "3", "stdout_lines": ["3"]}
Friday 19 November 2021  15:50:14 +0000 (0:30:13.023)       1:13:35.816 ******* 

TASK [v1aX_integration_test : Untaint all CP nodes after upgrade of controlplane nodes] ***
task path: /home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/tasks/upgrade.yml:399
fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["kubectl", "taint", "nodes", "--all", "node-role.kubernetes.io/master-"], "delta": "0:00:00.188873", "end": "2021-11-19 15:50:15.064532", "msg": "non-zero return code", "rc": 1, "start": "2021-11-19 15:50:14.875659", "stderr": "taint \"node-role.kubernetes.io/master\" not found\ntaint \"node-role.kubernetes.io/master\" not found", "stderr_lines": ["taint \"node-role.kubernetes.io/master\" not found", "taint \"node-role.kubernetes.io/master\" not found"], "stdout": "node/test1-97h7c untainted\nnode/test1-v6gbh untainted", "stdout_lines": ["node/test1-97h7c untainted", "node/test1-v6gbh untainted"]}
...ignoring
Friday 19 November 2021  15:50:15 +0000 (0:00:00.476)       1:13:36.292 ******* 

TASK [v1aX_integration_test : Verify number of new control plane machines] *****
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "kubectl get machines -n \"metal3\" -l cluster.x-k8s.io/control-plane -o json |\njq -r '[ .items[] | select(.spec.version == \"v1.22.2\") | .status.nodeRef.name ] | length'\n", "delta": "0:00:00.253010", "end": "2021-11-19 15:50:15.622484", "failed_when_result": false, "msg": "", "rc": 0, "start": "2021-11-19 15:50:15.369474", "stderr": "", "stderr_lines": [], "stdout": "3", "stdout_lines": ["3"]}
Friday 19 November 2021  15:50:15 +0000 (0:00:00.562)       1:13:36.854 ******* 

TASK [v1aX_integration_test : Register worker nodes] ***************************
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Node", "metadata": {"annotations": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/cluster-namespace": "metal3", "cluster.x-k8s.io/machine": "test1-76bd89c664-4jx4f", "cluster.x-k8s.io/owner-kind": "MachineSet", "cluster.x-k8s.io/owner-name": "test1-76bd89c664", "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/crio/crio.sock", "node.alpha.kubernetes.io/ttl": "0", "projectcalico.org/IPv4Address": "192.168.111.102/24", "projectcalico.org/IPv4IPIPTunnelAddr": "192.168.6.0", "volumes.kubernetes.io/controller-managed-attach-detach": "true"}, "creationTimestamp": "2021-11-19T14:51:24Z", "labels": {"beta.kubernetes.io/arch": "amd64", "beta.kubernetes.io/os": "linux", "kubernetes.io/arch": "amd64", "kubernetes.io/hostname": "test1-76bd89c664-4jx4f", "kubernetes.io/os": "linux", "metal3.io/uuid": "1f1f0f2f-1031-45d9-8192-f3645deeba0d"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:kubeadm.alpha.kubernetes.io/cri-socket": {}}}}, "manager": "kubeadm", "operation": "Update", "time": "2021-11-19T14:51:24Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/cluster-namespace": {}, "f:cluster.x-k8s.io/machine": {}, "f:cluster.x-k8s.io/owner-kind": {}, "f:cluster.x-k8s.io/owner-name": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:51:50Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:volumes.kubernetes.io/controller-managed-attach-detach": {}}, "f:labels": {".": {}, "f:beta.kubernetes.io/arch": {}, "f:beta.kubernetes.io/os": {}, "f:kubernetes.io/arch": {}, "f:kubernetes.io/hostname": {}, "f:kubernetes.io/os": {}, "f:metal3.io/uuid": {}}}, "f:spec": {"f:providerID": {}}, "f:status": {"f:allocatable": {"f:ephemeral-storage": {}}, "f:capacity": {"f:ephemeral-storage": {}}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T15:07:42Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:projectcalico.org/IPv4Address": {}, "f:projectcalico.org/IPv4IPIPTunnelAddr": {}}}, "f:status": {"f:conditions": {"k:{\"type\":\"NetworkUnavailable\"}": {".": {}, "f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "calico-node", "operation": "Update", "time": "2021-11-19T15:07:55Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:node.alpha.kubernetes.io/ttl": {}}}, "f:spec": {"f:podCIDR": {}, "f:podCIDRs": {".": {}, "v:\"192.168.1.0/24\"": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T15:41:28Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"DiskPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"MemoryPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"PIDPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"Ready\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}}, "f:images": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:46:03Z"}], "name": "test1-76bd89c664-4jx4f", "resourceVersion": "16896", "uid": "c06b477c-08aa-4548-96aa-e18e7349e236"}, "spec": {"podCIDR": "192.168.1.0/24", "podCIDRs": ["192.168.1.0/24"], "providerID": "metal3://1f1f0f2f-1031-45d9-8192-f3645deeba0d"}, "status": {"addresses": [{"address": "192.168.111.102", "type": "InternalIP"}, {"address": "test1-76bd89c664-4jx4f", "type": "Hostname"}], "allocatable": {"cpu": "2", "ephemeral-storage": "46605923866", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "3928196Ki", "pods": "110"}, "capacity": {"cpu": "2", "ephemeral-storage": "50570664Ki", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "4030596Ki", "pods": "110"}, "conditions": [{"lastHeartbeatTime": "2021-11-19T15:07:55Z", "lastTransitionTime": "2021-11-19T15:07:55Z", "message": "Calico is running on this node", "reason": "CalicoIsUp", "status": "False", "type": "NetworkUnavailable"}, {"lastHeartbeatTime": "2021-11-19T15:46:03Z", "lastTransitionTime": "2021-11-19T15:41:52Z", "message": "kubelet has sufficient memory available", "reason": "KubeletHasSufficientMemory", "status": "False", "type": "MemoryPressure"}, {"lastHeartbeatTime": "2021-11-19T15:46:03Z", "lastTransitionTime": "2021-11-19T15:41:52Z", "message": "kubelet has no disk pressure", "reason": "KubeletHasNoDiskPressure", "status": "False", "type": "DiskPressure"}, {"lastHeartbeatTime": "2021-11-19T15:46:03Z", "lastTransitionTime": "2021-11-19T15:41:52Z", "message": "kubelet has sufficient PID available", "reason": "KubeletHasSufficientPID", "status": "False", "type": "PIDPressure"}, {"lastHeartbeatTime": "2021-11-19T15:46:03Z", "lastTransitionTime": "2021-11-19T15:41:52Z", "message": "kubelet is posting ready status. AppArmor enabled", "reason": "KubeletReady", "status": "True", "type": "Ready"}], "daemonEndpoints": {"kubeletEndpoint": {"Port": 10250}}, "images": [{"names": ["quay.io/metal3-io/ironic@sha256:2d77561e940cc2fd9ac46b30a1bfcc2cb8891d388d28472c9c48cdd9406e7e45", "quay.io/metal3-io/ironic:latest", "quay.io/metal3-io/ironic:master"], "sizeBytes": 908826635}, {"names": ["quay.io/metal3-io/ironic-ipa-downloader@sha256:d2d871675b629bf66514ccda2e2616c50670f7fff9d95b983a216f3a7fdaa1aa", "quay.io/metal3-io/ironic-ipa-downloader:latest"], "sizeBytes": 321261492}, {"names": ["docker.io/calico/cni@sha256:074c77c3275169c67d63600c75e94f95183c5e33cef9b00473b13d6db12390e5", "docker.io/calico/cni@sha256:32683594b8126ac47164c0f7710db16e6b5130a5d95c6cf450aa70aa96f8fa8a", "docker.io/calico/cni:v3.21.0"], "sizeBytes": 239709461}, {"names": ["quay.io/metal3-io/keepalived@sha256:4d2d44db445e898a08b072a29af18c325f92a06508b720ea9c95ecddc09c942c", "quay.io/metal3-io/keepalived:latest"], "sizeBytes": 225319234}, {"names": ["docker.io/calico/node@sha256:5a6982360e50924c976edbe4438a692e84af8e22cef17cb7d70ae9f7f263a22f", "docker.io/calico/node@sha256:c10a649e1e34afa950f060dac2c7b1a0535a36eef7fdeb8e6d19da578eba95e8", "docker.io/calico/node:v3.21.0"], "sizeBytes": 192426957}, {"names": ["docker.io/calico/node@sha256:7f9aa7e31fbcea7be64b153f8bcfd494de023679ec10d851a05667f0adb42650", "docker.io/calico/node@sha256:913955a36179a53d36a0df7f26319a5278991eea2514eab339cce15df24c220c", "docker.io/calico/node:v3.20.0"], "sizeBytes": 172565966}, {"names": ["docker.io/calico/cni@sha256:7c43c152cdf589ed789528c4055503d2f2b0ee943d7815c820fd8e99793f36b3", "docker.io/calico/cni@sha256:9906e2cca8006e1fe9fc3f358a3a06da6253afdd6fad05d594e884e8298ffe1d", "docker.io/calico/cni:v3.20.0"], "sizeBytes": 146031600}, {"names": ["docker.io/calico/kube-controllers@sha256:1d35cf38db34f9914ca65ab4dd106960e5e74bbff362af7a21b9cd4fa10b9121", "docker.io/calico/kube-controllers@sha256:aa5fe714495e5f9e7fe87f33773356813bc38161e64b9517391d665a98b9f608", "docker.io/calico/kube-controllers:v3.21.0"], "sizeBytes": 133103332}, {"names": ["k8s.gcr.io/kube-proxy@sha256:3aeeb5b760b096b0a8ae71fa4bc28dfbfe77b11a06bf40360b5caf17d5b4c5b8", "k8s.gcr.io/kube-proxy@sha256:53af05c2a6cddd32cebf5856f71994f5d41ef2a62824b87f140f2087f91e4a38", "k8s.gcr.io/kube-proxy:v1.21.1"], "sizeBytes": 132731403}, {"names": ["k8s.gcr.io/kube-proxy@sha256:132b7fc61d18b3ec4a35348f6c915b429f4757d92196e2ea8cd937aea3db41df", "k8s.gcr.io/kube-proxy@sha256:561d6cb95c32333db13ea847396167e903d97cf6e08dd937906c3dd0108580b7", "k8s.gcr.io/kube-proxy:v1.22.2"], "sizeBytes": 105457896}, {"names": ["quay.io/jetstack/cert-manager-controller@sha256:1968107354ef295e6ae3c64a85e80a794fe3f498c92f6acb6d8db93c63286965", "quay.io/jetstack/cert-manager-controller@sha256:7b039d469ed739a652f3bb8a1ddc122942b66cceeb85bac315449724ee64287f", "quay.io/jetstack/cert-manager-controller:v1.5.3"], "sizeBytes": 64608675}, {"names": ["docker.io/calico/kube-controllers@sha256:a850ce8daa84433a5641900693b0f8bc8e5177a4aa4cac8cf4b6cd8c24fd9886", "docker.io/calico/kube-controllers@sha256:b206ed8a5dd2384d11172c0244a94bea2d0d191208926fd6970484c3692641df", "docker.io/calico/kube-controllers:v3.20.0"], "sizeBytes": 63174961}, {"names": ["k8s.gcr.io/cluster-api/cluster-api-controller@sha256:05bda7fe528de43f4e6e46bd86b04348f7c9918a9166f4fd64ae98b7cc322809", "k8s.gcr.io/cluster-api/cluster-api-controller@sha256:24b1fce79b5bda9d4329fb865d129378330768e6a9bda04e287d73b797da5f80", "k8s.gcr.io/cluster-api/cluster-api-controller:v1.0.1"], "sizeBytes": 58905247}, {"names": ["192.168.111.1:5000/localimages/cluster-api-provider-metal3@sha256:496e0e44e4c3a82755aeeba4ad79b6ffb83724aae51ad17e1d2155f2ed0e9c4d", "192.168.111.1:5000/localimages/cluster-api-provider-metal3:main"], "sizeBytes": 54467974}, {"names": ["192.168.111.1:5000/localimages/ip-address-manager@sha256:b43e2c4b0954e6f4c878316016123c1d4a9ac8dfba6e185f87ab2fa0f1f0e3f9", "192.168.111.1:5000/localimages/ip-address-manager:main"], "sizeBytes": 51547525}, {"names": ["k8s.gcr.io/coredns/coredns@sha256:10ecc12177735e5a6fd6fa0127202776128d860ed7ab0341780ddaeb1f6dfe61", "k8s.gcr.io/coredns/coredns@sha256:cc8fb77bc2a0541949d1d9320a641b82fd392b0d3d8145469ca4709ae769980e", "k8s.gcr.io/coredns/coredns:v1.8.0"], "sizeBytes": 42585056}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:1cf3c28a3d384bb89d3fb3a73f6c8242eb4a40bd0a7c6c828692ded8aa3ea072", "docker.io/calico/pod2daemon-flexvol@sha256:c17e3e9871682bed00bfd33f8d6f00db1d1a126034a25bf5380355978e0c548d", "docker.io/calico/pod2daemon-flexvol:v3.20.0"], "sizeBytes": 21765440}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:43e238b3b093d0bcab8a7795e537759d56fa7d0bdc3325e1f0fc1a25bed6e68a", "docker.io/calico/pod2daemon-flexvol@sha256:5ac09d18f6688ee3a2ad4dc465c7b6f2c894e37a7a32a8510b838b77a17a2349", "docker.io/calico/pod2daemon-flexvol:v3.21.0"], "sizeBytes": 21458752}, {"names": ["k8s.gcr.io/pause@sha256:1ff6c18fbef2045af6b9c16bf034cc421a29027b800e4f9b68ae9b1cb3e9ae07", "k8s.gcr.io/pause@sha256:369201a612f7b2b585a8e6ca99f77a36bcdbd032463d815388a96800b63ef2c8", "k8s.gcr.io/pause:3.5"], "sizeBytes": 689969}], "nodeInfo": {"architecture": "amd64", "bootID": "16872f11-f259-4973-9eaf-7be7b603dbcd", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "580c73b0-bb65-4b2a-9761-d79d7b4d7002"}}}, {"apiVersion": "v1", "kind": "Node", "metadata": {"annotations": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/cluster-namespace": "metal3", "cluster.x-k8s.io/machine": "test1-76bd89c664-z8zr9", "cluster.x-k8s.io/owner-kind": "MachineSet", "cluster.x-k8s.io/owner-name": "test1-76bd89c664", "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/crio/crio.sock", "node.alpha.kubernetes.io/ttl": "0", "projectcalico.org/IPv4Address": "192.168.111.103/24", "projectcalico.org/IPv4IPIPTunnelAddr": "192.168.7.128", "volumes.kubernetes.io/controller-managed-attach-detach": "true"}, "creationTimestamp": "2021-11-19T15:07:09Z", "labels": {"beta.kubernetes.io/arch": "amd64", "beta.kubernetes.io/os": "linux", "kubernetes.io/arch": "amd64", "kubernetes.io/hostname": "test1-76bd89c664-z8zr9", "kubernetes.io/os": "linux", "metal3.io/uuid": "a3b5897b-6923-406c-9314-a89e423a1a80"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:kubeadm.alpha.kubernetes.io/cri-socket": {}}}}, "manager": "kubeadm", "operation": "Update", "time": "2021-11-19T15:07:09Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/cluster-namespace": {}, "f:cluster.x-k8s.io/machine": {}, "f:cluster.x-k8s.io/owner-kind": {}, "f:cluster.x-k8s.io/owner-name": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:07:12Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:volumes.kubernetes.io/controller-managed-attach-detach": {}}, "f:labels": {".": {}, "f:beta.kubernetes.io/arch": {}, "f:beta.kubernetes.io/os": {}, "f:kubernetes.io/arch": {}, "f:kubernetes.io/hostname": {}, "f:kubernetes.io/os": {}, "f:metal3.io/uuid": {}}}, "f:spec": {"f:providerID": {}}, "f:status": {"f:allocatable": {"f:ephemeral-storage": {}}, "f:capacity": {"f:ephemeral-storage": {}}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T15:07:49Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:projectcalico.org/IPv4Address": {}, "f:projectcalico.org/IPv4IPIPTunnelAddr": {}}}, "f:status": {"f:conditions": {"k:{\"type\":\"NetworkUnavailable\"}": {".": {}, "f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "calico-node", "operation": "Update", "time": "2021-11-19T15:07:58Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:node.alpha.kubernetes.io/ttl": {}}}, "f:spec": {"f:podCIDR": {}, "f:podCIDRs": {".": {}, "v:\"192.168.4.0/24\"": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T15:41:26Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"DiskPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"MemoryPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"PIDPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"Ready\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}}, "f:images": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:43:17Z"}], "name": "test1-76bd89c664-z8zr9", "resourceVersion": "17556", "uid": "afff5e28-26b8-451e-9614-6acc2381d84b"}, "spec": {"podCIDR": "192.168.4.0/24", "podCIDRs": ["192.168.4.0/24"], "providerID": "metal3://a3b5897b-6923-406c-9314-a89e423a1a80"}, "status": {"addresses": [{"address": "192.168.111.103", "type": "InternalIP"}, {"address": "test1-76bd89c664-z8zr9", "type": "Hostname"}], "allocatable": {"cpu": "2", "ephemeral-storage": "46605923866", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "3928188Ki", "pods": "110"}, "capacity": {"cpu": "2", "ephemeral-storage": "50570664Ki", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "4030588Ki", "pods": "110"}, "conditions": [{"lastHeartbeatTime": "2021-11-19T15:07:57Z", "lastTransitionTime": "2021-11-19T15:07:57Z", "message": "Calico is running on this node", "reason": "CalicoIsUp", "status": "False", "type": "NetworkUnavailable"}, {"lastHeartbeatTime": "2021-11-19T15:48:19Z", "lastTransitionTime": "2021-11-19T15:41:47Z", "message": "kubelet has sufficient memory available", "reason": "KubeletHasSufficientMemory", "status": "False", "type": "MemoryPressure"}, {"lastHeartbeatTime": "2021-11-19T15:48:19Z", "lastTransitionTime": "2021-11-19T15:41:47Z", "message": "kubelet has no disk pressure", "reason": "KubeletHasNoDiskPressure", "status": "False", "type": "DiskPressure"}, {"lastHeartbeatTime": "2021-11-19T15:48:19Z", "lastTransitionTime": "2021-11-19T15:41:47Z", "message": "kubelet has sufficient PID available", "reason": "KubeletHasSufficientPID", "status": "False", "type": "PIDPressure"}, {"lastHeartbeatTime": "2021-11-19T15:48:19Z", "lastTransitionTime": "2021-11-19T15:41:47Z", "message": "kubelet is posting ready status. AppArmor enabled", "reason": "KubeletReady", "status": "True", "type": "Ready"}], "daemonEndpoints": {"kubeletEndpoint": {"Port": 10250}}, "images": [{"names": ["docker.io/calico/cni@sha256:074c77c3275169c67d63600c75e94f95183c5e33cef9b00473b13d6db12390e5", "docker.io/calico/cni@sha256:32683594b8126ac47164c0f7710db16e6b5130a5d95c6cf450aa70aa96f8fa8a", "docker.io/calico/cni:v3.21.0"], "sizeBytes": 239709461}, {"names": ["docker.io/calico/node@sha256:5a6982360e50924c976edbe4438a692e84af8e22cef17cb7d70ae9f7f263a22f", "docker.io/calico/node@sha256:c10a649e1e34afa950f060dac2c7b1a0535a36eef7fdeb8e6d19da578eba95e8", "docker.io/calico/node:v3.21.0"], "sizeBytes": 192426957}, {"names": ["docker.io/calico/node@sha256:7f9aa7e31fbcea7be64b153f8bcfd494de023679ec10d851a05667f0adb42650", "docker.io/calico/node@sha256:913955a36179a53d36a0df7f26319a5278991eea2514eab339cce15df24c220c", "docker.io/calico/node:v3.20.0"], "sizeBytes": 172565966}, {"names": ["docker.io/calico/cni@sha256:7c43c152cdf589ed789528c4055503d2f2b0ee943d7815c820fd8e99793f36b3", "docker.io/calico/cni@sha256:9906e2cca8006e1fe9fc3f358a3a06da6253afdd6fad05d594e884e8298ffe1d", "docker.io/calico/cni:v3.20.0"], "sizeBytes": 146031600}, {"names": ["k8s.gcr.io/kube-proxy@sha256:3aeeb5b760b096b0a8ae71fa4bc28dfbfe77b11a06bf40360b5caf17d5b4c5b8", "k8s.gcr.io/kube-proxy@sha256:53af05c2a6cddd32cebf5856f71994f5d41ef2a62824b87f140f2087f91e4a38", "k8s.gcr.io/kube-proxy:v1.21.1"], "sizeBytes": 132731403}, {"names": ["k8s.gcr.io/kube-proxy@sha256:132b7fc61d18b3ec4a35348f6c915b429f4757d92196e2ea8cd937aea3db41df", "k8s.gcr.io/kube-proxy@sha256:561d6cb95c32333db13ea847396167e903d97cf6e08dd937906c3dd0108580b7", "k8s.gcr.io/kube-proxy:v1.22.2"], "sizeBytes": 105457896}, {"names": ["192.168.111.1:5000/localimages/baremetal-operator@sha256:d1323f075c3f519da71d744f1e0f6c9d5c4b55d971361639442fb0d145fce6ae", "192.168.111.1:5000/localimages/baremetal-operator:latest"], "sizeBytes": 69012032}, {"names": ["docker.io/calico/kube-controllers@sha256:a850ce8daa84433a5641900693b0f8bc8e5177a4aa4cac8cf4b6cd8c24fd9886", "docker.io/calico/kube-controllers@sha256:b206ed8a5dd2384d11172c0244a94bea2d0d191208926fd6970484c3692641df", "docker.io/calico/kube-controllers:v3.20.0"], "sizeBytes": 63174961}, {"names": ["k8s.gcr.io/cluster-api/kubeadm-control-plane-controller@sha256:2bbe09f469ad38d86a2b8586f93a44fedd7247240563fc1805df484d21198b85", "k8s.gcr.io/cluster-api/kubeadm-control-plane-controller@sha256:68ec2c73a2563b6b216079aa5a433f90499fdf14ceb686dc6c6383e034367947", "k8s.gcr.io/cluster-api/kubeadm-control-plane-controller:v1.0.1"], "sizeBytes": 61670047}, {"names": ["k8s.gcr.io/cluster-api/kubeadm-bootstrap-controller@sha256:d43ff6407d9a9b9a1ebbd87c1c06fe2f2f70e59627c5c1b5409091efa953001e", "k8s.gcr.io/cluster-api/kubeadm-bootstrap-controller@sha256:e1254daca0f1d1bafcaa2300a4ed819a73a7cfbe3fd8ff807dd465404055498c", "k8s.gcr.io/cluster-api/kubeadm-bootstrap-controller:v1.0.1"], "sizeBytes": 54339743}, {"names": ["gcr.io/kubebuilder/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486", "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c", "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0"], "sizeBytes": 50203713}, {"names": ["quay.io/jetstack/cert-manager-webhook@sha256:41ee98065ee0599d6af65c0e1cdf94bfa631d2bc4cb7567f571fd874eb38dd74", "quay.io/jetstack/cert-manager-webhook@sha256:ed6354190d259524d32ae74471f93bf46bfdcf4df6f73629eedf576cd87e10b8", "quay.io/jetstack/cert-manager-webhook:v1.5.3"], "sizeBytes": 47671703}, {"names": ["quay.io/jetstack/cert-manager-cainjector@sha256:7f965f1ff37e5b1ad492d48cc178ade01d55554eaaff4d26a6142727dd1f6c6a", "quay.io/jetstack/cert-manager-cainjector@sha256:de02e3f445cfe7c035f2a9939b948c4d043011713389d9437311a62740f20bef", "quay.io/jetstack/cert-manager-cainjector:v1.5.3"], "sizeBytes": 43514275}, {"names": ["k8s.gcr.io/coredns/coredns@sha256:10ecc12177735e5a6fd6fa0127202776128d860ed7ab0341780ddaeb1f6dfe61", "k8s.gcr.io/coredns/coredns@sha256:cc8fb77bc2a0541949d1d9320a641b82fd392b0d3d8145469ca4709ae769980e", "k8s.gcr.io/coredns/coredns:v1.8.0"], "sizeBytes": 42585056}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:1cf3c28a3d384bb89d3fb3a73f6c8242eb4a40bd0a7c6c828692ded8aa3ea072", "docker.io/calico/pod2daemon-flexvol@sha256:c17e3e9871682bed00bfd33f8d6f00db1d1a126034a25bf5380355978e0c548d", "docker.io/calico/pod2daemon-flexvol:v3.20.0"], "sizeBytes": 21765440}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:43e238b3b093d0bcab8a7795e537759d56fa7d0bdc3325e1f0fc1a25bed6e68a", "docker.io/calico/pod2daemon-flexvol@sha256:5ac09d18f6688ee3a2ad4dc465c7b6f2c894e37a7a32a8510b838b77a17a2349", "docker.io/calico/pod2daemon-flexvol:v3.21.0"], "sizeBytes": 21458752}, {"names": ["k8s.gcr.io/pause@sha256:1ff6c18fbef2045af6b9c16bf034cc421a29027b800e4f9b68ae9b1cb3e9ae07", "k8s.gcr.io/pause@sha256:369201a612f7b2b585a8e6ca99f77a36bcdbd032463d815388a96800b63ef2c8", "k8s.gcr.io/pause:3.5"], "sizeBytes": 689969}], "nodeInfo": {"architecture": "amd64", "bootID": "7049e95b-c4f9-4403-ab9d-0537d931d4b6", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "7bb4e9f8-745d-4d09-983a-6815b41fd8cb"}}}]}
Friday 19 November 2021  15:50:16 +0000 (0:00:00.892)       1:13:37.747 ******* 

TASK [v1aX_integration_test : Label worker for scheduling purpose] *************
changed: [localhost] => {"changed": true, "method": "patch", "result": {"apiVersion": "v1", "kind": "Node", "metadata": {"annotations": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/cluster-namespace": "metal3", "cluster.x-k8s.io/machine": "test1-76bd89c664-4jx4f", "cluster.x-k8s.io/owner-kind": "MachineSet", "cluster.x-k8s.io/owner-name": "test1-76bd89c664", "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/crio/crio.sock", "node.alpha.kubernetes.io/ttl": "0", "projectcalico.org/IPv4Address": "192.168.111.102/24", "projectcalico.org/IPv4IPIPTunnelAddr": "192.168.6.0", "volumes.kubernetes.io/controller-managed-attach-detach": "true"}, "creationTimestamp": "2021-11-19T14:51:24Z", "labels": {"beta.kubernetes.io/arch": "amd64", "beta.kubernetes.io/os": "linux", "kubernetes.io/arch": "amd64", "kubernetes.io/hostname": "test1-76bd89c664-4jx4f", "kubernetes.io/os": "linux", "metal3.io/uuid": "1f1f0f2f-1031-45d9-8192-f3645deeba0d", "type": "worker"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:kubeadm.alpha.kubernetes.io/cri-socket": {}}}}, "manager": "kubeadm", "operation": "Update", "time": "2021-11-19T14:51:24Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/cluster-namespace": {}, "f:cluster.x-k8s.io/machine": {}, "f:cluster.x-k8s.io/owner-kind": {}, "f:cluster.x-k8s.io/owner-name": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T14:51:50Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:volumes.kubernetes.io/controller-managed-attach-detach": {}}, "f:labels": {".": {}, "f:beta.kubernetes.io/arch": {}, "f:beta.kubernetes.io/os": {}, "f:kubernetes.io/arch": {}, "f:kubernetes.io/hostname": {}, "f:kubernetes.io/os": {}, "f:metal3.io/uuid": {}}}, "f:spec": {"f:providerID": {}}, "f:status": {"f:allocatable": {"f:ephemeral-storage": {}}, "f:capacity": {"f:ephemeral-storage": {}}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T15:07:42Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:projectcalico.org/IPv4Address": {}, "f:projectcalico.org/IPv4IPIPTunnelAddr": {}}}, "f:status": {"f:conditions": {"k:{\"type\":\"NetworkUnavailable\"}": {".": {}, "f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "calico-node", "operation": "Update", "time": "2021-11-19T15:07:55Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:node.alpha.kubernetes.io/ttl": {}}}, "f:spec": {"f:podCIDR": {}, "f:podCIDRs": {".": {}, "v:\"192.168.1.0/24\"": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T15:41:28Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"DiskPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"MemoryPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"PIDPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"Ready\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}}, "f:images": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:46:03Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {"f:type": {}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:50:17Z"}], "name": "test1-76bd89c664-4jx4f", "resourceVersion": "18130", "uid": "c06b477c-08aa-4548-96aa-e18e7349e236"}, "spec": {"podCIDR": "192.168.1.0/24", "podCIDRs": ["192.168.1.0/24"], "providerID": "metal3://1f1f0f2f-1031-45d9-8192-f3645deeba0d"}, "status": {"addresses": [{"address": "192.168.111.102", "type": "InternalIP"}, {"address": "test1-76bd89c664-4jx4f", "type": "Hostname"}], "allocatable": {"cpu": "2", "ephemeral-storage": "46605923866", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "3928196Ki", "pods": "110"}, "capacity": {"cpu": "2", "ephemeral-storage": "50570664Ki", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "4030596Ki", "pods": "110"}, "conditions": [{"lastHeartbeatTime": "2021-11-19T15:07:55Z", "lastTransitionTime": "2021-11-19T15:07:55Z", "message": "Calico is running on this node", "reason": "CalicoIsUp", "status": "False", "type": "NetworkUnavailable"}, {"lastHeartbeatTime": "2021-11-19T15:46:03Z", "lastTransitionTime": "2021-11-19T15:41:52Z", "message": "kubelet has sufficient memory available", "reason": "KubeletHasSufficientMemory", "status": "False", "type": "MemoryPressure"}, {"lastHeartbeatTime": "2021-11-19T15:46:03Z", "lastTransitionTime": "2021-11-19T15:41:52Z", "message": "kubelet has no disk pressure", "reason": "KubeletHasNoDiskPressure", "status": "False", "type": "DiskPressure"}, {"lastHeartbeatTime": "2021-11-19T15:46:03Z", "lastTransitionTime": "2021-11-19T15:41:52Z", "message": "kubelet has sufficient PID available", "reason": "KubeletHasSufficientPID", "status": "False", "type": "PIDPressure"}, {"lastHeartbeatTime": "2021-11-19T15:46:03Z", "lastTransitionTime": "2021-11-19T15:41:52Z", "message": "kubelet is posting ready status. AppArmor enabled", "reason": "KubeletReady", "status": "True", "type": "Ready"}], "daemonEndpoints": {"kubeletEndpoint": {"Port": 10250}}, "images": [{"names": ["quay.io/metal3-io/ironic@sha256:2d77561e940cc2fd9ac46b30a1bfcc2cb8891d388d28472c9c48cdd9406e7e45", "quay.io/metal3-io/ironic:latest", "quay.io/metal3-io/ironic:master"], "sizeBytes": 908826635}, {"names": ["quay.io/metal3-io/ironic-ipa-downloader@sha256:d2d871675b629bf66514ccda2e2616c50670f7fff9d95b983a216f3a7fdaa1aa", "quay.io/metal3-io/ironic-ipa-downloader:latest"], "sizeBytes": 321261492}, {"names": ["docker.io/calico/cni@sha256:074c77c3275169c67d63600c75e94f95183c5e33cef9b00473b13d6db12390e5", "docker.io/calico/cni@sha256:32683594b8126ac47164c0f7710db16e6b5130a5d95c6cf450aa70aa96f8fa8a", "docker.io/calico/cni:v3.21.0"], "sizeBytes": 239709461}, {"names": ["quay.io/metal3-io/keepalived@sha256:4d2d44db445e898a08b072a29af18c325f92a06508b720ea9c95ecddc09c942c", "quay.io/metal3-io/keepalived:latest"], "sizeBytes": 225319234}, {"names": ["docker.io/calico/node@sha256:5a6982360e50924c976edbe4438a692e84af8e22cef17cb7d70ae9f7f263a22f", "docker.io/calico/node@sha256:c10a649e1e34afa950f060dac2c7b1a0535a36eef7fdeb8e6d19da578eba95e8", "docker.io/calico/node:v3.21.0"], "sizeBytes": 192426957}, {"names": ["docker.io/calico/node@sha256:7f9aa7e31fbcea7be64b153f8bcfd494de023679ec10d851a05667f0adb42650", "docker.io/calico/node@sha256:913955a36179a53d36a0df7f26319a5278991eea2514eab339cce15df24c220c", "docker.io/calico/node:v3.20.0"], "sizeBytes": 172565966}, {"names": ["docker.io/calico/cni@sha256:7c43c152cdf589ed789528c4055503d2f2b0ee943d7815c820fd8e99793f36b3", "docker.io/calico/cni@sha256:9906e2cca8006e1fe9fc3f358a3a06da6253afdd6fad05d594e884e8298ffe1d", "docker.io/calico/cni:v3.20.0"], "sizeBytes": 146031600}, {"names": ["docker.io/calico/kube-controllers@sha256:1d35cf38db34f9914ca65ab4dd106960e5e74bbff362af7a21b9cd4fa10b9121", "docker.io/calico/kube-controllers@sha256:aa5fe714495e5f9e7fe87f33773356813bc38161e64b9517391d665a98b9f608", "docker.io/calico/kube-controllers:v3.21.0"], "sizeBytes": 133103332}, {"names": ["k8s.gcr.io/kube-proxy@sha256:3aeeb5b760b096b0a8ae71fa4bc28dfbfe77b11a06bf40360b5caf17d5b4c5b8", "k8s.gcr.io/kube-proxy@sha256:53af05c2a6cddd32cebf5856f71994f5d41ef2a62824b87f140f2087f91e4a38", "k8s.gcr.io/kube-proxy:v1.21.1"], "sizeBytes": 132731403}, {"names": ["k8s.gcr.io/kube-proxy@sha256:132b7fc61d18b3ec4a35348f6c915b429f4757d92196e2ea8cd937aea3db41df", "k8s.gcr.io/kube-proxy@sha256:561d6cb95c32333db13ea847396167e903d97cf6e08dd937906c3dd0108580b7", "k8s.gcr.io/kube-proxy:v1.22.2"], "sizeBytes": 105457896}, {"names": ["quay.io/jetstack/cert-manager-controller@sha256:1968107354ef295e6ae3c64a85e80a794fe3f498c92f6acb6d8db93c63286965", "quay.io/jetstack/cert-manager-controller@sha256:7b039d469ed739a652f3bb8a1ddc122942b66cceeb85bac315449724ee64287f", "quay.io/jetstack/cert-manager-controller:v1.5.3"], "sizeBytes": 64608675}, {"names": ["docker.io/calico/kube-controllers@sha256:a850ce8daa84433a5641900693b0f8bc8e5177a4aa4cac8cf4b6cd8c24fd9886", "docker.io/calico/kube-controllers@sha256:b206ed8a5dd2384d11172c0244a94bea2d0d191208926fd6970484c3692641df", "docker.io/calico/kube-controllers:v3.20.0"], "sizeBytes": 63174961}, {"names": ["k8s.gcr.io/cluster-api/cluster-api-controller@sha256:05bda7fe528de43f4e6e46bd86b04348f7c9918a9166f4fd64ae98b7cc322809", "k8s.gcr.io/cluster-api/cluster-api-controller@sha256:24b1fce79b5bda9d4329fb865d129378330768e6a9bda04e287d73b797da5f80", "k8s.gcr.io/cluster-api/cluster-api-controller:v1.0.1"], "sizeBytes": 58905247}, {"names": ["192.168.111.1:5000/localimages/cluster-api-provider-metal3@sha256:496e0e44e4c3a82755aeeba4ad79b6ffb83724aae51ad17e1d2155f2ed0e9c4d", "192.168.111.1:5000/localimages/cluster-api-provider-metal3:main"], "sizeBytes": 54467974}, {"names": ["192.168.111.1:5000/localimages/ip-address-manager@sha256:b43e2c4b0954e6f4c878316016123c1d4a9ac8dfba6e185f87ab2fa0f1f0e3f9", "192.168.111.1:5000/localimages/ip-address-manager:main"], "sizeBytes": 51547525}, {"names": ["k8s.gcr.io/coredns/coredns@sha256:10ecc12177735e5a6fd6fa0127202776128d860ed7ab0341780ddaeb1f6dfe61", "k8s.gcr.io/coredns/coredns@sha256:cc8fb77bc2a0541949d1d9320a641b82fd392b0d3d8145469ca4709ae769980e", "k8s.gcr.io/coredns/coredns:v1.8.0"], "sizeBytes": 42585056}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:1cf3c28a3d384bb89d3fb3a73f6c8242eb4a40bd0a7c6c828692ded8aa3ea072", "docker.io/calico/pod2daemon-flexvol@sha256:c17e3e9871682bed00bfd33f8d6f00db1d1a126034a25bf5380355978e0c548d", "docker.io/calico/pod2daemon-flexvol:v3.20.0"], "sizeBytes": 21765440}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:43e238b3b093d0bcab8a7795e537759d56fa7d0bdc3325e1f0fc1a25bed6e68a", "docker.io/calico/pod2daemon-flexvol@sha256:5ac09d18f6688ee3a2ad4dc465c7b6f2c894e37a7a32a8510b838b77a17a2349", "docker.io/calico/pod2daemon-flexvol:v3.21.0"], "sizeBytes": 21458752}, {"names": ["k8s.gcr.io/pause@sha256:1ff6c18fbef2045af6b9c16bf034cc421a29027b800e4f9b68ae9b1cb3e9ae07", "k8s.gcr.io/pause@sha256:369201a612f7b2b585a8e6ca99f77a36bcdbd032463d815388a96800b63ef2c8", "k8s.gcr.io/pause:3.5"], "sizeBytes": 689969}], "nodeInfo": {"architecture": "amd64", "bootID": "16872f11-f259-4973-9eaf-7be7b603dbcd", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "580c73b0-bb65-4b2a-9761-d79d7b4d7002"}}}}
Friday 19 November 2021  15:50:17 +0000 (0:00:00.887)       1:13:38.634 ******* 

TASK [v1aX_integration_test : Deploy workload with nodeAffinity] ***************
changed: [localhost] => {"changed": true, "duration": 25, "method": "create", "result": {"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"deployment.kubernetes.io/revision": "1"}, "creationTimestamp": "2021-11-19T15:50:18Z", "generation": 1, "managedFields": [{"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:progressDeadlineSeconds": {}, "f:replicas": {}, "f:revisionHistoryLimit": {}, "f:selector": {}, "f:strategy": {"f:rollingUpdate": {".": {}, "f:maxSurge": {}, "f:maxUnavailable": {}}, "f:type": {}}, "f:template": {"f:metadata": {"f:labels": {".": {}, "f:app": {}}}, "f:spec": {"f:affinity": {".": {}, "f:nodeAffinity": {".": {}, "f:requiredDuringSchedulingIgnoredDuringExecution": {}}}, "f:containers": {"k:{\"name\":\"nginx\"}": {".": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}}, "f:dnsPolicy": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:terminationGracePeriodSeconds": {}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:50:18Z"}, {"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:deployment.kubernetes.io/revision": {}}}, "f:status": {"f:availableReplicas": {}, "f:conditions": {".": {}, "k:{\"type\":\"Available\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Progressing\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:observedGeneration": {}, "f:readyReplicas": {}, "f:replicas": {}, "f:updatedReplicas": {}}}, "manager": "kube-controller-manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:50:40Z"}], "name": "workload-1-deployment", "namespace": "default", "resourceVersion": "18399", "uid": "be3e8710-5c23-47a2-be31-9aea5053a52b"}, "spec": {"progressDeadlineSeconds": 600, "replicas": 10, "revisionHistoryLimit": 10, "selector": {"matchLabels": {"app": "workload-1"}}, "strategy": {"rollingUpdate": {"maxSurge": "25%", "maxUnavailable": "25%"}, "type": "RollingUpdate"}, "template": {"metadata": {"creationTimestamp": null, "labels": {"app": "workload-1"}}, "spec": {"affinity": {"nodeAffinity": {"requiredDuringSchedulingIgnoredDuringExecution": {"nodeSelectorTerms": [{"matchExpressions": [{"key": "type", "operator": "In", "values": ["worker"]}]}]}}}, "containers": [{"image": "nginx", "imagePullPolicy": "Always", "name": "nginx", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File"}], "dnsPolicy": "ClusterFirst", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "terminationGracePeriodSeconds": 30}}}, "status": {"availableReplicas": 10, "conditions": [{"lastTransitionTime": "2021-11-19T15:50:39Z", "lastUpdateTime": "2021-11-19T15:50:39Z", "message": "Deployment has minimum availability.", "reason": "MinimumReplicasAvailable", "status": "True", "type": "Available"}, {"lastTransitionTime": "2021-11-19T15:50:18Z", "lastUpdateTime": "2021-11-19T15:50:40Z", "message": "ReplicaSet \"workload-1-deployment-6455cc7cb8\" has successfully progressed.", "reason": "NewReplicaSetAvailable", "status": "True", "type": "Progressing"}], "observedGeneration": 1, "readyReplicas": 10, "replicas": 10, "updatedReplicas": 10}}}
Friday 19 November 2021  15:50:43 +0000 (0:00:26.032)       1:14:04.667 ******* 

TASK [v1aX_integration_test : Show workload deployment status] *****************
ok: [localhost] => {
    "msg": {
        "changed": true,
        "duration": 25,
        "failed": false,
        "method": "create",
        "result": {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2021-11-19T15:50:18Z",
                "generation": 1,
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            ".": {},
                                            "f:nodeAffinity": {
                                                ".": {},
                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                            }
                                        },
                                        "f:containers": {
                                            "k:{\"name\":\"nginx\"}": {
                                                ".": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        },
                        "manager": "OpenAPI-Generator",
                        "operation": "Update",
                        "time": "2021-11-19T15:50:18Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2021-11-19T15:50:40Z"
                    }
                ],
                "name": "workload-1-deployment",
                "namespace": "default",
                "resourceVersion": "18399",
                "uid": "be3e8710-5c23-47a2-be31-9aea5053a52b"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 10,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "workload-1"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "workload-1"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "type",
                                                    "operator": "In",
                                                    "values": [
                                                        "worker"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "containers": [
                            {
                                "image": "nginx",
                                "imagePullPolicy": "Always",
                                "name": "nginx",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 10,
                "conditions": [
                    {
                        "lastTransitionTime": "2021-11-19T15:50:39Z",
                        "lastUpdateTime": "2021-11-19T15:50:39Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2021-11-19T15:50:18Z",
                        "lastUpdateTime": "2021-11-19T15:50:40Z",
                        "message": "ReplicaSet \"workload-1-deployment-6455cc7cb8\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 10,
                "replicas": 10,
                "updatedReplicas": 10
            }
        }
    }
}
Friday 19 November 2021  15:50:43 +0000 (0:00:00.075)       1:14:04.742 ******* 

TASK [v1aX_integration_test : Verify workload deployment] **********************
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"deployment.kubernetes.io/revision": "1"}, "creationTimestamp": "2021-11-19T15:50:18Z", "generation": 1, "managedFields": [{"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:progressDeadlineSeconds": {}, "f:replicas": {}, "f:revisionHistoryLimit": {}, "f:selector": {}, "f:strategy": {"f:rollingUpdate": {".": {}, "f:maxSurge": {}, "f:maxUnavailable": {}}, "f:type": {}}, "f:template": {"f:metadata": {"f:labels": {".": {}, "f:app": {}}}, "f:spec": {"f:affinity": {".": {}, "f:nodeAffinity": {".": {}, "f:requiredDuringSchedulingIgnoredDuringExecution": {}}}, "f:containers": {"k:{\"name\":\"nginx\"}": {".": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}}, "f:dnsPolicy": {}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:terminationGracePeriodSeconds": {}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:50:18Z"}, {"apiVersion": "apps/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:deployment.kubernetes.io/revision": {}}}, "f:status": {"f:availableReplicas": {}, "f:conditions": {".": {}, "k:{\"type\":\"Available\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Progressing\"}": {".": {}, "f:lastTransitionTime": {}, "f:lastUpdateTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:observedGeneration": {}, "f:readyReplicas": {}, "f:replicas": {}, "f:updatedReplicas": {}}}, "manager": "kube-controller-manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:50:40Z"}], "name": "workload-1-deployment", "namespace": "default", "resourceVersion": "18399", "uid": "be3e8710-5c23-47a2-be31-9aea5053a52b"}, "spec": {"progressDeadlineSeconds": 600, "replicas": 10, "revisionHistoryLimit": 10, "selector": {"matchLabels": {"app": "workload-1"}}, "strategy": {"rollingUpdate": {"maxSurge": "25%", "maxUnavailable": "25%"}, "type": "RollingUpdate"}, "template": {"metadata": {"creationTimestamp": null, "labels": {"app": "workload-1"}}, "spec": {"affinity": {"nodeAffinity": {"requiredDuringSchedulingIgnoredDuringExecution": {"nodeSelectorTerms": [{"matchExpressions": [{"key": "type", "operator": "In", "values": ["worker"]}]}]}}}, "containers": [{"image": "nginx", "imagePullPolicy": "Always", "name": "nginx", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File"}], "dnsPolicy": "ClusterFirst", "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "terminationGracePeriodSeconds": 30}}}, "status": {"availableReplicas": 10, "conditions": [{"lastTransitionTime": "2021-11-19T15:50:39Z", "lastUpdateTime": "2021-11-19T15:50:39Z", "message": "Deployment has minimum availability.", "reason": "MinimumReplicasAvailable", "status": "True", "type": "Available"}, {"lastTransitionTime": "2021-11-19T15:50:18Z", "lastUpdateTime": "2021-11-19T15:50:40Z", "message": "ReplicaSet \"workload-1-deployment-6455cc7cb8\" has successfully progressed.", "reason": "NewReplicaSetAvailable", "status": "True", "type": "Progressing"}], "observedGeneration": 1, "readyReplicas": 10, "replicas": 10, "updatedReplicas": 10}}]}
Friday 19 November 2021  15:50:45 +0000 (0:00:01.542)       1:14:06.285 ******* 

TASK [v1aX_integration_test : Update MachineDeployment maxSurge and maxUnavailable fields] ***
changed: [localhost] => {"changed": true, "method": "patch", "result": {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "MachineDeployment", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"cluster.x-k8s.io/v1beta1\",\"kind\":\"MachineDeployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"cluster.x-k8s.io/cluster-name\":\"test1\",\"nodepool\":\"nodepool-0\"},\"name\":\"test1\",\"namespace\":\"metal3\"},\"spec\":{\"clusterName\":\"test1\",\"replicas\":2,\"selector\":{\"matchLabels\":{\"cluster.x-k8s.io/cluster-name\":\"test1\",\"nodepool\":\"nodepool-0\"}},\"template\":{\"metadata\":{\"labels\":{\"cluster.x-k8s.io/cluster-name\":\"test1\",\"nodepool\":\"nodepool-0\"}},\"spec\":{\"bootstrap\":{\"configRef\":{\"apiVersion\":\"bootstrap.cluster.x-k8s.io/v1beta1\",\"kind\":\"KubeadmConfigTemplate\",\"name\":\"test1-workers\"}},\"clusterName\":\"test1\",\"infrastructureRef\":{\"apiVersion\":\"infrastructure.cluster.x-k8s.io/v1beta1\",\"kind\":\"Metal3MachineTemplate\",\"name\":\"test1-workers\"},\"nodeDrainTimeout\":\"0s\",\"version\":\"v1.21.1\"}}}}\n", "machinedeployment.clusters.x-k8s.io/revision": "1"}, "creationTimestamp": "2021-11-19T15:15:57Z", "generation": 2, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "nodepool": "nodepool-0"}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:observedGeneration": {}, "f:replicas": {}, "f:selector": {}, "f:updatedReplicas": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:13:19Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}, "f:machinedeployment.clusters.x-k8s.io/revision": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:nodepool": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"efa301fe-d967-4fba-be67-c19a396b89d5\"}": {}}}, "f:spec": {".": {}, "f:clusterName": {}, "f:minReadySeconds": {}, "f:progressDeadlineSeconds": {}, "f:replicas": {}, "f:revisionHistoryLimit": {}, "f:selector": {".": {}, "f:matchLabels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:nodepool": {}}}, "f:strategy": {".": {}, "f:rollingUpdate": {}, "f:type": {}}, "f:template": {".": {}, "f:metadata": {".": {}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:nodepool": {}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}}, "f:nodeDrainTimeout": {}, "f:version": {}}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:57Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:availableReplicas": {}, "f:conditions": {}, "f:phase": {}, "f:readyReplicas": {}, "f:unavailableReplicas": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:41:46Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:strategy": {"f:rollingUpdate": {"f:maxSurge": {}, "f:maxUnavailable": {}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:50:45Z"}], "name": "test1", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Cluster", "name": "test1", "uid": "efa301fe-d967-4fba-be67-c19a396b89d5"}], "resourceVersion": "18427", "uid": "5645cd3e-2f57-4c84-984e-ee016d113a14"}, "spec": {"clusterName": "test1", "minReadySeconds": 0, "progressDeadlineSeconds": 600, "replicas": 2, "revisionHistoryLimit": 1, "selector": {"matchLabels": {"cluster.x-k8s.io/cluster-name": "test1", "nodepool": "nodepool-0"}}, "strategy": {"rollingUpdate": {"maxSurge": 0, "maxUnavailable": 1}, "type": "RollingUpdate"}, "template": {"metadata": {"labels": {"cluster.x-k8s.io/cluster-name": "test1", "nodepool": "nodepool-0"}}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfigTemplate", "name": "test1-workers"}}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3MachineTemplate", "name": "test1-workers"}, "nodeDrainTimeout": "0s", "version": "v1.21.1"}}}, "status": {"availableReplicas": 2, "conditions": [{"lastTransitionTime": "2021-11-19T15:41:52Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:41:52Z", "status": "True", "type": "Available"}], "observedGeneration": 1, "phase": "Running", "readyReplicas": 2, "replicas": 2, "selector": "cluster.x-k8s.io/cluster-name=test1,nodepool=nodepool-0", "unavailableReplicas": 0, "updatedReplicas": 2}}}
Friday 19 November 2021  15:50:46 +0000 (0:00:00.963)       1:14:07.248 ******* 

TASK [v1aX_integration_test : Update boot-disk and kubernetes versions of worker node] ***
changed: [localhost] => {"changed": true, "method": "patch", "result": {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "MachineDeployment", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"cluster.x-k8s.io/v1beta1\",\"kind\":\"MachineDeployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"cluster.x-k8s.io/cluster-name\":\"test1\",\"nodepool\":\"nodepool-0\"},\"name\":\"test1\",\"namespace\":\"metal3\"},\"spec\":{\"clusterName\":\"test1\",\"replicas\":2,\"selector\":{\"matchLabels\":{\"cluster.x-k8s.io/cluster-name\":\"test1\",\"nodepool\":\"nodepool-0\"}},\"template\":{\"metadata\":{\"labels\":{\"cluster.x-k8s.io/cluster-name\":\"test1\",\"nodepool\":\"nodepool-0\"}},\"spec\":{\"bootstrap\":{\"configRef\":{\"apiVersion\":\"bootstrap.cluster.x-k8s.io/v1beta1\",\"kind\":\"KubeadmConfigTemplate\",\"name\":\"test1-workers\"}},\"clusterName\":\"test1\",\"infrastructureRef\":{\"apiVersion\":\"infrastructure.cluster.x-k8s.io/v1beta1\",\"kind\":\"Metal3MachineTemplate\",\"name\":\"test1-workers\"},\"nodeDrainTimeout\":\"0s\",\"version\":\"v1.21.1\"}}}}\n", "machinedeployment.clusters.x-k8s.io/revision": "1"}, "creationTimestamp": "2021-11-19T15:15:57Z", "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "nodepool": "nodepool-0"}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:replicas": {}, "f:selector": {}, "f:updatedReplicas": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:13:19Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}, "f:machinedeployment.clusters.x-k8s.io/revision": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:nodepool": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"efa301fe-d967-4fba-be67-c19a396b89d5\"}": {}}}, "f:spec": {".": {}, "f:clusterName": {}, "f:minReadySeconds": {}, "f:progressDeadlineSeconds": {}, "f:replicas": {}, "f:revisionHistoryLimit": {}, "f:selector": {".": {}, "f:matchLabels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:nodepool": {}}}, "f:strategy": {".": {}, "f:rollingUpdate": {}, "f:type": {}}, "f:template": {".": {}, "f:metadata": {".": {}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:nodepool": {}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}}, "f:nodeDrainTimeout": {}}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:57Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:availableReplicas": {}, "f:conditions": {}, "f:observedGeneration": {}, "f:phase": {}, "f:readyReplicas": {}, "f:unavailableReplicas": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:50:45Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:spec": {"f:strategy": {"f:rollingUpdate": {"f:maxSurge": {}, "f:maxUnavailable": {}}}, "f:template": {"f:spec": {"f:infrastructureRef": {"f:name": {}}, "f:version": {}}}}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2021-11-19T15:50:46Z"}], "name": "test1", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Cluster", "name": "test1", "uid": "efa301fe-d967-4fba-be67-c19a396b89d5"}], "resourceVersion": "18433", "uid": "5645cd3e-2f57-4c84-984e-ee016d113a14"}, "spec": {"clusterName": "test1", "minReadySeconds": 0, "progressDeadlineSeconds": 600, "replicas": 2, "revisionHistoryLimit": 1, "selector": {"matchLabels": {"cluster.x-k8s.io/cluster-name": "test1", "nodepool": "nodepool-0"}}, "strategy": {"rollingUpdate": {"maxSurge": 0, "maxUnavailable": 1}, "type": "RollingUpdate"}, "template": {"metadata": {"labels": {"cluster.x-k8s.io/cluster-name": "test1", "nodepool": "nodepool-0"}}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfigTemplate", "name": "test1-workers"}}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3MachineTemplate", "name": "test1-new-workers-image"}, "nodeDrainTimeout": "0s", "version": "v1.22.2"}}}, "status": {"availableReplicas": 2, "conditions": [{"lastTransitionTime": "2021-11-19T15:41:52Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:41:52Z", "status": "True", "type": "Available"}], "observedGeneration": 2, "phase": "Running", "readyReplicas": 2, "replicas": 2, "selector": "cluster.x-k8s.io/cluster-name=test1,nodepool=nodepool-0", "unavailableReplicas": 0, "updatedReplicas": 2}}}
Friday 19 November 2021  15:50:47 +0000 (0:00:00.954)       1:14:08.202 ******* 
FAILED retry: Verify that worker node is using the new boot-image
kind: BareMetalHost
name: node-0
status.provisioning:
  ID: 35737c4f-c705-420c-8fbb-b18168f380ac
  bootMode: legacy
  image:
      checksum: http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum
      checksumType: md5
      format: raw
      url: http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img
  raid:
      hardwareRAIDVolumes: null
      softwareRAIDVolumes: []
  rootDeviceHints:
      deviceName: /dev/sda
  state: provisioned

kind: BareMetalHost
name: node-1
status.provisioning:
  ID: 8cbb6fef-fafa-4faf-bef9-11775e332e01
  bootMode: legacy
  image:
      checksum: http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum
      checksumType: md5
      format: raw
      url: http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img
  raid:
      hardwareRAIDVolumes: null
      softwareRAIDVolumes: []
  rootDeviceHints:
      deviceName: /dev/sda
  state: provisioned

kind: BareMetalHost
name: node-2
status.provisioning:
  ID: 6a081a9a-1f9a-484b-a049-84d7046ea75e
  bootMode: legacy
  image:
      checksum: http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum
      checksumType: md5
      format: raw
      url: http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img
  raid:
      hardwareRAIDVolumes: null
      softwareRAIDVolumes: []
  rootDeviceHints:
      deviceName: /dev/sda
  state: provisioned

kind: BareMetalHost
name: node-3
status.provisioning:
  ID: e9a243ac-0222-4ee6-9d2b-bfdd35e4d633
  bootMode: legacy
  image:
      checksum: http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum
      checksumType: md5
      format: raw
      url: http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img
  raid:
      hardwareRAIDVolumes: null
      softwareRAIDVolumes: []
  rootDeviceHints:
      deviceName: /dev/sda
  state: provisioned

kind: BareMetalHost
name: node-4
status.provisioning:
  ID: fdc504fe-2acf-46a4-b933-ee3606172693
  bootMode: legacy
  image:
      checksum: http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum
      checksumType: md5
      format: raw
      url: http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img
  raid:
      hardwareRAIDVolumes: null
      softwareRAIDVolumes: []
  rootDeviceHints:
      deviceName: /dev/sda
  state: provisioned

RETRYING: Verify that worker node is using the new boot-image 1/500
RETRYING: Verify that worker node is using the new boot-image 2/500
RETRYING: Verify that worker node is using the new boot-image 3/500
RETRYING: Verify that worker node is using the new boot-image 4/500
RETRYING: Verify that worker node is using the new boot-image 5/500
RETRYING: Verify that worker node is using the new boot-image 6/500
RETRYING: Verify that worker node is using the new boot-image 7/500
RETRYING: Verify that worker node is using the new boot-image 8/500
RETRYING: Verify that worker node is using the new boot-image 9/500
RETRYING: Verify that worker node is using the new boot-image 10/500
RETRYING: Verify that worker node is using the new boot-image 11/500
RETRYING: Verify that worker node is using the new boot-image 12/500
RETRYING: Verify that worker node is using the new boot-image 13/500
RETRYING: Verify that worker node is using the new boot-image 14/500
RETRYING: Verify that worker node is using the new boot-image 15/500
RETRYING: Verify that worker node is using the new boot-image 16/500
RETRYING: Verify that worker node is using the new boot-image 17/500
RETRYING: Verify that worker node is using the new boot-image 18/500
RETRYING: Verify that worker node is using the new boot-image 19/500
RETRYING: Verify that worker node is using the new boot-image 20/500
RETRYING: Verify that worker node is using the new boot-image 21/500
RETRYING: Verify that worker node is using the new boot-image 22/500
RETRYING: Verify that worker node is using the new boot-image 23/500
RETRYING: Verify that worker node is using the new boot-image 24/500

TASK [v1aX_integration_test : Verify that worker node is using the new boot-image] ***
ok: [localhost] => {"api_found": true, "attempts": 25, "changed": false, "resources": [{"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-0\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6230\",\"credentialsName\":\"node-0-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:93\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T15:15:59Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 5, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:operationHistory": {".": {}, "f:deprovision": {}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {}, "f:register": {}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:bootMode": {}, "f:image": {}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:42:58Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:userData": {".": {}, "f:namespace": {}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:59Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"5ae8fc63-b850-43b0-9608-3c18af860503\"}": {}, "k:{\"uid\":\"60ed567b-04c8-42b5-badd-a05142018390\"}": {}}}, "f:spec": {"f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:online": {}, "f:userData": {"f:name": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:44:44Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:goodCredentials": {"f:credentialsVersion": {}}, "f:lastUpdated": {}, "f:operationHistory": {"f:deprovision": {"f:end": {}, "f:start": {}}, "f:provision": {"f:end": {}, "f:start": {}}, "f:register": {"f:end": {}, "f:start": {}}}, "f:provisioning": {"f:ID": {}, "f:image": {"f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {"f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {"f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:52:16Z"}], "name": "node-0", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-new-controlplane-image-hk8qg", "uid": "5ae8fc63-b850-43b0-9608-3c18af860503"}], "resourceVersion": "19547", "uid": "c4a560e6-530b-480e-9fdd-67a17b13679d"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6230", "credentialsName": "node-0-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:93", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-new-controlplane-image-hk8qg", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img"}, "metaData": {"name": "test1-new-controlplane-image-hk8qg-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-new-controlplane-image-hk8qg-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-n7lbb", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-0-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "16395"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-0", "nics": [{"ip": "192.168.111.20", "mac": "00:32:34:b8:79:95", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::3b75:9a7:38c4:db26%enp2s0", "mac": "00:32:34:b8:79:95", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.30", "mac": "00:32:34:b8:79:93", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::7e4:4deb:a8d5:366d%enp1s0", "mac": "00:32:34:b8:79:93", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T15:52:16Z", "operationHistory": {"deprovision": {"end": "2021-11-19T15:44:40Z", "start": "2021-11-19T15:42:36Z"}, "inspect": {"end": "2021-11-19T14:21:48Z", "start": "2021-11-19T14:18:04Z"}, "provision": {"end": "2021-11-19T15:50:01Z", "start": "2021-11-19T15:44:49Z"}, "register": {"end": "2021-11-19T15:44:48Z", "start": "2021-11-19T15:44:46Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "0ae45a6a-d09f-4427-ae02-c1819daad93f", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-0-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "16395"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-1\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"redfish+http://192.168.111.1:8000/redfish/v1/Systems/580c73b0-bb65-4b2a-9761-d79d7b4d7002\",\"credentialsName\":\"node-1-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:97\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T15:16:01Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 5, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:operationHistory": {".": {}, "f:deprovision": {}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {}, "f:register": {}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:bootMode": {}, "f:image": {}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T14:51:17Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:userData": {".": {}, "f:namespace": {}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:16:01Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"20df4533-1b7a-4f68-a82c-0cbdc2d3253e\"}": {}, "k:{\"uid\":\"b397a461-0b9f-42c5-8bca-13c6abc0a5b7\"}": {}}}, "f:spec": {"f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:online": {}, "f:userData": {"f:name": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:54:30Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:goodCredentials": {"f:credentialsVersion": {}}, "f:lastUpdated": {}, "f:operationHistory": {"f:deprovision": {"f:end": {}, "f:start": {}}, "f:provision": {"f:end": {}, "f:start": {}}, "f:register": {"f:end": {}, "f:start": {}}}, "f:provisioning": {"f:ID": {}, "f:image": {"f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {"f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {"f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:59:00Z"}], "name": "node-1", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-new-workers-image-dssst", "uid": "20df4533-1b7a-4f68-a82c-0cbdc2d3253e"}], "resourceVersion": "21749", "uid": "db931a88-53b2-4cb4-a86f-e28cf7511b64"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "redfish+http://192.168.111.1:8000/redfish/v1/Systems/580c73b0-bb65-4b2a-9761-d79d7b4d7002", "credentialsName": "node-1-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:97", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-new-workers-image-dssst", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img"}, "metaData": {"name": "test1-new-workers-image-dssst-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-new-workers-image-dssst-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-workers-jzfrb", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-1-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "20342"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-1", "nics": [{"ip": "192.168.111.21", "mac": "00:32:34:b8:79:99", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::1418:ce16:723:a6cc%enp2s0", "mac": "00:32:34:b8:79:99", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.34", "mac": "00:32:34:b8:79:97", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::61ef:8c7a:20af:9369%enp1s0", "mac": "00:32:34:b8:79:97", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T15:59:00Z", "operationHistory": {"deprovision": {"end": "2021-11-19T15:54:28Z", "start": "2021-11-19T15:52:45Z"}, "inspect": {"end": "2021-11-19T14:21:33Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": "2021-11-19T15:59:00Z", "start": "2021-11-19T15:54:33Z"}, "register": {"end": "2021-11-19T15:54:32Z", "start": "2021-11-19T15:54:32Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "69bb6304-1437-4b07-a197-2fdbc6cc20b9", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-1-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "20342"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-2\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6232\",\"credentialsName\":\"node-2-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:9b\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T15:16:00Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 5, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:userData": {".": {}, "f:namespace": {}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:16:00Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"4e7dab5c-4bfb-4f17-bea0-4560c998a717\"}": {}, "k:{\"uid\":\"97d1715b-2f89-4f89-a2ae-e6ad52e85574\"}": {}}}, "f:spec": {"f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:online": {}, "f:userData": {"f:name": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:24:14Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T15:29:22Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:lastUpdated": {}, "f:provisioning": {"f:ID": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:52:34Z"}], "name": "node-2", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-new-controlplane-image-kwxzv", "uid": "97d1715b-2f89-4f89-a2ae-e6ad52e85574"}], "resourceVersion": "19646", "uid": "30bc82aa-9128-4f33-8030-ff101c1ef203"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6232", "credentialsName": "node-2-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:9b", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-new-controlplane-image-kwxzv", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img"}, "metaData": {"name": "test1-new-controlplane-image-kwxzv-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-new-controlplane-image-kwxzv-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-k8knn", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-2-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "9264"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-2", "nics": [{"ip": "192.168.111.22", "mac": "00:32:34:b8:79:9d", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::4543:596e:ca54:27b0%enp2s0", "mac": "00:32:34:b8:79:9d", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.38", "mac": "00:32:34:b8:79:9b", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::f6c7:ad5a:940c:e9c8%enp1s0", "mac": "00:32:34:b8:79:9b", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T15:52:34Z", "operationHistory": {"deprovision": {"end": "2021-11-19T15:24:10Z", "start": "2021-11-19T15:22:07Z"}, "inspect": {"end": "2021-11-19T14:21:47Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": "2021-11-19T15:29:22Z", "start": "2021-11-19T15:24:21Z"}, "register": {"end": "2021-11-19T15:24:20Z", "start": "2021-11-19T15:24:16Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "c6d65481-9f46-4ba4-b68c-9d1a2826ddab", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-2-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "9264"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-3\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"redfish+http://192.168.111.1:8000/redfish/v1/Systems/d244c2e6-fb91-4804-a12f-0aff629d7019\",\"credentialsName\":\"node-3-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:9f\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T15:16:00Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 5, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:userData": {".": {}, "f:namespace": {}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:16:00Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"057ab8df-0de7-4f03-b654-2881c5d59e91\"}": {}, "k:{\"uid\":\"fbb40227-0d24-48ec-8759-5e654f29648a\"}": {}}}, "f:spec": {"f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:online": {}, "f:userData": {"f:name": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:34:23Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T15:38:43Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:lastUpdated": {}, "f:provisioning": {"f:ID": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:52:41Z"}], "name": "node-3", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-new-controlplane-image-hcjzk", "uid": "fbb40227-0d24-48ec-8759-5e654f29648a"}], "resourceVersion": "19687", "uid": "6088bcc4-1a63-4815-b2c1-de6fd06a1f45"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "redfish+http://192.168.111.1:8000/redfish/v1/Systems/d244c2e6-fb91-4804-a12f-0aff629d7019", "credentialsName": "node-3-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:9f", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-new-controlplane-image-hcjzk", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img"}, "metaData": {"name": "test1-new-controlplane-image-hcjzk-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-new-controlplane-image-hcjzk-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-sbll9", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-3-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "12734"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-3", "nics": [{"ip": "192.168.111.23", "mac": "00:32:34:b8:79:a1", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::3d37:b969:de95:55ec%enp2s0", "mac": "00:32:34:b8:79:a1", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.42", "mac": "00:32:34:b8:79:9f", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::6876:f857:58c4:b12b%enp1s0", "mac": "00:32:34:b8:79:9f", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T15:52:41Z", "operationHistory": {"deprovision": {"end": "2021-11-19T15:34:19Z", "start": "2021-11-19T15:32:56Z"}, "inspect": {"end": "2021-11-19T14:21:47Z", "start": "2021-11-19T14:18:03Z"}, "provision": {"end": "2021-11-19T15:38:43Z", "start": "2021-11-19T15:34:24Z"}, "register": {"end": "2021-11-19T15:34:24Z", "start": "2021-11-19T15:34:24Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "e37e22de-55f9-4f55-b488-f245a6089a59", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.22.2-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-3-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "12734"}}}, {"apiVersion": "metal3.io/v1alpha1", "kind": "BareMetalHost", "metadata": {"annotations": {"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"metal3.io/v1alpha1\",\"kind\":\"BareMetalHost\",\"metadata\":{\"annotations\":{},\"name\":\"node-4\",\"namespace\":\"metal3\"},\"spec\":{\"bmc\":{\"address\":\"ipmi://192.168.111.1:6234\",\"credentialsName\":\"node-4-bmc-secret\"},\"bootMACAddress\":\"00:32:34:b8:79:a3\",\"bootMode\":\"legacy\",\"online\":true}}\n"}, "creationTimestamp": "2021-11-19T15:16:01Z", "finalizers": ["baremetalhost.metal3.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1"}, "managedFields": [{"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:errorCount": {}, "f:errorMessage": {}, "f:goodCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}, "f:hardware": {".": {}, "f:cpu": {".": {}, "f:arch": {}, "f:clockMegahertz": {}, "f:count": {}, "f:flags": {}, "f:model": {}}, "f:firmware": {".": {}, "f:bios": {".": {}, "f:date": {}, "f:vendor": {}, "f:version": {}}}, "f:hostname": {}, "f:nics": {}, "f:ramMebibytes": {}, "f:storage": {}, "f:systemVendor": {".": {}, "f:manufacturer": {}, "f:productName": {}}}, "f:hardwareProfile": {}, "f:operationHistory": {".": {}, "f:deprovision": {".": {}, "f:end": {}, "f:start": {}}, "f:inspect": {".": {}, "f:end": {}, "f:start": {}}, "f:provision": {".": {}, "f:end": {}, "f:start": {}}, "f:register": {".": {}, "f:end": {}, "f:start": {}}}, "f:operationalStatus": {}, "f:poweredOn": {}, "f:provisioning": {".": {}, "f:bootMode": {}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:raid": {".": {}, "f:hardwareRAIDVolumes": {}, "f:softwareRAIDVolumes": {}}, "f:rootDeviceHints": {".": {}, "f:deviceName": {}}, "f:state": {}}, "f:triedCredentials": {".": {}, "f:credentials": {".": {}, "f:name": {}, "f:namespace": {}}, "f:credentialsVersion": {}}}}, "manager": "baremetal-operator", "operation": "Update", "time": "2021-11-19T15:06:42Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:ownerReferences": {"k:{\"uid\":\"06cb695c-5237-47fa-8343-68beb1166ecd\"}": {}}}}, "manager": "cluster-api-provider-metal3-manager", "operation": "Update", "time": "2021-11-19T15:15:56Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:finalizers": {".": {}, "v:\"baremetalhost.metal3.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"3e61b2cc-f0c2-440b-abaa-c38876fa67fb\"}": {}}}, "f:spec": {".": {}, "f:automatedCleaningMode": {}, "f:bmc": {".": {}, "f:address": {}, "f:credentialsName": {}}, "f:bootMACAddress": {}, "f:bootMode": {}, "f:consumerRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}}, "f:image": {".": {}, "f:checksum": {}, "f:checksumType": {}, "f:format": {}, "f:url": {}}, "f:metaData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:networkData": {".": {}, "f:name": {}, "f:namespace": {}}, "f:online": {}, "f:userData": {".": {}, "f:name": {}, "f:namespace": {}}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:16:01Z"}, {"apiVersion": "metal3.io/v1alpha1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:lastUpdated": {}, "f:provisioning": {"f:ID": {}}}}, "manager": "baremetal-operator", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:52:41Z"}], "name": "node-4", "namespace": "metal3", "ownerReferences": [{"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "controller": true, "kind": "Metal3Machine", "name": "test1-workers-gf2cm", "uid": "3e61b2cc-f0c2-440b-abaa-c38876fa67fb"}], "resourceVersion": "19682", "uid": "6e77ed95-951b-42cc-88b8-de31991a7b19"}, "spec": {"automatedCleaningMode": "metadata", "bmc": {"address": "ipmi://192.168.111.1:6234", "credentialsName": "node-4-bmc-secret"}, "bootMACAddress": "00:32:34:b8:79:a3", "bootMode": "legacy", "consumerRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-workers-gf2cm", "namespace": "metal3"}, "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "metaData": {"name": "test1-workers-gf2cm-metadata", "namespace": "metal3"}, "networkData": {"name": "test1-workers-gf2cm-networkdata", "namespace": "metal3"}, "online": true, "userData": {"name": "test1-workers-qgzps", "namespace": "metal3"}}, "status": {"errorCount": 0, "errorMessage": "", "goodCredentials": {"credentials": {"name": "node-4-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6353"}, "hardware": {"cpu": {"arch": "x86_64", "clockMegahertz": 2095, "count": 2, "flags": ["3dnowprefetch", "abm", "adx", "aes", "apic", "arat", "arch_capabilities", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "bmi1", "bmi2", "clflush", "clflushopt", "cmov", "constant_tsc", "cpuid", "cpuid_fault", "cx16", "cx8", "de", "ept", "erms", "f16c", "fma", "fpu", "fsgsbase", "fxsr", "hle", "hypervisor", "invpcid", "invpcid_single", "lahf_lm", "lm", "mca", "mce", "md_clear", "mmx", "movbe", "mpx", "msr", "mtrr", "nopl", "nx", "pae", "pat", "pcid", "pclmulqdq", "pdpe1gb", "pge", "pni", "popcnt", "pse", "pse36", "pti", "rdrand", "rdseed", "rdtscp", "rep_good", "rtm", "sep", "smap", "smep", "ss", "sse", "sse2", "sse4_1", "sse4_2", "ssse3", "syscall", "tpr_shadow", "tsc", "tsc_adjust", "tsc_deadline_timer", "tsc_known_freq", "umip", "vme", "vmx", "vnmi", "vpid", "x2apic", "xsave", "xsavec", "xsaveopt", "xsaves", "xtopology"], "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"}, "firmware": {"bios": {"date": "04/01/2014", "vendor": "SeaBIOS", "version": "1.13.0-1ubuntu1.1"}}, "hostname": "node-4", "nics": [{"ip": "192.168.111.24", "mac": "00:32:34:b8:79:a5", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "fe80::ef5e:d24f:b921:dbef%enp2s0", "mac": "00:32:34:b8:79:a5", "model": "0x1af4 0x0001", "name": "enp2s0"}, {"ip": "172.22.0.46", "mac": "00:32:34:b8:79:a3", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}, {"ip": "fe80::b539:db85:4c3e:29ab%enp1s0", "mac": "00:32:34:b8:79:a3", "model": "0x1af4 0x0001", "name": "enp1s0", "pxe": true}], "ramMebibytes": 4096, "storage": [{"hctl": "0:0:0:0", "model": "QEMU HARDDISK", "name": "/dev/sda", "rotational": true, "serialNumber": "drive-scsi0-0-0-0", "sizeBytes": 53687091200, "type": "HDD", "vendor": "QEMU"}], "systemVendor": {"manufacturer": "QEMU", "productName": "Standard PC (Q35 + ICH9, 2009)"}}, "hardwareProfile": "unknown", "lastUpdated": "2021-11-19T15:52:41Z", "operationHistory": {"deprovision": {"end": "2021-11-19T15:03:05Z", "start": "2021-11-19T14:59:24Z"}, "inspect": {"end": "2021-11-19T14:21:48Z", "start": "2021-11-19T14:18:04Z"}, "provision": {"end": "2021-11-19T15:06:42Z", "start": "2021-11-19T15:03:06Z"}, "register": {"end": "2021-11-19T15:16:25Z", "start": "2021-11-19T15:16:13Z"}}, "operationalStatus": "OK", "poweredOn": true, "provisioning": {"ID": "bae6c3b3-06ef-4ead-b274-2cea9e1db627", "bootMode": "legacy", "image": {"checksum": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img.md5sum", "checksumType": "md5", "format": "raw", "url": "http://172.22.0.1/images/UBUNTU_20.04_NODE_IMAGE_K8S_v1.21.1-raw.img"}, "raid": {"hardwareRAIDVolumes": null, "softwareRAIDVolumes": []}, "rootDeviceHints": {"deviceName": "/dev/sda"}, "state": "provisioned"}, "triedCredentials": {"credentials": {"name": "node-4-bmc-secret", "namespace": "metal3"}, "credentialsVersion": "6353"}}}]}
Friday 19 November 2021  15:59:16 +0000 (0:08:29.426)       1:22:37.629 ******* 

TASK [v1aX_integration_test : Verify that the upgraded worker node has joined the cluster] ***
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Node", "metadata": {"annotations": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/cluster-namespace": "metal3", "cluster.x-k8s.io/machine": "test1-76bd89c664-z8zr9", "cluster.x-k8s.io/owner-kind": "MachineSet", "cluster.x-k8s.io/owner-name": "test1-76bd89c664", "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/crio/crio.sock", "node.alpha.kubernetes.io/ttl": "0", "projectcalico.org/IPv4Address": "192.168.111.103/24", "projectcalico.org/IPv4IPIPTunnelAddr": "192.168.7.128", "volumes.kubernetes.io/controller-managed-attach-detach": "true"}, "creationTimestamp": "2021-11-19T15:07:09Z", "labels": {"beta.kubernetes.io/arch": "amd64", "beta.kubernetes.io/os": "linux", "kubernetes.io/arch": "amd64", "kubernetes.io/hostname": "test1-76bd89c664-z8zr9", "kubernetes.io/os": "linux", "metal3.io/uuid": "a3b5897b-6923-406c-9314-a89e423a1a80"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:kubeadm.alpha.kubernetes.io/cri-socket": {}}}}, "manager": "kubeadm", "operation": "Update", "time": "2021-11-19T15:07:09Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/cluster-namespace": {}, "f:cluster.x-k8s.io/machine": {}, "f:cluster.x-k8s.io/owner-kind": {}, "f:cluster.x-k8s.io/owner-name": {}}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:07:12Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:volumes.kubernetes.io/controller-managed-attach-detach": {}}, "f:labels": {".": {}, "f:beta.kubernetes.io/arch": {}, "f:beta.kubernetes.io/os": {}, "f:kubernetes.io/arch": {}, "f:kubernetes.io/hostname": {}, "f:kubernetes.io/os": {}, "f:metal3.io/uuid": {}}}, "f:spec": {"f:providerID": {}}, "f:status": {"f:allocatable": {"f:ephemeral-storage": {}}, "f:capacity": {"f:ephemeral-storage": {}}}}, "manager": "kubelet", "operation": "Update", "time": "2021-11-19T15:07:49Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:projectcalico.org/IPv4Address": {}, "f:projectcalico.org/IPv4IPIPTunnelAddr": {}}}, "f:status": {"f:conditions": {"k:{\"type\":\"NetworkUnavailable\"}": {".": {}, "f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "calico-node", "operation": "Update", "time": "2021-11-19T15:07:58Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {"f:node.alpha.kubernetes.io/ttl": {}}}, "f:spec": {"f:podCIDR": {}, "f:podCIDRs": {".": {}, "v:\"192.168.4.0/24\"": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2021-11-19T15:41:26Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"DiskPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"MemoryPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"PIDPressure\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}, "k:{\"type\":\"Ready\"}": {"f:lastHeartbeatTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}}}, "f:images": {}}}, "manager": "kubelet", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:43:17Z"}], "name": "test1-76bd89c664-z8zr9", "resourceVersion": "21215", "uid": "afff5e28-26b8-451e-9614-6acc2381d84b"}, "spec": {"podCIDR": "192.168.4.0/24", "podCIDRs": ["192.168.4.0/24"], "providerID": "metal3://a3b5897b-6923-406c-9314-a89e423a1a80"}, "status": {"addresses": [{"address": "192.168.111.103", "type": "InternalIP"}, {"address": "test1-76bd89c664-z8zr9", "type": "Hostname"}], "allocatable": {"cpu": "2", "ephemeral-storage": "46605923866", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "3928188Ki", "pods": "110"}, "capacity": {"cpu": "2", "ephemeral-storage": "50570664Ki", "hugepages-1Gi": "0", "hugepages-2Mi": "0", "memory": "4030588Ki", "pods": "110"}, "conditions": [{"lastHeartbeatTime": "2021-11-19T15:07:57Z", "lastTransitionTime": "2021-11-19T15:07:57Z", "message": "Calico is running on this node", "reason": "CalicoIsUp", "status": "False", "type": "NetworkUnavailable"}, {"lastHeartbeatTime": "2021-11-19T15:57:12Z", "lastTransitionTime": "2021-11-19T15:41:47Z", "message": "kubelet has sufficient memory available", "reason": "KubeletHasSufficientMemory", "status": "False", "type": "MemoryPressure"}, {"lastHeartbeatTime": "2021-11-19T15:57:12Z", "lastTransitionTime": "2021-11-19T15:41:47Z", "message": "kubelet has no disk pressure", "reason": "KubeletHasNoDiskPressure", "status": "False", "type": "DiskPressure"}, {"lastHeartbeatTime": "2021-11-19T15:57:12Z", "lastTransitionTime": "2021-11-19T15:41:47Z", "message": "kubelet has sufficient PID available", "reason": "KubeletHasSufficientPID", "status": "False", "type": "PIDPressure"}, {"lastHeartbeatTime": "2021-11-19T15:57:12Z", "lastTransitionTime": "2021-11-19T15:41:47Z", "message": "kubelet is posting ready status. AppArmor enabled", "reason": "KubeletReady", "status": "True", "type": "Ready"}], "daemonEndpoints": {"kubeletEndpoint": {"Port": 10250}}, "images": [{"names": ["quay.io/metal3-io/ironic@sha256:2d77561e940cc2fd9ac46b30a1bfcc2cb8891d388d28472c9c48cdd9406e7e45", "quay.io/metal3-io/ironic:master"], "sizeBytes": 908826635}, {"names": ["quay.io/metal3-io/ironic-ipa-downloader@sha256:d2d871675b629bf66514ccda2e2616c50670f7fff9d95b983a216f3a7fdaa1aa", "quay.io/metal3-io/ironic-ipa-downloader:latest"], "sizeBytes": 321261492}, {"names": ["docker.io/calico/cni@sha256:074c77c3275169c67d63600c75e94f95183c5e33cef9b00473b13d6db12390e5", "docker.io/calico/cni@sha256:32683594b8126ac47164c0f7710db16e6b5130a5d95c6cf450aa70aa96f8fa8a", "docker.io/calico/cni:v3.21.0"], "sizeBytes": 239709461}, {"names": ["quay.io/metal3-io/keepalived@sha256:4d2d44db445e898a08b072a29af18c325f92a06508b720ea9c95ecddc09c942c", "quay.io/metal3-io/keepalived:latest"], "sizeBytes": 225319234}, {"names": ["docker.io/calico/node@sha256:5a6982360e50924c976edbe4438a692e84af8e22cef17cb7d70ae9f7f263a22f", "docker.io/calico/node@sha256:c10a649e1e34afa950f060dac2c7b1a0535a36eef7fdeb8e6d19da578eba95e8", "docker.io/calico/node:v3.21.0"], "sizeBytes": 192426957}, {"names": ["docker.io/calico/node@sha256:7f9aa7e31fbcea7be64b153f8bcfd494de023679ec10d851a05667f0adb42650", "docker.io/calico/node@sha256:913955a36179a53d36a0df7f26319a5278991eea2514eab339cce15df24c220c", "docker.io/calico/node:v3.20.0"], "sizeBytes": 172565966}, {"names": ["docker.io/calico/cni@sha256:7c43c152cdf589ed789528c4055503d2f2b0ee943d7815c820fd8e99793f36b3", "docker.io/calico/cni@sha256:9906e2cca8006e1fe9fc3f358a3a06da6253afdd6fad05d594e884e8298ffe1d", "docker.io/calico/cni:v3.20.0"], "sizeBytes": 146031600}, {"names": ["k8s.gcr.io/kube-proxy@sha256:3aeeb5b760b096b0a8ae71fa4bc28dfbfe77b11a06bf40360b5caf17d5b4c5b8", "k8s.gcr.io/kube-proxy@sha256:53af05c2a6cddd32cebf5856f71994f5d41ef2a62824b87f140f2087f91e4a38", "k8s.gcr.io/kube-proxy:v1.21.1"], "sizeBytes": 132731403}, {"names": ["k8s.gcr.io/kube-proxy@sha256:132b7fc61d18b3ec4a35348f6c915b429f4757d92196e2ea8cd937aea3db41df", "k8s.gcr.io/kube-proxy@sha256:561d6cb95c32333db13ea847396167e903d97cf6e08dd937906c3dd0108580b7", "k8s.gcr.io/kube-proxy:v1.22.2"], "sizeBytes": 105457896}, {"names": ["192.168.111.1:5000/localimages/baremetal-operator@sha256:d1323f075c3f519da71d744f1e0f6c9d5c4b55d971361639442fb0d145fce6ae", "192.168.111.1:5000/localimages/baremetal-operator:latest"], "sizeBytes": 69012032}, {"names": ["docker.io/calico/kube-controllers@sha256:a850ce8daa84433a5641900693b0f8bc8e5177a4aa4cac8cf4b6cd8c24fd9886", "docker.io/calico/kube-controllers@sha256:b206ed8a5dd2384d11172c0244a94bea2d0d191208926fd6970484c3692641df", "docker.io/calico/kube-controllers:v3.20.0"], "sizeBytes": 63174961}, {"names": ["k8s.gcr.io/cluster-api/kubeadm-control-plane-controller@sha256:2bbe09f469ad38d86a2b8586f93a44fedd7247240563fc1805df484d21198b85", "k8s.gcr.io/cluster-api/kubeadm-control-plane-controller@sha256:68ec2c73a2563b6b216079aa5a433f90499fdf14ceb686dc6c6383e034367947", "k8s.gcr.io/cluster-api/kubeadm-control-plane-controller:v1.0.1"], "sizeBytes": 61670047}, {"names": ["k8s.gcr.io/cluster-api/kubeadm-bootstrap-controller@sha256:d43ff6407d9a9b9a1ebbd87c1c06fe2f2f70e59627c5c1b5409091efa953001e", "k8s.gcr.io/cluster-api/kubeadm-bootstrap-controller@sha256:e1254daca0f1d1bafcaa2300a4ed819a73a7cfbe3fd8ff807dd465404055498c", "k8s.gcr.io/cluster-api/kubeadm-bootstrap-controller:v1.0.1"], "sizeBytes": 54339743}, {"names": ["gcr.io/kubebuilder/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486", "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c", "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0"], "sizeBytes": 50203713}, {"names": ["quay.io/jetstack/cert-manager-webhook@sha256:41ee98065ee0599d6af65c0e1cdf94bfa631d2bc4cb7567f571fd874eb38dd74", "quay.io/jetstack/cert-manager-webhook@sha256:ed6354190d259524d32ae74471f93bf46bfdcf4df6f73629eedf576cd87e10b8", "quay.io/jetstack/cert-manager-webhook:v1.5.3"], "sizeBytes": 47671703}, {"names": ["quay.io/jetstack/cert-manager-cainjector@sha256:7f965f1ff37e5b1ad492d48cc178ade01d55554eaaff4d26a6142727dd1f6c6a", "quay.io/jetstack/cert-manager-cainjector@sha256:de02e3f445cfe7c035f2a9939b948c4d043011713389d9437311a62740f20bef", "quay.io/jetstack/cert-manager-cainjector:v1.5.3"], "sizeBytes": 43514275}, {"names": ["k8s.gcr.io/coredns/coredns@sha256:10ecc12177735e5a6fd6fa0127202776128d860ed7ab0341780ddaeb1f6dfe61", "k8s.gcr.io/coredns/coredns@sha256:cc8fb77bc2a0541949d1d9320a641b82fd392b0d3d8145469ca4709ae769980e", "k8s.gcr.io/coredns/coredns:v1.8.0"], "sizeBytes": 42585056}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:1cf3c28a3d384bb89d3fb3a73f6c8242eb4a40bd0a7c6c828692ded8aa3ea072", "docker.io/calico/pod2daemon-flexvol@sha256:c17e3e9871682bed00bfd33f8d6f00db1d1a126034a25bf5380355978e0c548d", "docker.io/calico/pod2daemon-flexvol:v3.20.0"], "sizeBytes": 21765440}, {"names": ["docker.io/calico/pod2daemon-flexvol@sha256:43e238b3b093d0bcab8a7795e537759d56fa7d0bdc3325e1f0fc1a25bed6e68a", "docker.io/calico/pod2daemon-flexvol@sha256:5ac09d18f6688ee3a2ad4dc465c7b6f2c894e37a7a32a8510b838b77a17a2349", "docker.io/calico/pod2daemon-flexvol:v3.21.0"], "sizeBytes": 21458752}, {"names": ["k8s.gcr.io/pause@sha256:1ff6c18fbef2045af6b9c16bf034cc421a29027b800e4f9b68ae9b1cb3e9ae07", "k8s.gcr.io/pause@sha256:369201a612f7b2b585a8e6ca99f77a36bcdbd032463d815388a96800b63ef2c8", "k8s.gcr.io/pause:3.5"], "sizeBytes": 689969}], "nodeInfo": {"architecture": "amd64", "bootID": "7049e95b-c4f9-4403-ab9d-0537d931d4b6", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "7bb4e9f8-745d-4d09-983a-6815b41fd8cb"}}}]}
Friday 19 November 2021  15:59:17 +0000 (0:00:01.256)       1:22:38.885 ******* 
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: (machines.resources |
map(attribute='spec.version') | unique | length != 1) or (machines.resources |
map(attribute='spec.version') | first != "{{ UPGRADED_K8S_VERSION }}")

TASK [v1aX_integration_test : Verify that kubernetes version is upgraded for CP and worker nodes] ***
task path: /home/capm3/projects/metal3-dev-env/vm-setup/roles/v1aX_integration_test/tasks/upgrade.yml:522
fatal: [localhost]: FAILED! => {"api_found": true, "changed": false, "failed_when_result": true, "resources": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"creationTimestamp": "2021-11-19T15:15:58Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 1, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "machine-template-hash": "3268457220", "nodepool": "nodepool-0"}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:07:12Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:machine-template-hash": {}, "f:nodepool": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"e2a82233-8059-49a0-af47-4f3f9c3cc3d5\"}": {}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "clusterctl", "operation": "Update", "time": "2021-11-19T15:15:58Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:41:46Z"}], "name": "test1-76bd89c664-z8zr9", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "MachineSet", "name": "test1-76bd89c664", "uid": "e2a82233-8059-49a0-af47-4f3f9c3cc3d5"}], "resourceVersion": "15176", "uid": "616635da-1ef9-417c-b8be-eb3884741b8a"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-workers-qgzps", "namespace": "metal3", "uid": "e6870cd2-26ff-44cc-a45f-1122f45fa096"}, "dataSecretName": "test1-workers-qgzps"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-workers-gf2cm", "namespace": "metal3", "uid": "06cb695c-5237-47fa-8343-68beb1166ecd"}, "nodeDrainTimeout": "0s", "providerID": "metal3://a3b5897b-6923-406c-9314-a89e423a1a80", "version": "v1.21.1"}, "status": {"addresses": [{"address": "192.168.111.24", "type": "InternalIP"}, {"address": "fe80::ef5e:d24f:b921:dbef%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.46", "type": "InternalIP"}, {"address": "fe80::b539:db85:4c3e:29ab%enp1s0", "type": "InternalIP"}, {"address": "node-4", "type": "Hostname"}, {"address": "node-4", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:16:27Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:16:08Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:16:27Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:41:47Z", "status": "True", "type": "NodeHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T15:16:28Z", "nodeInfo": {"architecture": "amd64", "bootID": "7049e95b-c4f9-4403-ab9d-0537d931d4b6", "containerRuntimeVersion": "cri-o://1.21.2", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.21.1", "kubeletVersion": "v1.21.1", "machineID": "97eeb30f3f214f52a873db643b927c1e", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "7bb4e9f8-745d-4d09-983a-6815b41fd8cb"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-76bd89c664-z8zr9", "uid": "afff5e28-26b8-451e-9614-6acc2381d84b"}, "observedGeneration": 1, "phase": "Running"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"creationTimestamp": "2021-11-19T15:54:29Z", "finalizers": ["machine.cluster.x-k8s.io"], "generateName": "test1-76dc6d4cb5-", "generation": 2, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "machine-template-hash": "3287280761", "nodepool": "nodepool-0"}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:machine-template-hash": {}, "f:nodepool": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"65a2b2ed-bba0-4f2e-8be9-4c24aaad02c6\"}": {}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:version": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:54:30Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:lastUpdated": {}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:54:30Z"}], "name": "test1-76dc6d4cb5-69m7v", "namespace": "metal3", "ownerReferences": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "MachineSet", "name": "test1-76dc6d4cb5", "uid": "65a2b2ed-bba0-4f2e-8be9-4c24aaad02c6"}], "resourceVersion": "20341", "uid": "7ecf30ec-c96d-40b0-8181-bdafe56120b1"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-workers-jzfrb", "namespace": "metal3", "uid": "ee30dfba-8873-4158-a5c9-096c52c7e35d"}, "dataSecretName": "test1-workers-jzfrb"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-new-workers-image-dssst", "namespace": "metal3", "uid": "20df4533-1b7a-4f68-a82c-0cbdc2d3253e"}, "nodeDrainTimeout": "0s", "version": "v1.22.2"}, "status": {"bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:54:29Z", "message": "1 of 2 completed", "reason": "WaitingForInfrastructure", "severity": "Info", "status": "False", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:54:29Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:54:29Z", "reason": "WaitingForInfrastructure", "severity": "Info", "status": "False", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:54:29Z", "reason": "WaitingForNodeRef", "severity": "Info", "status": "False", "type": "NodeHealthy"}], "lastUpdated": "2021-11-19T15:54:30Z", "observedGeneration": 2, "phase": "Provisioning"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"annotations": {"controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": "{\"etcd\":{},\"networking\":{},\"apiServer\":{},\"controllerManager\":{},\"scheduler\":{},\"dns\":{}}"}, "creationTimestamp": "2021-11-19T15:24:13Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": {}}, "f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}, "f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:30:53Z"}], "name": "test1-97h7c", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "KubeadmControlPlane", "name": "test1", "uid": "fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}], "resourceVersion": "11512", "uid": "a081a2de-489f-433b-93df-3f93788118e3"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-k8knn", "namespace": "metal3", "uid": "e0a92882-3686-4cea-9258-6ef9c585f89c"}, "dataSecretName": "test1-k8knn"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-new-controlplane-image-kwxzv", "namespace": "metal3", "uid": "97d1715b-2f89-4f89-a2ae-e6ad52e85574"}, "nodeDrainTimeout": "0s", "providerID": "metal3://30bc82aa-9128-4f33-8030-ff101c1ef203", "version": "v1.22.2"}, "status": {"addresses": [{"address": "192.168.111.22", "type": "InternalIP"}, {"address": "fe80::4543:596e:ca54:27b0%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.38", "type": "InternalIP"}, {"address": "fe80::f6c7:ad5a:940c:e9c8%enp1s0", "type": "InternalIP"}, {"address": "node-2", "type": "Hostname"}, {"address": "node-2", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:30:53Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:30:55Z", "status": "True", "type": "APIServerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:24:13Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:30:55Z", "status": "True", "type": "ControllerManagerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:30:55Z", "status": "True", "type": "EtcdMemberHealthy"}, {"lastTransitionTime": "2021-11-19T15:30:55Z", "status": "True", "type": "EtcdPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:30:53Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:30:53Z", "status": "True", "type": "NodeHealthy"}, {"lastTransitionTime": "2021-11-19T15:30:55Z", "status": "True", "type": "SchedulerPodHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T15:30:53Z", "nodeInfo": {"architecture": "amd64", "bootID": "e6d80fe0-d8c3-4ebc-98a0-cd5619052299", "containerRuntimeVersion": "cri-o://1.22.0", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.22.2", "kubeletVersion": "v1.22.2", "machineID": "430e968f316d42e99a42ed5706da38fc", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "3f2d9cd0-48da-41d2-978e-ead5d5ca837a"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-97h7c", "uid": "90e5d914-a448-4ea2-903e-f9f85cfa89d4"}, "observedGeneration": 3, "phase": "Running"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"annotations": {"controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": "{\"etcd\":{},\"networking\":{},\"apiServer\":{},\"controllerManager\":{},\"scheduler\":{},\"dns\":{}}"}, "creationTimestamp": "2021-11-19T15:44:43Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": {}}, "f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d\"}": {}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:51:30Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:conditions": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:51:31Z"}], "name": "test1-j4g29", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "KubeadmControlPlane", "name": "test1", "uid": "fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}], "resourceVersion": "19283", "uid": "4896b547-7b7d-4dee-b3c4-05ea7981860d"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-n7lbb", "namespace": "metal3", "uid": "05784090-49fe-4874-98ab-60859f2ae252"}, "dataSecretName": "test1-n7lbb"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-new-controlplane-image-hk8qg", "namespace": "metal3", "uid": "5ae8fc63-b850-43b0-9608-3c18af860503"}, "nodeDrainTimeout": "0s", "providerID": "metal3://c4a560e6-530b-480e-9fdd-67a17b13679d", "version": "v1.22.2"}, "status": {"addresses": [{"address": "192.168.111.20", "type": "InternalIP"}, {"address": "fe80::3b75:9a7:38c4:db26%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.30", "type": "InternalIP"}, {"address": "fe80::7e4:4deb:a8d5:366d%enp1s0", "type": "InternalIP"}, {"address": "node-0", "type": "Hostname"}, {"address": "node-0", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:51:30Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:51:33Z", "message": "Waiting for startup or readiness probes", "reason": "PodProvisioning", "severity": "Info", "status": "False", "type": "APIServerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:44:43Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:51:33Z", "status": "True", "type": "ControllerManagerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:51:34Z", "status": "True", "type": "EtcdMemberHealthy"}, {"lastTransitionTime": "2021-11-19T15:51:33Z", "status": "True", "type": "EtcdPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:51:30Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:51:32Z", "status": "True", "type": "NodeHealthy"}, {"lastTransitionTime": "2021-11-19T15:51:33Z", "status": "True", "type": "SchedulerPodHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T15:51:30Z", "nodeInfo": {"architecture": "amd64", "bootID": "3ba50c49-337f-49d6-9f49-4614b22ec8c2", "containerRuntimeVersion": "cri-o://1.22.0", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.22.2", "kubeletVersion": "v1.22.2", "machineID": "430e968f316d42e99a42ed5706da38fc", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "f6cc7069-cb9d-4246-8239-3ea36c87f9bd"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-j4g29", "uid": "9349d3a2-a22d-4e36-8ace-9e7254f7b47b"}, "observedGeneration": 3, "phase": "Running"}}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "kind": "Machine", "metadata": {"annotations": {"controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": "{\"etcd\":{},\"networking\":{},\"apiServer\":{},\"controllerManager\":{},\"scheduler\":{},\"dns\":{}}"}, "creationTimestamp": "2021-11-19T15:34:22Z", "finalizers": ["machine.cluster.x-k8s.io"], "generation": 3, "labels": {"cluster.x-k8s.io/cluster-name": "test1", "cluster.x-k8s.io/control-plane": ""}, "managedFields": [{"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:controlplane.cluster.x-k8s.io/kubeadm-cluster-configuration": {}}, "f:finalizers": {".": {}, "v:\"machine.cluster.x-k8s.io\"": {}}, "f:labels": {".": {}, "f:cluster.x-k8s.io/cluster-name": {}, "f:cluster.x-k8s.io/control-plane": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d\"}": {}}}, "f:spec": {".": {}, "f:bootstrap": {".": {}, "f:configRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:dataSecretName": {}}, "f:clusterName": {}, "f:infrastructureRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:namespace": {}, "f:uid": {}}, "f:nodeDrainTimeout": {}, "f:providerID": {}, "f:version": {}}, "f:status": {".": {}, "f:addresses": {}, "f:bootstrapReady": {}, "f:infrastructureReady": {}, "f:lastUpdated": {}, "f:nodeInfo": {".": {}, "f:architecture": {}, "f:bootID": {}, "f:containerRuntimeVersion": {}, "f:kernelVersion": {}, "f:kubeProxyVersion": {}, "f:kubeletVersion": {}, "f:machineID": {}, "f:operatingSystem": {}, "f:osImage": {}, "f:systemUUID": {}}, "f:nodeRef": {".": {}, "f:apiVersion": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}, "f:observedGeneration": {}, "f:phase": {}}}, "manager": "manager", "operation": "Update", "time": "2021-11-19T15:40:00Z"}, {"apiVersion": "cluster.x-k8s.io/v1beta1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {}}}, "manager": "manager", "operation": "Update", "subresource": "status", "time": "2021-11-19T15:41:46Z"}], "name": "test1-v6gbh", "namespace": "metal3", "ownerReferences": [{"apiVersion": "controlplane.cluster.x-k8s.io/v1beta1", "blockOwnerDeletion": true, "controller": true, "kind": "KubeadmControlPlane", "name": "test1", "uid": "fe1db47b-6b9d-4e4b-8b8e-4511d5ffea3d"}], "resourceVersion": "15244", "uid": "61800dc5-2811-4f33-b1e0-be3a3ab71f53"}, "spec": {"bootstrap": {"configRef": {"apiVersion": "bootstrap.cluster.x-k8s.io/v1beta1", "kind": "KubeadmConfig", "name": "test1-sbll9", "namespace": "metal3", "uid": "5bcc03e2-f646-4781-9b9f-5e3ea697cd4a"}, "dataSecretName": "test1-sbll9"}, "clusterName": "test1", "infrastructureRef": {"apiVersion": "infrastructure.cluster.x-k8s.io/v1beta1", "kind": "Metal3Machine", "name": "test1-new-controlplane-image-hcjzk", "namespace": "metal3", "uid": "fbb40227-0d24-48ec-8759-5e654f29648a"}, "nodeDrainTimeout": "0s", "providerID": "metal3://6088bcc4-1a63-4815-b2c1-de6fd06a1f45", "version": "v1.22.2"}, "status": {"addresses": [{"address": "192.168.111.23", "type": "InternalIP"}, {"address": "fe80::3d37:b969:de95:55ec%enp2s0", "type": "InternalIP"}, {"address": "172.22.0.42", "type": "InternalIP"}, {"address": "fe80::6876:f857:58c4:b12b%enp1s0", "type": "InternalIP"}, {"address": "node-3", "type": "Hostname"}, {"address": "node-3", "type": "InternalDNS"}], "bootstrapReady": true, "conditions": [{"lastTransitionTime": "2021-11-19T15:40:00Z", "status": "True", "type": "Ready"}, {"lastTransitionTime": "2021-11-19T15:40:13Z", "status": "True", "type": "APIServerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:34:22Z", "status": "True", "type": "BootstrapReady"}, {"lastTransitionTime": "2021-11-19T15:40:10Z", "status": "True", "type": "ControllerManagerPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:40:03Z", "status": "True", "type": "EtcdMemberHealthy"}, {"lastTransitionTime": "2021-11-19T15:40:13Z", "status": "True", "type": "EtcdPodHealthy"}, {"lastTransitionTime": "2021-11-19T15:40:00Z", "status": "True", "type": "InfrastructureReady"}, {"lastTransitionTime": "2021-11-19T15:41:49Z", "status": "True", "type": "NodeHealthy"}, {"lastTransitionTime": "2021-11-19T15:40:10Z", "status": "True", "type": "SchedulerPodHealthy"}], "infrastructureReady": true, "lastUpdated": "2021-11-19T15:40:00Z", "nodeInfo": {"architecture": "amd64", "bootID": "23b1464e-7def-4ae1-aff4-b6c70806f33f", "containerRuntimeVersion": "cri-o://1.22.0", "kernelVersion": "5.4.0-42-generic", "kubeProxyVersion": "v1.22.2", "kubeletVersion": "v1.22.2", "machineID": "430e968f316d42e99a42ed5706da38fc", "operatingSystem": "linux", "osImage": "Ubuntu 20.04 LTS", "systemUUID": "d244c2e6-fb91-4804-a12f-0aff629d7019"}, "nodeRef": {"apiVersion": "v1", "kind": "Node", "name": "test1-v6gbh", "uid": "f1a3fda2-9c82-406a-944a-114b1ef9846d"}, "observedGeneration": 3, "phase": "Running"}}]}

PLAY RECAP *********************************************************************
localhost                  : ok=73   changed=34   unreachable=0    failed=1    skipped=8    rescued=0    ignored=1   

Friday 19 November 2021  15:59:18 +0000 (0:00:00.897)       1:22:39.783 ******* 
=============================================================================== 
v1aX_integration_test : Verify that controlplane nodes using the new node image  1813.02s
v1aX_integration_test : Wait until "5" BMHs become provisioned. ------ 1800.93s
v1aX_integration_test : Verify that worker node is using the new boot-image - 509.43s
make: *** [Makefile:7: upgrade] Error 2
capm3@capm3:~/projects/metal3-dev-env/scripts/feature_tests/upgrade$ 

